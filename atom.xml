<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-10T08:10:30.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>데이터전환 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-10T08:10:30.000Z</published>
    <updated>2020-05-10T08:10:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-데이터-전환-수행-계획"><a class="markdownIt-Anchor" href="#1-데이터-전환-수행-계획"></a> 1. 데이터 전환 수행 계획</h3><ul><li>데이터 전환 절차는 전환 계획 및 요건정의, 전환 설계, 전환 개발, 전환 테스트 및 검증으로 구분할 수 있음</li><li>데이터 전환 수행 계획 작성을 위해서는 데이터 전환 범위, 전환 일정, 전환 절차를 명확히 해야 함</li><li>데이터 전환 계획서의 주요 항목<ul><li>데이터 전환 개요, 데이터 전환 대상 및 범위</li><li>데이터 전환 환경구성, 데이터 전환 조직 및 역할</li><li>데이터 전환 일정, 데이터 전환 방안</li><li>데이너 정비 방안, 비상계획</li></ul></li></ul><h3 id="2-체크리스트"><a class="markdownIt-Anchor" href="#2-체크리스트"></a> 2. 체크리스트</h3><ul><li>전환 프로그램의 에러, 시간의 제약, 업무 프로세스의 변경, 빈번한 데이터 요건 변경, 하드웨어 장애 등의 <u>위험요소에 최대한 대응하기 위해 체크리스트 작성</u></li><li>체크리스트 기재항목<ul><li>데이터 전환 수행자가 수행할 작업의 상세 항목</li><li>작업 내용</li><li>예정 시작/종료 시각</li><li>작업 담당자 기재</li></ul></li></ul><h3 id="3-데이터-검증"><a class="markdownIt-Anchor" href="#3-데이터-검증"></a> 3. 데이터 검증</h3><ul><li><u>원천 시스템의 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행되었는지 여부를 확인하는 과정</u></li><li>검증 방법에 따른 분류<ul><li>로그 검증</li><li>기본 항목 검증</li><li>응용 프로그램 검증</li><li>응용 데이터 검증</li><li>값 검증</li></ul></li><li>데이터 단계에 따른 분류<ul><li>추출</li><li>전환</li><li>DB 적재</li><li>DB 적재 후</li><li>전환 완료 후</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-데이터-전환-수행-계획&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-데이터-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 체크리스트</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/</id>
    <published>2020-05-10T07:02:40.000Z</published>
    <updated>2020-05-10T07:02:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="체크리스트-개념"><a class="markdownIt-Anchor" href="#체크리스트-개념"></a> 체크리스트 개념</h3><ul><li>전환 프로그램의 에러, 시간의 제약, 업무 프로세스의 변경, 빈번한 데이터 요건 변경, 하드웨어 장애 등의 <u>위험요소에 최대한 대응하기 위해 체크리스트 작성</u></li><li>체크리스트 기재항목<ul><li>데이터 전환 수행자가 수행할 작업의 상세 항목</li><li>작업 내용</li><li>예정 시작/종료 시각</li><li>작업 담당자 기재</li></ul></li></ul><h3 id="데이터-전환-체크리스트-예시"><a class="markdownIt-Anchor" href="#데이터-전환-체크리스트-예시"></a> 데이터 전환 체크리스트 예시</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_02.png" alt="체크리스트" /></p><ul><li><b>작업프로세스는 포함 안됨</b></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;체크리스트-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#체크리스트-개념&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="체크리스트" scheme="https://hyeonukdev.github.io/tags/%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 데이터전환수행계획</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89%EA%B3%84%ED%9A%8D/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89%EA%B3%84%ED%9A%8D/</id>
    <published>2020-05-10T06:39:30.000Z</published>
    <updated>2020-05-10T06:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><ul><li>데이터 전환 수행 계획서의 모의 전환 일정에 따라 <u>모의 데이터 전환 차수별 데이터 전환 계획서와 본 데이터 전환 계획서를 작성</u></li><li>데이터 전환 수행자가 수행할 작업 항목, 작업 내용, 예정 시작/종료 시각, 작업 담당자를 포함하는 <u>상세 체크리스트를 작성</u></li><li>작성된 데이터 전환 계획서와 체크리스트에 따라 <u>데이터 변환 프로그램들을 실행하고 정상 동작 여부 모니터링 및 전환 결과 검증</u></li><li>데이터 전환 관정과 데이터 검증 결과를 분석하여 <u>데이터 전환 결과 보고서를 작성</u></li></ul><h3 id="데이터-전환-절차"><a class="markdownIt-Anchor" href="#데이터-전환-절차"></a> 데이터 전환 절차</h3><ul><li>요구사항 분석 단계(전환 계획 및 요건정의)</li><li>설계 단계(전환 설계)</li><li>구현 단계(전환 개발)</li><li>테스트 단계(전환 테스트 및 검증)</li><li>세부적으로 22가지 상세 단계<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_01.png" alt="데이터전환절차" /></li></ul><h3 id="데이터-전환-수행-계획"><a class="markdownIt-Anchor" href="#데이터-전환-수행-계획"></a> 데이터 전환 수행 계획</h3><h4 id="1-데이터-전환-범위-선정"><a class="markdownIt-Anchor" href="#1-데이터-전환-범위-선정"></a> 1. 데이터 전환 범위 선정</h4><ul><li>전환 대상의 상세 내용, 데이터 형식, 대상 건수 파악</li><li>필요에 따라서는 전환 제외 대상 기록</li></ul><h4 id="2-데이터-전환-일정-선정"><a class="markdownIt-Anchor" href="#2-데이터-전환-일정-선정"></a> 2. 데이터 전환 일정 선정</h4><ul><li>팀별 업무를 분장하여 팀별 역할과 납기를 기록</li><li>전환 차수의 결정은 통합 계획 및 테스트 계획에 의해 결정</li></ul><h4 id="3-데이터-전환-절차"><a class="markdownIt-Anchor" href="#3-데이터-전환-절차"></a> 3. 데이터 전환 절차</h4><ul><li><u>현행(As-Is) 시스템에서 목표(To-Be)시스템으로 데이터 전환</u>을 위한 단계를 구분하고 각 단계별 작업 내용과 사용되는 도구를 별도로 기록</li><li>원천 데이터베이스의 데이터는 백업하여 <u>스테이징 데이터베이스로 복구 한 후 정비 및 변환 작업을 수행</u>하며 이는 원천 데이터베이스의 손상과 변형을 막기 위한 방법</li><li>데이터 전환이 완료된 후 <u>검증단계</u>에서는 스테이징 데이터베이스가 아닌 <u>원천 데이터베이스와 비교하여 데이터 오류를 확인</u></li></ul><h4 id="4-데이터-전환-계획서-작성"><a class="markdownIt-Anchor" href="#4-데이터-전환-계획서-작성"></a> 4. 데이터 전환 계획서 작성</h4><ul><li><p><b>계획 -&gt; 수행 &gt; 결과</b></p></li><li><p>데이터 전환 개요</p><ul><li>데이터 전환 목표<ul><li>간결하고 명확하게</li></ul></li><li>주요 성공 요인</li><li>전체 조건 및 제약사항</li></ul></li><li><p>데이터 전환 대상 및 범위</p><ul><li>데이터 전환 대상</li><li>데이터 전환 범위</li></ul></li><li><p>데이터 전환 환경 구성</p><ul><li>원천시스템 구성도</li><li>목적 시스템 구성도</li><li>전환 단계별 DISK 사용량</li></ul></li><li><p>데이터 전환 조직 및 역할</p><ul><li>데이터 전환 조직도</li><li>조직별 역할</li><li>업무 분담 계획<ul><li>검증할 작업자와 작업자별 역할은 최대한 상세히 정리</li></ul></li></ul></li><li><p>데이터 전환 일정</p><ul><li>데이터 전환 및 검증 작업별 상세한 일정</li></ul></li><li><p>데이터 전환 방안</p><ul><li>사전 준비</li><li>데이터 전환 설계</li><li>프로그램 개발 및 테스트</li><li>데이터 전환 리허설</li><li>데이터 전환</li></ul></li><li><p>데이터 정비 방안</p><ul><li>데이터 정비 대상 및 방법</li><li>데이터 정비 일정 및 조직</li></ul></li><li><p>비상계획</p><ul><li>데이터 전환 당일 구성될 종합상황실 및 의사소통 체계</li></ul></li><li><p>데이터 복구 계획</p><ul><li>데이터 전환 과정 오류 발생 또는 실패 시 백업 및 복구 방안 수립</li></ul></li><li><p>데이터 전환 개발단계</p><ul><li>전환 개발환경 구축</li><li>전환 프로그램 개발</li><li>검증 프로그램 개발</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 전환 수행 계획서의 모의 전환 일정에 따라 &lt;u&gt;모의 데이터 전환 차수별 데이터 전환 계획서와 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환수행계획" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89%EA%B3%84%ED%9A%8D/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 데이터검증</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B2%80%EC%A6%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B2%80%EC%A6%9D/</id>
    <published>2020-05-10T06:39:30.000Z</published>
    <updated>2020-05-10T06:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="데이터-검증-개념"><a class="markdownIt-Anchor" href="#데이터-검증-개념"></a> 데이터 검증 개념</h3><ul><li><u>원천 시스템의 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행되었는지 여부를 확인하는 과정</u></li><li>데이터 전환 검증은 검증 방법과 검증 단계에 따라 분류됨</li></ul><h3 id="데이터-검증-분류"><a class="markdownIt-Anchor" href="#데이터-검증-분류"></a> 데이터 검증 분류</h3><h4 id="1-데이터-검증-방법에-따른-분류"><a class="markdownIt-Anchor" href="#1-데이터-검증-방법에-따른-분류"></a> 1. 데이터 검증 방법에 따른 분류</h4><ul><li>검증 방법에 따라 로그 검증, 기본항목 검증, 응용 프로그램 검증, 응용 데이터 검증, 값 검증으로 분류</li><li>로그 검증<ul><li>데이터 전환 과정에서 작성하는 추출, 전환, 적재 로그를 검증</li></ul></li><li>기본 항목 검증<ul><li>로그 검증 외에 별도로 요청된 검증 항목에 대해 검증</li></ul></li><li>응용 프로그램 검증<ul><li>응용 프로그램을 통한 데이터 전환의 정합성을 검증</li></ul></li><li>응용 데이터 검증<ul><li>사전에 정의된 업무 규칙을 기준으로 데이터 전환의 정합성을 검증</li></ul></li><li>값 검증<ul><li>숫자 항목의 합계 검증, 코드 데이터의 범위 검증, 속성 변에 따른 값 검증을 수행</li></ul></li><li><b>정합성은 아님</b></li></ul><h4 id="2-데이터-단계에-따른-분류"><a class="markdownIt-Anchor" href="#2-데이터-단계에-따른-분류"></a> 2. 데이터 단계에 따른 분류</h4><ul><li>원천 데이터를 추출하는 시점부터 전환 시점, DB 적재 시점, DB 적재 후 시점, 전환 완료 후 시점별로 목적과 검증 방법을 달리하여 데이터 전화의 정합성을 검증<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_03.png" alt="데이터 검증 분류" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;데이터-검증-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터-검증-개념&quot;&gt;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터검증" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B2%80%EC%A6%9D/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-10T06:15:43.000Z</published>
    <updated>2020-05-10T06:15:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-초기데이터-구축"><a class="markdownIt-Anchor" href="#1-초기데이터-구축"></a> 1. 초기데이터 구축</h3><ul><li>기존 운영 시스템의 이해를 바탕으로 <u>구축 범위를 명확</u>하게 하여 구축</li><li>초기 데이터 구축 절차<ol><li>구축 전략 수집</li><li>초기 데이터 구축 대상 파악</li><li>초기 데이터 구축 범위</li><li>초기 데이터 구축 시 세부 고려사항</li></ol></li></ul><h3 id="2-etl"><a class="markdownIt-Anchor" href="#2-etl"></a> 2. ETL</h3><ul><li>다양한 소스시스템으로 부터 필요한 데이터를 추출(Extraction)하여 새로 개발할 정보시스템에서 운영 가능하도록 변환(Transformation) 작업을 거쳐 타깃 시스템으로 전송 및 로딩(Loading)하는 일련의 과정을 뜻함</li></ul><h3 id="3-파일-처리-기술"><a class="markdownIt-Anchor" href="#3-파일-처리-기술"></a> 3. 파일 처리 기술</h3><ul><li>자료 구조 이론에서 파일처리 기술은 <u>많은 양의 자료를 각종 매체에 저장하는 기법</u></li><li>종류<ul><li>순차파일</li><li>색인 순차파일</li><li>가상 기억 접근방식 파일</li><li>직접파일</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-초기데이터-구축&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-초기데이터-구축
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 파일처리기술</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%88%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%88%A0/</id>
    <published>2020-05-10T05:52:18.000Z</published>
    <updated>2020-05-10T05:52:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-파일-처리-기술-개념"><a class="markdownIt-Anchor" href="#1-파일-처리-기술-개념"></a> 1. 파일 처리 기술 개념</h3><ul><li>자료 구조 이론에서 파일처리 기술은 <u>많은 양의 자료를 각종 매체에 저장하는 기법</u></li><li>파일을 하드디스크에 저장할 때 기억공간을 효율적으로 사용하고 필요한 자료의 탐색을 쉽게 하기 위해 파일을 효율적으로 처리하는 기술</li><li>종류<ul><li>순차파일</li><li>색인 순차파일</li><li>가상 기억 접근방식 파일</li><li>직접파일</li></ul></li></ul><h3 id="파일-처리-기술-종류"><a class="markdownIt-Anchor" href="#파일-처리-기술-종류"></a> 파일 처리 기술 종류</h3><h4 id="1-sequential-file-순차파일"><a class="markdownIt-Anchor" href="#1-sequential-file-순차파일"></a> 1. Sequential File 순차파일</h4><ul><li>입력되는 데이터들을 논리적인 순서에 따라 물리적 연속 공간에 <u>순차적으로 기록</u>하는 방식</li><li>급여 관리 등과 같이 변동 사항이 크지 않고 <u>기간별로 일괄처리를 주로 하는 경우 적합</u></li><li>주로 순차 접근이 가능한 <u>자기 테이프</u>에 사용</li><li>장점<ul><li><b>기록 밀도가 높아 기억공간을 효율적으로 사용</b></li><li>매체 변환이 쉬워 <b>어떠한 매체에도 적용 가능</b></li><li>레코드를 기록할 때 사용한 키 순서대로 레코드를 처리하는 경우, 다른 편성법보다 처리속도가 빠름</li></ul></li><li>단점<ul><li>파일에 새로운 레코드를 삽입-삭제하는 경우 파일 <b>전체를 복사해야하므로 시간이 많이 소요됨</b></li><li>데이터 검색 시 처음부터 순차적으로 검색하기 때문에 <b>검색 효율이 낮음</b></li></ul></li></ul><h4 id="2-indexed-sequential-file-색인-순차-파일"><a class="markdownIt-Anchor" href="#2-indexed-sequential-file-색인-순차-파일"></a> 2. Indexed Sequential File 색인 순차 파일</h4><ul><li><u>순차 처리와 랜덤 처리가 모두 가능하도록 레코드들을 키 값 순으로 정렬시켜 기록하고 레코드의 키 항목만을 모은 색인을 구성하여 편성하는 방식</u></li><li>ISAM; Index Sequential Access Method 방법이라고도 함</li><li>레코드를 참조할 때 색인을 탐색한 후 색인이 가리키는 <b>포인터를 사용하여 직접참조</b></li><li><u>자기 디스크</u>에 많이 사용되며, 자기 테이프에는 사용 불가</li><li>장점<ul><li>순차 처리와 랜덤 처리가 모드 가능하므로 목적에 따라 융통성 있게 처리 가능</li><li>효율적인 검색이 가능하고 레코드의 삽입, 삭제, 갱신이 용이함</li></ul></li><li>단점<ul><li>색인 구역과 오버플로 구역을 구성하기 위한 <b>추가 기억 공간이 필요함</b></li><li>파일이 정렬되어 있어야 하므로 추가, 삭제가 많으면 효율이 떨어짐</li><li>색인을 이용한 액세스를 하기 때문에 액세스 시간이 랜덤 편서 파일보다 느림</li></ul></li></ul><h4 id="3-vsam-virtual-storage-access-method-가상-기억-접근-방식-파일"><a class="markdownIt-Anchor" href="#3-vsam-virtual-storage-access-method-가상-기억-접근-방식-파일"></a> 3. VSAM; Virtual Storage Access Method 가상 기억 접근 방식 파일</h4><ul><li><u>동적 인덱스 방법을 이용한 색인 순차 파일</u></li><li>데이터 레코드가 저장되는 부분인 제어 구간, 몇 개의 제어 구간을 모아 놓은 제어 구역, 제어 구역에 대한 인덱스를 저장한 순차 세트, 순차 세트의 상위 인덱스의 인덱스 세트로 구성</li><li>레코드를 삭제하면 그 공간을 재사용 가능</li><li>제어 구간에 <u>가변 길이 레코드를 쉽게 수용 가능</u></li></ul><h4 id="4-direct-file-직접-파일"><a class="markdownIt-Anchor" href="#4-direct-file-직접-파일"></a> 4. Direct File 직접 파일</h4><ul><li>파일을 구성하는 레코드를 <u>특정 순서 없이 임의의 물리적 저장공간에 기록</u>하는 것으로, 랜덤파일, DAM파일이라고 함</li><li>레코드에 특정 기준으로 키가 할당되며, <b>해시 함수</b>를 이용하여 이 키에 대한 <u>보조기억장치의 물리적 상대 레코드 주소를 계산</u>한 후 해당하는 주소에 레코드를 저장</li><li>임의 접근이 가능한 <u>자기 디스크나 자기 드럼</u>에서 사용</li><li><b>데이터의 입출력이 빈번히 발생하는 곳에 응용</b></li><li>장점<ul><li>DSAD의 물리적 주소를 통하여 파일의 각 레코드에 직접 접근하거나 기록할 수 있으며, 접근 및 기록 순서에는 제약이 없음</li><li>접근 시간이 빠르고 레코드의 삽입, 삭제, 갱신이 용이</li><li><b>어떤 레코드라도 평균 접근시간 내에 검색가능</b></li></ul></li><li>단점<ul><li>레코드의 주소 변환 과정이 필요하며, 이 과정으로 인해 시간이 소요됨</li><li><b>기억공간의 효율이 저하될 수 있음</b></li><li>기억장치의 물리적 구조에 대한 지식이 필요하고 복잡함</li><li>충돌이 발생할 염려가 있으므로, 기억 공간의 확보가 필요</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-파일-처리-기술-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-파일-처리
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="파일처리기술" scheme="https://hyeonukdev.github.io/tags/%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%88%A0/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - ETL</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/ETL/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/ETL/</id>
    <published>2020-05-10T05:43:06.000Z</published>
    <updated>2020-05-10T05:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="etl-extraction-transformation-load-프로세스"><a class="markdownIt-Anchor" href="#etl-extraction-transformation-load-프로세스"></a> ETL; Extraction, Transformation, Load 프로세스</h3><ul><li><u>특수한 엔진에서 진행되며 종종 변환 중인 데이터가 준비 테이블에서 임시로 보유되었다가 대상에 로드 됨</u></li><li>일반적으로 발생하는 데이터변환에는 <u>필터링, 정렬, 집계, 데이터 조인, 데이터 정리, 중복 제거 및 데이터 유효성 검사 등의 작업</u></li><li>종종 시간 절약을 위해 데이터의 추출이 완료될 때 까지 기다리지 않고 데이터가 추출 되는 동안 이미 수신된 데이터가 변환되면서 로드 준비가 진행되고 준비된 데이터에 대한 로드 프로세스가 시작되는 방식으로 3가지 ETL 단계가 동시에 진행됨</li></ul><h3 id="etl-프로세스별-방법"><a class="markdownIt-Anchor" href="#etl-프로세스별-방법"></a> ETL 프로세스별 방법</h3><ul><li>추출 Extraction<ul><li>JDBC, ODBC 기술의 이용</li><li>Flat File 생성</li><li>CDC; Change Data Capture</li></ul></li><li>변환 Transformation<ul><li>재구성, 정제, 변환, 데이터필드 검사, Rule 적용</li><li>데이터 통합 및 정제가 과도히 요구되는 경우, ETL작업의 80%는 변환과정에서 발생</li></ul></li><li>로드 Load<ul><li>DBMS 고유 기능</li><li>Utility(Append, Delete/Insert, Update)이용</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;etl-extraction-transformation-load-프로세스&quot;&gt;&lt;a class=&quot;markdow
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="ETL" scheme="https://hyeonukdev.github.io/tags/ETL/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 초기데이터구축</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%EC%B4%88%EA%B8%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%B6%95/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%EC%B4%88%EA%B8%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%B6%95/</id>
    <published>2020-05-10T05:31:09.000Z</published>
    <updated>2020-05-10T05:31:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><ul><li>작성된 데이터 변환 설계서의 <u>데이터 변환 논리</u>를 실행 가능한 <u>변환 프로그램으로 구현</u></li><li>구현된 변환 프로그램을 데이터 전환 개발환경에서 테스트하여 프로그램의 정상동작을 확인하고 성능을 최적화</li></ul><h3 id="초기-데이터-구축-개념"><a class="markdownIt-Anchor" href="#초기-데이터-구축-개념"></a> 초기 데이터 구축 개념</h3><ul><li>기존 운영 시스템의 이해를 바탕으로 <u>구축 범위를 명확</u>하게 하여 구축</li><li>초기 데이터 구축 시 발생할 수 있는 <u>예상 문제점을 도출하여 사전 점검 사항과 해결방안을 마련</u></li></ul><h3 id="초기-데이터-구축-절차"><a class="markdownIt-Anchor" href="#초기-데이터-구축-절차"></a> 초기 데이터 구축 절차</h3><h4 id="1-구축-전략-수집"><a class="markdownIt-Anchor" href="#1-구축-전략-수집"></a> 1. 구축 전략 수집</h4><ul><li>단시일에 대량의 데이터를 전환함에 있어 신속하고 안정적인 데이터 전환을 위하여 <u>체계적인 초기 데이터 구축 전략</u>을 수집</li></ul><h4 id="2-초기-데이터-구축-대상-파악"><a class="markdownIt-Anchor" href="#2-초기-데이터-구축-대상-파악"></a> 2. 초기 데이터 구축 대상 파악</h4><ul><li>초기 데이터 구축에 필요한 대상을 파악</li></ul><h4 id="3-초기-데이터-구축-범위"><a class="markdownIt-Anchor" href="#3-초기-데이터-구축-범위"></a> 3. 초기 데이터 구축 범위</h4><ul><li>업무 협의를 통해 초기 데이터 구축 범위를 확정</li></ul><h4 id="4-초기-데이터-구축-시-세부-고려사항"><a class="markdownIt-Anchor" href="#4-초기-데이터-구축-시-세부-고려사항"></a> 4. 초기 데이터 구축 시 세부 고려사항</h4><ul><li>데이터 이관 업무 중단을 최소화하고 안정성을 확보할 수 있는 방안 마련</li><li>데이터 이관 정합성 검증을 통해 오류방지 방안을 제시하여야하며, 오류 데이터에 대한 정비방안 마련</li><li>데이터 이관 완료 후 데이터의 전후 비교를 실시한 품질과 결과 제시</li><li>개인정보에 해당되는 데이터는 개인정보보호법과 관련 기준에서 정하는 기준에 따라 암호화하여 적용</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;작성된 데이터 변환 설계서의 &lt;u&gt;데이터 변환 논리&lt;/u&gt;를 실행 가능한 &lt;u&gt;변환 프로그램으로 구현&lt;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="초기데이터구축" scheme="https://hyeonukdev.github.io/tags/%EC%B4%88%EA%B8%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%B6%95/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EA%B8%B0%EB%8A%A5/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EA%B8%B0%EB%8A%A5/</id>
    <published>2020-05-09T15:50:50.000Z</published>
    <updated>2020-05-09T15:50:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="1-배치-프로그램"><a class="markdownIt-Anchor" href="#1-배치-프로그램"></a> 1. 배치 프로그램</h3><ul><li>사용자의 상호 작용 없이 일련의 작업들을 작업 단위로 묶어 정기적으로 반복 수행하거나 정해진 규칙에 따라 일괄처리하는 것</li><li>일괄처리(Batch Processing)를 위해 주기적으로 발생하거나 반복적으로 발생하는 작업을 지원하는 도구</li><li>종류<ul><li>Spring Batch</li><li>Quartz</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;1-배치-프로그램&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 배치프로그램</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/</id>
    <published>2020-05-09T15:31:08.000Z</published>
    <updated>2020-05-09T15:31:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><ul><li>애플리케이션 설계를 기반으로 프로그래밍 언어와 도구를 활용하여 배치 프로그램 구현 기술에 부합하는 <u>배치 프로그램을 구현</u></li><li>목표 시스템을 구성하는 하위 시스템 간의 연동시 안정적이고 안전하게 동작할 수 있는 배치 프로그램을 구현</li><li>개발된 배치 프로그램의 테스트를 수행</li></ul><h3 id="배치-프로그램의-개념"><a class="markdownIt-Anchor" href="#배치-프로그램의-개념"></a> 배치 프로그램의 개념</h3><ul><li>사용자의 상호 작용 없이 일련의 작업들을 작업 단위로 묶어 정기적으로 반복 수행하거나 정해진 규칙에 따라 일괄처리하는 것</li></ul><h3 id="배치-프로그램의-필수-요소"><a class="markdownIt-Anchor" href="#배치-프로그램의-필수-요소"></a> 배치 프로그램의 필수 요소</h3><ul><li>대용량 데이터<ul><li>대용량의 데이터를 처리할 수 있어야 함</li></ul></li><li>자동화<ul><li>심각한 오류 상황 외에는 사용자의 개입 없이 동작해야 함</li></ul></li><li>견고함<ul><li>유효하지 않은 데이터의 경우도 처리해서 비정상적인 동작 중단이 발생하지 않아야 함</li></ul></li><li>안정성<ul><li>어떤 문제가 생겼는지, 언제 발생했는지 등을 추적할 수 있어야 함</li></ul></li><li>성능<ul><li>주어진 시간 내에 처리를 완료할 수 있어야 하고, 동시에 동작하고 있는 다른 애플리케이션을 방해하지 말아야 함</li></ul></li></ul><h3 id="배치-스케줄러의-개념"><a class="markdownIt-Anchor" href="#배치-스케줄러의-개념"></a> 배치 스케줄러의 개념</h3><ul><li>일괄처리(Batch Processing)를 위해 주기적으로 발생하거나 반복적으로 발생하는 작업을 지원하는 도구</li><li>특정 업무를 원하는 시간에 처리할 수 있도록 지원하는 특성 때문에 잡 스케줄러 라고 함</li><li>종류<ul><li>Spring Batch</li><li>Quartz</li></ul></li></ul><h3 id="배치-스케줄러의-종류"><a class="markdownIt-Anchor" href="#배치-스케줄러의-종류"></a> 배치 스케줄러의 종류</h3><ol><li><p>Spring Batch 스프링 배치</p><ul><li>Spring Source사와 Accenture사가 2007년에 공동으로 개발한 오픈소스 프레임워크</li><li>아키텍처<br /><img src="https://t1.daumcdn.net/cfile/tistory/117AB50E49F566E038" alt="Spring Batch Architecture" /><ul><li>Run Tier<ul><li>배치의 실행을 담당</li></ul></li><li>Job Tier<ul><li>XML로 기술된 Job내의 각 Step들을 순차적으로 실행</li></ul></li><li>Application Tier<ul><li>Job을 수행하는데 필요한 Item Reader, Item Writer, Item Processor 등의 컴포넌트로 구성</li><li>파일 혹은 데이터베이스로부터 읽고 쓰는 기능을 수행</li></ul></li><li>Data Tier<ul><li>Database, File, Queue 등 물리적 데이터소스와의 결합이 이루어지는 영역</li></ul></li></ul></li><li>핵심 컴포넌트<ul><li>Job Repository<ul><li>Job Execution 관련 메타데이터를 저장하는 기반 컴포넌트</li></ul></li><li>Job Launcher<ul><li>Job Execution 실행하는 기반 컴포넌트</li></ul></li><li>JPA; Java Persistence API<ul><li>페이징 기능 제공</li></ul></li><li><b>Job</b><ul><li><u>배치 처리를 의미하는 애플리케이션 컴포넌트</u></li></ul></li><li><b>Step</b><ul><li><u>Job의 각 단계를 의미하며, Job은 일련의 연속된 Step으로 구성</u></li></ul></li><li>Item<ul><li>Data Source로부터 읽거나 저장하는 각 레코드</li></ul></li><li>Chunk<ul><li>특정크기를 갖는 아이템 목록을 의미</li></ul></li><li>Item Reader<ul><li>데이터소스로부터 아이템을 읽어 들이는 컴포넌트</li></ul></li><li><b>Item Processor</b><ul><li><u>Item Reader로 읽어 들인 아이템을 Item Writer를 사용해 저장하기 전에 처리하는 컴포넌트</u></li></ul></li><li>Item Writer<ul><li>Item Chunk를 데이터 소스에 저장하는 컴포넌트</li></ul></li></ul></li><li>핵심기능<ul><li>스프링 프레임워크 기반<ul><li>DI; Dependency Injection, AOP; Aspect Oriented Programming 및 다양한 엔터프라이즈 지원 기능 사용</li></ul></li><li>자체 제공 컴포넌트<ul><li>배치처리(데이터베이스나 파일로부터 데이터를 읽거나 쓰는 등) 시 공통적으로 필요한 컴포넌트를 제공</li></ul></li><li>견고함과 안정성<ul><li>선언적 생략과 처리 실패 후 재시도 설정을 제공</li></ul></li></ul></li></ul></li><li><p>Quartz 스케줄러</p><ul><li>Spring Framework에 플러그인되어 수행하는 Job과 실행스케줄을 정의하는 Trigger를 분리하여 유연성을 제공하는 오픈소스 스케줄러</li><li>구성요소<ul><li>Scheduler<ul><li>Quartz 실행환경을 관리하는 핵심개체</li></ul></li><li>Job<ul><li>사용자가 수행할 작업을 정의하는 인터페이스로서 Trigger 개체를 이용하여 스케줄 할 수 있음</li></ul></li><li>JobDetail<ul><li>작업명과 작업 그룹과 같은 수행할 Job에 대한 상세 정보를 정의하는 개체</li></ul></li><li>Trigger<ul><li>정의한 Job 개체의 실행 스케줄을 정의하는 개체로서 Scheduler 개체에게 Job 수행 지점을 알려주는 개체</li></ul></li></ul></li><li><u>유닉스의 크론 명령어와 유사한 오픈소스 배치 스케줄러</u></li></ul></li></ol><h3 id="배치-프로그램-구현"><a class="markdownIt-Anchor" href="#배치-프로그램-구현"></a> 배치 프로그램 구현</h3><h4 id="1-애플리케이션-설계를-기반으로-배치-프로그램-확인"><a class="markdownIt-Anchor" href="#1-애플리케이션-설계를-기반으로-배치-프로그램-확인"></a> 1. 애플리케이션 설계를 기반으로 배치 프로그램 확인</h4><ol><li>프로그램 관리 대장을 확인</li><li>배치 설계서를 확인<ul><li>프로그램 관리 대장의 ID와 일치하는 배치 설계를 확인</li></ul></li></ol><h4 id="2-애플리케이션-설계를-기반으로-배치-프로그램-구현"><a class="markdownIt-Anchor" href="#2-애플리케이션-설계를-기반으로-배치-프로그램-구현"></a> 2. 애플리케이션 설계를 기반으로 배치 프로그램 구현</h4><ol><li>배치 프로그램을 구현하기 위한 SQL을 작성</li><li>배치 프로그램을 구현하기 위한 I/O 오브젝트(DTO; Data Transfer Object, VO; Value Object)를 정의</li><li>배치 프로그램을 구현하기 위한 데이터 접근 오브젝트(DAO; Data Access Object) 작성</li><li>배치 프로그램을 구현하기 위한 스케줄러 클래스를 작성</li></ol><ul><li><u> 배치 설계서는 작성하지 않음</u></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;애플리케이션 설계를 기반으로 프로그래밍 언어와 도구를 활용하여 배치 프로그램 구현 기술
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="배치프로그램" scheme="https://hyeonukdev.github.io/tags/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-09T15:28:23.000Z</published>
    <updated>2020-05-09T15:28:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="1-보안-취약성-식별"><a class="markdownIt-Anchor" href="#1-보안-취약성-식별"></a> 1. 보안 취약성 식별</h3><ul><li>개발자의 실수, 논리적 오류 등으로 인해 <u>발생할 수 있는 보안 취약점을 최소화</u>하고, 사이버보안 위협에 대응할 수 있는 안전한 소프트웨어 개발하기 위한 일련의 보안 활동</li><li>보안 점검 항목<ul><li>입력 데이터 검증 및 표현</li><li>보안 기능</li><li>시간 및 상태</li><li>에러 처리</li><li>코드 오류</li><li>캡슐화</li><li>API 오용</li></ul></li></ul><h3 id="2-api"><a class="markdownIt-Anchor" href="#2-api"></a> 2. API</h3><ul><li><u>운영체제나 프로그래밍 언어 등에 있는 라이브러리를 이용할 수 있도록 규칙 등을 정해 놓은 인터페이스</u></li><li>종류<ul><li>Windows API</li><li>단일 유닉스 규격(SUS)</li><li>Java API</li><li>웹 API</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;1-보안-취약성-식별&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - API</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/API/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/API/</id>
    <published>2020-05-09T15:15:30.000Z</published>
    <updated>2020-05-09T15:15:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="api-application-programming-interface-개념"><a class="markdownIt-Anchor" href="#api-application-programming-interface-개념"></a> API; Application Programming Interface 개념</h3><ul><li><u>운영체제나 프로그래밍 언어 등에 있는 라이브러리를 이용할 수 있도록 규칙 등을 정해 놓은 인터페이스</u></li><li><u>프로그래밍 언어에서 특정한 작업을 수행하기 위해 사용</u>하거나 <u>운영체제의 파일 제어, 화상 처리, 문자 제어 등의 기능을 활용</u>하기 위해 사용</li><li>개발에 필요한 여러 도구를 제공하기 때문에 이를 이용하면 <u>원하는 기능을 쉽고 효율적으로 구현 가능</u></li><li>종류<ul><li>Windows API</li><li>단일 유닉스 규격</li><li>Java API</li><li>웹 API</li><li>Open API</li></ul></li></ul><h3 id="api-종류"><a class="markdownIt-Anchor" href="#api-종류"></a> API 종류</h3><h4 id="1-windows-api"><a class="markdownIt-Anchor" href="#1-windows-api"></a> 1. Windows API</h4><ul><li>마이크로소프트 윈도우 운영체제에서 사용하는 API</li><li>C/C++ 프로그램에서 직접 운영체제와 상호 작용할 수 있도록 만들어졌으며, 그 보다 낮은 수준의 제어는 Ntdll.dll을 사용</li><li>윈도우 API 서비스<ul><li>기본 서비스</li><li>고급 서비스</li><li>그래픽장치 인터페이스</li><li>사용자 인터페이스</li><li>공통 대화 상자 라이브러리</li><li>공통 컨트롤 라이브러리</li><li>윈도 셀</li><li>네트워크 서비스</li><li>웹</li></ul></li></ul><h4 id="2-sus-single-unix-specification-단일-유닉스-규격"><a class="markdownIt-Anchor" href="#2-sus-single-unix-specification-단일-유닉스-규격"></a> 2. SUS; Single UNIX Specification 단일 유닉스 규격</h4><ul><li><u>유닉스를 사용하기 위해 지켜져야 하는 표준 규격의 총칭</u></li><li>SUS 는 전기전자기술자협회와 오픈 그룹의 표준화 작업 결과물에 바탕을 두고 있으며, 오스틴 그룹이 개발 및 유지 관리를 담당</li></ul><h3 id="3-java-api"><a class="markdownIt-Anchor" href="#3-java-api"></a> 3. Java API</h3><ul><li><u>Java를 사용하기 쉽게 구현할 수 있도록 한 클래스 라이브러리의 집합</u></li><li>Java 언어를 사용하여 사용자의 부담을 최소화하는 반면에 입출력, 화면 구성, 이미지, 네트워크와 같이 복잡하지만 필요한 클래스들을 미리 구현하여 사용자가 쉽게 구현하도록 하는 API</li></ul><h3 id="4-웹-api"><a class="markdownIt-Anchor" href="#4-웹-api"></a> 4. 웹 API</h3><ul><li>웹 어플리케이션 개발에서 다른 서비스에 요청을 보내고 응답을 받기 위해 정의된 명세</li><li>블로그 API는 블로그에 접속하지 않고도 워드 아래한글에서 글을 작성하여 올릴 수 있음</li><li>우체국의 우체국 API, 구글과 네이버 지도 API등 다양한 API가 서비스 되고 있음</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;api-application-programming-interface-개념&quot;&gt;&lt;a clas
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="API" scheme="https://hyeonukdev.github.io/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 보안취약성식별</title>
    <link href="https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B3%B4%EC%95%88%EC%B7%A8%EC%95%BD%EC%84%B1%EC%8B%9D%EB%B3%84/"/>
    <id>https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B3%B4%EC%95%88%EC%B7%A8%EC%95%BD%EC%84%B1%EC%8B%9D%EB%B3%84/</id>
    <published>2020-05-09T14:46:38.000Z</published>
    <updated>2020-05-09T14:46:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><ul><li>업무 프로세스 맵과 세부 업무 프로세스를 확인</li><li>세부 업무 프로세스를 기반으로 <u>프로그래밍 언어와 도구를 활용하여 서비스의 구현에 필요한 업무 프로그램 구현</u></li><li>개발하고자 하는 <u>목표 시스템의 잠재적 보안 취약성이 제거될 수 있도록 서버 프로그램을 구현</u></li><li>개발된 업무 프로그램의 내부 기능과 제공하는 인터페이스에 대해 테스트 수행</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>API; Application Programming Interface<ul><li>응용 프로그램 개발 시 운영체제나 프로그래밍 언어 등에 있는 라이브러리를 이용할 수 있도록 규칙을 정의해 놓은 인터페이스</li></ul></li></ul><h3 id="소프트웨어-개발-보안의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-보안의-개념"></a> 소프트웨어 개발 보안의 개념</h3><ul><li>개발자의 실수, 논리적 오류 등으로 인해 <u>발생할 수 있는 보안 취약점을 최소화</u>하고, 사이버보안 위협에 대응할 수 있는 안전한 소프트웨어 개발하기 위한 일련의 보안 활동</li><li>데이터의 <u>Confidentiality 기밀성, Integrity 무결성, Availability 가용성 유지를 목표</u></li></ul><h3 id="소프트웨어-개발-보안-가이드-구성"><a class="markdownIt-Anchor" href="#소프트웨어-개발-보안-가이드-구성"></a> 소프트웨어 개발 보안 가이드 구성</h3><ul><li>입력 데이터 검증 및 표현<ul><li>프로그램 입력 값에 대한 검증 누락 또는 부적절한 검증, 데이터의 잘못 된 형식 지정으로 인해 발생할 수 있는 보안 약점</li><li>SQL 삽입</li><li>자원 삽입</li><li>크로스 사이트 스크립트 등</li></ul></li><li>보안 기능<ul><li>보안 기능(인증, 접근제어, 기밀성, 암호화, 권한 관리)을 적절하지 않게 구현 시 발생할 수 있는 보안 약점</li><li>부적절한 인가</li><li>중요 정보 펭문 저장 등</li></ul></li><li>시간 및 상태<ul><li>동시 또는 거의 동시 수행을 지원하는 병렬 시스템, 하나 이상의 프로세스가 동작하는 환경에서 시간 및 상태를 부적절하게 관리하여 발생할 수 있는 보안 약점</li><li>경쟁 조건</li><li>제어문을 사용하지 않은 재귀 함수 등</li></ul></li><li>에러 처리<ul><li>에러를 처리하지 않거나, 불충분하게 처리하여 에러 정보에 중요 정보가 포함될 때 발생할 수 있는 보안 약점</li><li>취약한 패스워드 요구 조건</li><li>오류 메시지를 통한 정보 노출 등</li></ul></li><li>코드 오류<ul><li>타입 변환 오류, 자원의 부적절한 반환 등과 같이 개발자가 범할 수 있는 코딩 오류로 인해 유발되는 보안 약점</li><li>널 포인터 역참조</li><li>부적절한 자원 해제 등</li></ul></li><li>캡슐화<ul><li>중요한 데이터 또는 기능성을 불충분하게 캡슐화하였을 때 인가되지 않는 사용자에게 데이터 누출이 가능해지는 보안 약점</li><li>제거되지 않고 남은 디버그 코드</li><li>시스템 데이터 정보 노출 등</li></ul></li><li>API 오용<ul><li>의도된 사용에 반하는 방법으로 API를 사용하거나, 보안에 취약한 API를 사용하여 발생할 수 있는 보안 약점</li><li>DNS Lookup에 의존한 보안 결정</li><li>Null 매개 변수 미조사 등</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;업무 프로세스 맵과 세부 업무 프로세스를 확인&lt;/li&gt;
&lt;li&gt;세부 업무 프로세스를 기
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="보안취약성식별" scheme="https://hyeonukdev.github.io/tags/%EB%B3%B4%EC%95%88%EC%B7%A8%EC%95%BD%EC%84%B1%EC%8B%9D%EB%B3%84/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B3%B5%ED%86%B5%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B3%B5%ED%86%B5%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-09T14:43:44.000Z</published>
    <updated>2020-05-09T14:43:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="1-재사용"><a class="markdownIt-Anchor" href="#1-재사용"></a> 1. 재사용</h3><ul><li>목표 시스템의 개발 시간 및 비용 절감을 위하여 검증된 기능을 파악하고 재구성하여 시스템에 응용하기 위한 최적화 작업</li><li>분류<ul><li>함수와 객체 재사용</li><li>컴포넌트 재사용</li><li>애플리케이션 재사용</li></ul></li></ul><h3 id="2-모듈화"><a class="markdownIt-Anchor" href="#2-모듈화"></a> 2. 모듈화</h3><ul><li>스프트웨어 개발 작업을 실제로 개발할 수 있는 작은 단위로 나누는 것</li><li>측정 척도<ul><li>응집도</li><li>결합도</li></ul></li><li>관계<ul><li>응집도는 높게</li><li>결합도는 낮게</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;1-재사용&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-재사용&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 모델화</title>
    <link href="https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B3%B5%ED%86%B5%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%ED%99%94/"/>
    <id>https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B3%B5%ED%86%B5%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%ED%99%94/</id>
    <published>2020-05-09T14:30:48.000Z</published>
    <updated>2020-05-09T14:30:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="모듈화-개념"><a class="markdownIt-Anchor" href="#모듈화-개념"></a> 모듈화 개념</h3><ul><li>해결하기 어려운 큰 문제를 작은 단위로 쪼개어 하나씩 해결하는 것처럼, 소프트웨어 개발 작업을 실제로 개발할 수 있는 작은 단위로 나누는 것</li></ul><h3 id="모듈화의-장점"><a class="markdownIt-Anchor" href="#모듈화의-장점"></a> 모듈화의 장점</h3><ul><li>분할과 정복의 원리가 적용되어 복잡도 감소</li><li>문제를 이해하기 쉽게 만듦</li><li>변경하기 쉽고, 변경으로 인한 영향으로 적음</li><li>유지보수 용이</li><li>프로그램을 효율적으로 관리</li><li>오류로 인한 파급효과를 최소화</li><li>설계 및 코드 재사용</li></ul><h3 id="모듈화-측정-척도"><a class="markdownIt-Anchor" href="#모듈화-측정-척도"></a> 모듈화 측정 척도</h3><ul><li>Cohesion 응집도<ul><li>인터페이스의 요청을 처리함에 있어서 <u>공통 모듈 내의 클래스들 간에 얼마나 유기적으로 협업하여 처리하는 가</u>에 관한 정도</li><li><b>높여야 함</b></li></ul></li><li>Couplling 결합도<ul><li><u>어떤 모듈이 다른 모듈에 의존하는 정도</u></li><li><b>낮춰야 함</b></li></ul></li></ul><h4 id="응집도-개념"><a class="markdownIt-Anchor" href="#응집도-개념"></a> 응집도 개념</h4><ul><li>공통 모듈 내의 클래스들이 외부의 기능을 수행함에 있어서 <u>얼마나 서로 클래스들끼리 내부적으로 연계되어 수행되는지에</u> 대한 정도<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0509_01.png" alt="공통모듈내 응집도" /></li></ul><h4 id="응집도의-유형과-품질"><a class="markdownIt-Anchor" href="#응집도의-유형과-품질"></a> 응집도의 유형과 품질</h4><ul><li><u><b>기능</b>은 <b>순차</b>적으로 <b>통신</b>해야, <b>절차</b>적 <b>시간</b>이 <b>논리적</b>이 되고 <b>우연</b>이 낮음</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0509_02.png" alt="응집도의 유형과 품질" /></li></ul><h4 id="결합도-개념"><a class="markdownIt-Anchor" href="#결합도-개념"></a> 결합도 개념</h4><ul><li>프로세스를 처리 함에 있어서 <u>각각의 공통 모듈이 서로 연계되어 있는 정도</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0509_03.png" alt="공통모듈내 결합도" /></li></ul><h4 id="결합도-유형과-품질"><a class="markdownIt-Anchor" href="#결합도-유형과-품질"></a> 결합도 유형과 품질</h4><ul><li><u>높은 <b>내용</b>은 <b>공통</b>적인 것을 <b>외부</b>로부터 <b>제어</b>한 후 <b>도장</b>찍은 <b>자료</b>이다</u></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;모듈화-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#모듈화-개
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="모델화" scheme="https://hyeonukdev.github.io/tags/%EB%AA%A8%EB%8D%B8%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 재사용</title>
    <link href="https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B3%B5%ED%86%B5%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EC%9E%AC%EC%82%AC%EC%9A%A9/"/>
    <id>https://hyeonukdev.github.io/2020/05/09/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B3%B5%ED%86%B5%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EC%9E%AC%EC%82%AC%EC%9A%A9/</id>
    <published>2020-05-09T13:13:28.000Z</published>
    <updated>2020-05-09T13:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><ul><li>공통 모듈의 상세 설계를 기반으로 <u>프로그래밍 언어와 도구를 활용</u>하여 업무 프로세스 및 서비스의 구현에 필요한 <u>공통 모듈을 작성</u></li><li>소프트웨어 측정 지표 중 <u>모듈 간의 <b>결합도는 줄이고</b> 개별 모듈들의 내부 <b>응집도를 높인</b> 공통 모듈을 구현</u></li><li>공통 개발된 공통 모듈의 내부 기능과 제공하는 인터페이스에 대해 테스트할 수 있는 <u>테스트 케이스를 작성</u>하고 단위 테스트를 수행하기 위한 테스트 조건을 명세화</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>Cohesion 응집도<ul><li>모듈 내부에 존재하는 구성 요소들 사이의 밀접한 정도로, 응집도가 높을수록 구성 요소들이 꼭 필요한 것으로만 모여 있음</li></ul></li><li>Coupling 결합도<ul><li>모듈과 모듈 사이의 관계에서 관련 정도를 나타내며 모듈 간에는 관련이 적을수록 상호 의존성이 줄어 모듈의 독립성이 높아지고 독립성이 높으면 모듈 간에 영향이 적어 좋은 설계가 됨</li></ul></li></ul><h3 id="공통-모듈-reuse-재사용의-개념"><a class="markdownIt-Anchor" href="#공통-모듈-reuse-재사용의-개념"></a> 공통 모듈 Reuse 재사용의 개념</h3><ul><li>공통모듈은 <u>정보시스템 구축 시 자주 사용하는 기능</u>들로서 재사용이 가능하게 <u>패키지(클래스, 라이브러리, 컴포넌트, 프레임워크)로 제공</u>하는 <u>독립된 모듈</u>을 의미</li><li>재사용은 <u>목표 시스템의 개발 시간 및 비용 절감을 위하여 검증된 기능을 파악하고 재구성하여 시스템에 응용</u>하기 위한 최적화 작업</li></ul><h3 id="재사용-범위에-따른-분류"><a class="markdownIt-Anchor" href="#재사용-범위에-따른-분류"></a> 재사용 범위에 따른 분류</h3><ul><li>함수와 객체 재사용<ul><li>함수나 클래스 단위로 구현한 소스코드를 재사용</li></ul></li><li>컴포넌트 재사용<ul><li>컴포넌트 단위로 재사용하며, 컴포넌트의 인터페이스를 통해 통신</li></ul></li><li>애플리케이션 사용<ul><li>공통된 기능을 제공하도록 구현된 애플리케이션과의 통신으로 기능을 공유하여 재사용</li></ul></li></ul><h3 id="재사용의-이점"><a class="markdownIt-Anchor" href="#재사용의-이점"></a> 재사용의 이점</h3><ul><li>생산성 증가</li><li>소프트웨어 품질 향상</li><li>프로젝트 문서 공유</li><li><u>새로운 개발 방법론 도입은 <b>어렵게 함</b></u></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;공통 모듈의 상세 설계를 기반으로 &lt;u&gt;프로그래밍 언어와 도구를 활용&lt;/u&gt;하여 업무 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="재사용" scheme="https://hyeonukdev.github.io/tags/%EC%9E%AC%EC%82%AC%EC%9A%A9/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-08T10:04:31.000Z</published>
    <updated>2020-05-08T10:04:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="1-개발환경-구축"><a class="markdownIt-Anchor" href="#1-개발환경-구축"></a> 1. 개발환경 구축</h3><ul><li><u>응용소프트웨어 개발</u>에 필요한 하드웨어 및 소프트웨어의 필요 사항을 검토하고, 이에 따라 <u>개발환경에 필요한 준비를 수행</u></li><li>개발 하드웨어 환경<ul><li>클라이언트</li><li>서버</li></ul></li><li>개발 소프트웨어 환경<ul><li>시스템소프트웨어</li><li>개발 소프트웨어<ul><li>요구사항 관리 도구</li><li>설계/모델링 도구</li><li>구현 도구</li><li>빌드 도구</li><li>테스트 도구</li><li>형상 관리 도구</li></ul></li></ul></li></ul><h3 id="2-서버-개발-프레임워크"><a class="markdownIt-Anchor" href="#2-서버-개발-프레임워크"></a> 2. 서버 개발 프레임워크</h3><ul><li><p><u>서버 프로그램 개발 시 </u> 다양한 <u>네트워크 설정, 요청 및 응답처리, 아키텍처 모델 구현등을 손쉽게 처리할 수 있도록 클래스나 인터페이스를 제공하는 소프트웨어</u></p></li><li><p>종류</p><ul><li>Spring</li><li>Node.js</li><li>Django</li><li>Codeigiter</li><li>Ruby on Rails</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;1-개발환경-구축&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 서버개발프레임워크</title>
    <link href="https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/</id>
    <published>2020-05-08T09:51:11.000Z</published>
    <updated>2020-05-08T09:51:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="framework-프레임워크의-개념"><a class="markdownIt-Anchor" href="#framework-프레임워크의-개념"></a> Framework 프레임워크의 개념</h3><ul><li>사전적으로 뼈대, 골조를 의미하며 소프트웨어에서는 특정 기능을 수행하기 위해 필요한 <u>클래스나 인터페이스 등을 모다운 집합체</u></li></ul><h3 id="프레임워크의-특징"><a class="markdownIt-Anchor" href="#프레임워크의-특징"></a> 프레임워크의 특징</h3><ol><li>Modularity 모듈화<ul><li>캡슐화를 통해 모듈화를 강화하고 설계와 구현의 변경에 따른 영향을 최소화하여 소프트웨어의 품질을 향상시킴</li></ul></li><li>Reusability 재사용성<ul><li>재사용 가능한 모듈들을 제공함으로써 개발자의 생산성을 향상시킴</li></ul></li><li>Extensibility 확장성<ul><li>프레임워크는 다형성을 통해 인터페이스의 확장이 가능하여 다양한 형태와 기능을 가진 애플리케이션 개발이 가능함</li></ul></li><li>Inversion of Control 제어의 흐름<ul><li>프레임워크 코드가 전체 애플리케이션의 처리 흐름을 제어하여 특정한 이벤트가 발생할 때 다형성을 통해 애플리케이션의 확장한 메소드를 호출함으로써 제어가 프레임워크로부터 애플리케이션으로 거꾸로 흐르게 함</li></ul></li></ol><h3 id="서버-개발-프레임워크"><a class="markdownIt-Anchor" href="#서버-개발-프레임워크"></a> 서버 개발 프레임워크</h3><h4 id="1-서버-개발-프레임워크의-개념"><a class="markdownIt-Anchor" href="#1-서버-개발-프레임워크의-개념"></a> 1. 서버 개발 프레임워크의 개념</h4><ul><li><u>서버 프로그램 개발 시 </u> 다양한 <u>네트워크 설정, 요청 및 응답처리, 아키텍처 모델 구현등을 손쉽게 처리할 수 있도록 클래스나 인터페이스를 제공하는 소프트웨어</u></li><li>서버 개발 프레임워크에 따라 지원하는 <u>프로그래밍 언어</u>가 제한적이므로 선정할 수 있는 <u>프레임워크도 제한적</u></li><li>서버 개발 프레임워크의 대부분은 <code>모델-뷰-컨트롤러</code><u>MVC패턴</u>을 기반으로 개발됨</li></ul><h4 id="2-서버-개발-프레임워크의-종류"><a class="markdownIt-Anchor" href="#2-서버-개발-프레임워크의-종류"></a> 2. 서버 개발 프레임워크의 종류</h4><ul><li>Spring<ul><li>JAVA를 기반으로 만들어진 프레임워크로, 전자정부 표준 프레임워크의 기반 기술로 사용되고 있음</li></ul></li><li>Node.js<ul><li>JavaScript를 기반으로 만들어진 프레임워크로, 비동기 입,출력 처리와 이벤트 위주의 높은 성능을 갖고 있어 실시간으로 입/출력이 빈번한 애플리케이션</li></ul></li><li>Django<ul><li>Python을 기반으로 만들어진 프레임워크로, 컴포넌트의 재사용과 플러그인화를 강조하여 신속한 개발이 가능하도록 지원</li></ul></li><li>Ruby on Rails<ul><li>Ruby를 기반으로 만들어진 프레임워크로, 테스트를 위한 웹서버를 지원하며 데이터베이스 작업을 단순화, 자동화시켜 개발 코드의 길이가 짧아 신속한 개발이 가능</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;framework-프레임워크의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버개발프레임워크" scheme="https://hyeonukdev.github.io/tags/%EC%84%9C%EB%B2%84%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 개발환경구축</title>
    <link href="https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/"/>
    <id>https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/</id>
    <published>2020-05-08T09:07:20.000Z</published>
    <updated>2020-05-08T09:07:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><ul><li><u>응용소프트웨어 개발</u>에 필요한 하드웨어 및 소프트웨어의 필요 사항을 검토하고, 이에 따라 <u>개발환경에 필요한 준비를 수행</u></li><li>응용소프트웨어 개발에 필요한 하드웨어 및 소프트웨어를 설치하고 설정하여 <u>개발환경을 구축</u></li><li>사전에 수립된 형상관리 방침에 따라 운영 정책에 부합하는 <u>형상관리 환경을 구축</u></li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>구현도구<ul><li>프로그램을 개발할 때 가장 많이 사용되는 도구로서 코드의 작성 및 편집, 디버깅 등과 같은 다양한 작업이 가능</li></ul></li><li>클라이언트<ul><li>시스템에서 제공하는 서버를 활용하기 위해 거래를 발생시키는 하드웨어</li></ul></li><li>형상관리<ul><li>소프트웨어 개발 과정에서 소프트웨어의 변경사항을 관리하기 위해 개발된 일련의 활동</li></ul></li></ul><h3 id="개발환경-구축의-개념"><a class="markdownIt-Anchor" href="#개발환경-구축의-개념"></a> 개발환경 구축의 개념</h3><ul><li><u>해당 프로젝트의 목적과 구축 설계에 대한 명확한 이해가 필요</u></li><li>이에 맞는 하드웨어 소프트웨어 선정이 필요</li><li><u>제품들의 성능과 라이선스 그리고 사용 편의성 등에 대한 내용 파악도 필요</u></li></ul><h3 id="개발-하드웨어-환경"><a class="markdownIt-Anchor" href="#개발-하드웨어-환경"></a> 개발 하드웨어 환경</h3><h4 id="1-client-클라이언트-환경-구성"><a class="markdownIt-Anchor" href="#1-client-클라이언트-환경-구성"></a> 1. Client 클라이언트 환경 구성</h4><ul><li><u>서버 시스템</u>에서 제공하는 서비스를 활용하기 위해 <u>사용자와의 인터페이스를 제공하는 하드웨어</u></li><li>종류<ul><li>PC</li><li>웹 브라우저 화면</li><li>모바일 앱</li></ul></li></ul><h4 id="2-server-서버-환경-구성"><a class="markdownIt-Anchor" href="#2-server-서버-환경-구성"></a> 2. Server 서버 환경 구성</h4><ol><li>Web 웹 서버</li></ol><ul><li>클라이언트에서 요청하는 서비스의 속도를 향상시키기 위해 <u>정적파일</u>들을 제공하는 웹 서버 애플리케이션이 설치되는 <u>하드웨어</u></li></ul><ol start="2"><li>WAS; Web Application Server 웹 애플리케이션 서버</li></ol><ul><li><u>동적 웹 서비스</u>를 제공하기 위해 Tomcat, Underflow, IIS 등 미들웨어인 WAS와 서비스에 관련된 애플리케이션이 설치되는 하드웨어</li></ul><ol start="3"><li>Database 데이터베이스 서버</li></ol><ul><li>MySQL, Oracle</li></ul><ol start="4"><li>파일 서버</li></ol><ul><li>서비스 제공을 위해 파일을 저장하고, 공유하기 위한 파일 저장 하드웨어</li></ul><h3 id="개발-소프트웨어-환경"><a class="markdownIt-Anchor" href="#개발-소프트웨어-환경"></a> 개발 소프트웨어 환경</h3><h4 id="1-시스템-소프트웨어"><a class="markdownIt-Anchor" href="#1-시스템-소프트웨어"></a> 1. 시스템 소프트웨어</h4><ol><li>OS; Operation System 운영체제</li></ol><ul><li>종류<ul><li>Windows</li><li>Linux</li><li>UNIX</li></ul></li></ul><ol start="2"><li>JVM; Java Virtual Machine</li></ol><ul><li>Java 관련 응용프로그램을 가동하기 위한 인터프리터 환경</li></ul><ol start="3"><li>Web Server</li></ol><ul><li>정적 웹 서비스를 수행하는 미들웨어로서 웹 브라우저 화면에서 요청하는 정적파일 제공</li><li>종류<ul><li>Apache</li><li>Nginx</li><li>IIS</li><li>GWS</li></ul></li></ul><ol start="4"><li>WAS; Web Application Server</li></ol><ul><li>웹 애플리케이션을 수행하는 미드뤠어로서 웹서버와 JSP/Servlet 애플리케이션 수행을 위한 엔진으로 구성</li><li>종류<ul><li>Tomcat</li><li>Undertow</li><li>JEUS</li><li>Weblogic</li><li>Websphere</li></ul></li></ul><ol start="5"><li>DBMS; Database Management System</li></ol><ul><li>데이터 저장과 관리를 위한 데이터베이스 소프트웨어</li><li>종류<ul><li>Oracle</li><li>DB2</li><li>Sybase</li><li>SQL Server</li><li>MySQL</li></ul></li></ul><h4 id="2-개발-소프트웨어"><a class="markdownIt-Anchor" href="#2-개발-소프트웨어"></a> 2. 개발 소프트웨어</h4><ol><li>요구사항 관리도구</li></ol><ul><li>목표 시스템의 기능과 제약 조건 등 고객의 요구사항을 수집, 분석, 추적을 쉽게 할 수 있게 지원</li><li>종류<ul><li>JFeature</li><li>JRequisite</li><li>OSRMT</li><li>Trello</li></ul></li></ul><ol start="2"><li>설계/모델링 도구</li></ol><ul><li>기능을 논리적으로 결정하기 위해 통합 모델링한 언어(UML)지원</li><li>Database 설계 지원</li><li>종류<ul><li>ArgoUML</li><li>DB Designer</li><li>StarUML</li></ul></li></ul><ol start="3"><li>구현 도구</li></ol><ul><li>문제 해결방법을 소프트웨어 언어를 통해 구현 및 개발을 지원하는 도구</li><li>종류<ul><li>Eclipse</li><li>Intelli J</li><li>Vistual Studio</li></ul></li></ul><ol start="4"><li>테스터 도구</li></ol><ul><li>구현및 개발된 모듈들에 대하여 요구 사항에 적합하게 구현되어 있는지 테스트를 지원하는 도구</li><li>종류<ul><li>JUnit</li><li>CppUnit</li><li>Jmeter</li><li>SpringTest</li></ul></li></ul><ol start="5"><li>형상관리 도구</li></ol><ul><li>산출물의 변경 사항을 버전별로 관리하여 목표 시스템의 품질 향상을 지원하는 도구</li><li>종류<ul><li>CSV</li><li>SVN</li><li>Git</li></ul></li></ul><h3 id="개발환경-구축-순서"><a class="markdownIt-Anchor" href="#개발환경-구축-순서"></a> 개발환경 구축 순서</h3><h4 id="1-목표시스템의-환경-및-요구사항-분석"><a class="markdownIt-Anchor" href="#1-목표시스템의-환경-및-요구사항-분석"></a> 1. 목표시스템의 환경 및 요구사항 분석</h4><ul><li><u>제안 요청서, 제안서, 사업 수행 계획서, 요구사항 정의서, 시스템 아키텍처, 애플리케이션 아키텍처 </u> 등 분석 및 설계시의 산출물을 분석하여 개발환경 준비</li><li>목표시스템의 환경 예시<ul><li>목표시스템</li><li>개발언어</li><li>개발인원 및 기간</li><li>사양관련</li></ul></li></ul><h4 id="2-개발언어-설정"><a class="markdownIt-Anchor" href="#2-개발언어-설정"></a> 2. 개발언어 설정</h4><ul><li><p>기준</p><ul><li>적정성<ul><li>대상 업무의 성격</li><li><u>개발하고자 하는 시스템이나 응용 프로그램의 목적에 적합</u></li></ul></li><li>효율성<ul><li>프로그래밍의 효율성이 고려</li></ul></li><li>이식성<ul><li>일반적인 PC 및 OS에 개발환경이 설치 가능</li></ul></li><li>친밀성<ul><li>프로그래머가 그 언어를 이해하고 사용할 수 있음</li></ul></li><li>범용성<ul><li>관거 개발 실적이나 사례가 존재하고, 광범위한 분야에서 사용되고 있어야 함</li></ul></li></ul><h4 id="3-통합-개발환경-선정"><a class="markdownIt-Anchor" href="#3-통합-개발환경-선정"></a> 3. 통합 개발환경 선정</h4><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0508_04.png" alt="통합개발환경도구비교" /></p><h4 id="4-프로그램의-배포-및-라이브러리-관리를-위한-빌드-도구-선정"><a class="markdownIt-Anchor" href="#4-프로그램의-배포-및-라이브러리-관리를-위한-빌드-도구-선정"></a> 4. 프로그램의 배포 및 라이브러리 관리를 위한 빌드 도구 선정</h4><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0508_05.png" alt="빌드도구비교" /></p><ul><li>빌드 도구의 선정<ul><li>프로젝트 팀원의 빌드 도구의 친밀도와 숙련도에 따라 결정</li><li>형상관리 도구를 고려하여 빌드 도구 선정</li><li>통합 개발 도구와 호환이 가능한 빌드 도구 선정</li></ul></li></ul><h4 id="5-개발-인원을-고려한-형상관리-도구를-선정"><a class="markdownIt-Anchor" href="#5-개발-인원을-고려한-형상관리-도구를-선정"></a> 5. 개발 인원을 고려한 형상관리 도구를 선정</h4><ul><li>종류<ul><li>CVS</li><li>SVN</li><li>Git</li></ul></li><li>목표 시스템 환경 등을 고려하여 선정</li><li>통합 개발 도구와 호환이 가능한 빌드 도구를 선정</li></ul><h4 id="6-프로젝트-검증에-적합한-테스트-도구를-선정"><a class="markdownIt-Anchor" href="#6-프로젝트-검증에-적합한-테스트-도구를-선정"></a> 6. 프로젝트 검증에 적합한 테스트 도구를 선정</h4><ul><li>통합 개발 도구와 호환이 가능하고 널리 사용되는 테스트 자동화 도구를 선정</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;응용소프트웨어 개발&lt;/u&gt;에 필요한 하드웨어 및 소프트웨어의 필요 사항을 검토하고
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="개발환경구축" scheme="https://hyeonukdev.github.io/tags/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95/"/>
    
  </entry>
  
  <entry>
    <title>프로그래밍언어활용 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch16_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%ED%99%9C%EC%9A%A9/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%ED%99%9C%EC%9A%A9/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/08/Engineer_Information_Processing/ch16_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%ED%99%9C%EC%9A%A9/%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%ED%99%9C%EC%9A%A9/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-07T16:43:20.000Z</published>
    <updated>2020-05-07T16:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="프로그래밍언어활용"><a class="markdownIt-Anchor" href="#프로그래밍언어활용"></a> 프로그래밍언어활용</h2><h3 id="1-라이브러리"><a class="markdownIt-Anchor" href="#1-라이브러리"></a> 1. 라이브러리</h3><ul><li>프로그램을 효율적으로 개발할 수 있도록 <u>자주 사용하는 함수나 데이터들을 미리 만들어 모아 놓은 집합체</u></li><li>프로그래밍 언어에 따라 일반적으로 <u>도움말, 설치파일, 샘플 코드 등을 제공</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0508_01.png" alt="C언어의 대표적인 표준라이브러리" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0508_02.png" alt="Java언어의 대표적인 표준라이브러리" /></li></ul><h3 id="2-데이터-입출력"><a class="markdownIt-Anchor" href="#2-데이터-입출력"></a> 2. 데이터 입출력</h3><ul><li>키보드로 입력 받은 값을 저장하고 화면에서 서식을 지정하여 출력할 때 사용하는 클래스와 메소드</li><li>C언어 관련<ul><li>scanf()</li><li>getchar()</li><li>gets()</li><li>printf()</li><li>putchar()</li><li>puts()</li></ul></li><li>Java언어 관련<ul><li>Scanner</li><li>Sytem.out.printf()</li></ul></li></ul><h3 id="3-예외처리"><a class="markdownIt-Anchor" href="#3-예외처리"></a> 3. 예외처리</h3><ul><li>프로그램의 정상적인 실행을 방해하는 조건이나 상태를 뜻하는 예외가 발생했을 때 해당 문제에 대한 처리 루틴을 수행하도록 하는 것</li></ul><h3 id="4-프로토타입"><a class="markdownIt-Anchor" href="#4-프로토타입"></a> 4. 프로토타입</h3><ul><li>프로그래밍 언어에서 프로토타입이란 함수 원형</li><li>컴파일러에게 사용될 함수에 대한 정보를 미리 알리는 것</li><li>본문이 없다는 점을 제외하고 함수와 형태가 동일</li><li><u>반환 형식은 함수 정의에 지정된 반환 형식과 반드시 일치</u></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;프로그래밍언어활용&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#프로그래밍언어활용&quot;&gt;&lt;/a&gt; 프로그래밍언어활용&lt;/h2&gt;
&lt;h3 id=&quot;1-라이브러리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="프로그래밍언어활용" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%96%B8%EC%96%B4%ED%99%9C%EC%9A%A9/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
</feed>
