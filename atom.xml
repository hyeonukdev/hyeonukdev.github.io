<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-26T05:39:25.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>통합구현 - IDE도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/IDE%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/IDE%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-26T05:39:25.000Z</published>
    <updated>2020-05-26T05:39:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><ul><li>개발하고자 하는 응용 소프트웨어와 연계 대상 모듈간의 특성을 고려하여 효율적인 데이터 송수신 방법을 정의</li><li>데터 연계 요구 사항을 고려하여 연계 주기를 정의</li><li>대상 내외부 모듈 간의 연계 목적을 고려하여 데이터 연계 실패 시 처리 방안을 정의</li><li>내외부 모듈 간 연계 데이터의 중요성을 고려하여 송수신 시 보안을 적용</li></ul><p>IDE; Integrated Development Environmnet 개념</p><ul><li>통합 개발 환경은 코드의 작성 및 편집, 디버깅, 컴파일, 배포 등 프로그램 개발에 관련된 모든 작업을 하나씩 프로그램 안에서 처리하는 환경을 제공하는 소프트웨어</li></ul><h3 id="ide-도구의-기능"><a class="markdownIt-Anchor" href="#ide-도구의-기능"></a> IDE 도구의 기능</h3><ol><li>개발 환경 지원</li></ol><ul><li>C++, JAVA 등의 언어를 이용하여 애프릴케이션을 개발할 수 있는 환경 제공</li></ul><ol start="2"><li>컴파일 및 디버깅 기능 제공</li></ol><ul><li>소스 코딩이 완료된 후 이를 컴파일하면 문법에 어긋나지 않았는지 확인하고 오류가 발생하면 이를 추적하여 수정할 수 있는 디버깅 기능을 제공</li></ul><ol start="3"><li>외부 연계모듈과 통합 기능 제공</li></ol><ul><li>EAI; Enterprise Application Integration, ESB; Enterprise Service Bus 등 외부 인터페이스 모듈과 통합을 통하여 통합 개발 기능 제공</li><li>JDBC; Java Database Connection, ODBC;Open Database Connectivity 등을 통하여 데이터베이스 연동을 통한 통합 개발 기능 제공</li><li>외부 협상, 배포 관리 기능과 연계되어 소스 코드의 형상관리 및 자동 배포 가능</li></ul><h3 id="ide-도구-비교"><a class="markdownIt-Anchor" href="#ide-도구-비교"></a> IDE 도구 비교</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_04.png" alt="IDE 도구 비교" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;개발하고자 하는 응용 소프트웨어와 연계 대상 모듈간의 특성을 고려하여 효율적인 데이터 송수신 방법을 정의&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="IDE도구" scheme="https://hyeonukdev.github.io/tags/IDE%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-26T05:23:40.000Z</published>
    <updated>2020-05-26T05:23:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="1-단위모듈-구현"><a class="markdownIt-Anchor" href="#1-단위모듈-구현"></a> 1. 단위모듈 구현</h3><ul><li>통합 구현에서 단위 모듈 구현은 비즈니스 컴포넌트, 내외부 인터페이스 모듈, 데이터베이스 접근 모듈 등 <u>통합 구현이 필요한 단위 컴포넌트 구현</u></li><li>고려사항<ol><li>응집도는 높히고 결합도는 낮춤</li><li>공통모듈을 먼저 구현</li><li>항상 예외처리 로직을 구려하여 구현</li></ol></li></ul><h3 id="2-단위모듈-테스트"><a class="markdownIt-Anchor" href="#2-단위모듈-테스트"></a> 2. 단위모듈 테스트</h3><ul><li>컴퓨터 프로그래밍에서 소스 코드의 특정 모듈이 의도된 대로 정확히 작동하는지 검증하는 절차</li><li>테스트 방법<ol><li>화이트박스 테스트</li><li>메소드 기반 테스트</li><li>화면 기반 테스트</li><li>스텁과 드라이버 활용 테스트</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;1-단위모듈-구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-단위모듈-구현&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 단위모듈테스트</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%ED%85%8C%EC%8A%A4%ED%8A%B8/</id>
    <published>2020-05-26T05:11:47.000Z</published>
    <updated>2020-05-26T05:11:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="단위모듈-테스트의-개념"><a class="markdownIt-Anchor" href="#단위모듈-테스트의-개념"></a> 단위모듈 테스트의 개념</h3><ul><li>컴퓨터 프로그래밍에서 소스 코드의 특정 모듈이 의도된 대로 정확히 작동하는지 검증하는 절차</li></ul><h3 id="단위모듈-테스트-방법"><a class="markdownIt-Anchor" href="#단위모듈-테스트-방법"></a> 단위모듈 테스트 방법</h3><ol><li>화이트박스 테스트</li></ol><ul><li>단위모듈 테스트의 가장 기본적인 방법</li><li>모듈 내부의 소스 코드를 보면서 테스트 케이스를 다양하게 만들어서 테스트</li></ul><ol start="2"><li>메소드 기반 테스트</li></ol><ul><li>단위 모듈의 외부에 공개된 메소드 기반 테스트</li><li>메소드에 파라미터 값을 다르게 호출하면서 다양한 테스트 수행</li></ul><ol start="3"><li>화면 기반 테스트</li></ol><ul><li>사용자용 화면이 있는 경우 각각의 화면 단위로 단위모듈 개발 후 화면에 직접 데이터를 입력하며 테스트 수행</li><li>화면과 연계된 서비스 컴포넌트, 비즈니스 컴포넌트 및 공통 텀포넌트를 한꺼번에 단위 테스트에 참여시킬 수 있음</li><li>사용자 시나리오에 기반한 단위 모듈 테스트</li></ul><ol start="4"><li>스텀과 드라이버 활용 테스트</li></ol><ul><li>사용자용 화면이 없는 경우 스텁 혹은 드라이버를 활용한 단위모듈 테스트</li><li>서비스 컴포넌트, 비즈니스 컴포넌트 등 하위 모듈 개발이 안된 경우에도 스텁과 드라이버를 활용한 단위 테스트 가능</li></ul><h3 id="소스코드-커버리지-개념"><a class="markdownIt-Anchor" href="#소스코드-커버리지-개념"></a> 소스코드 커버리지 개념</h3><ul><li>프로그램의 테스트 수행 정도를 나타내는 값으로 테스트 수행의 완벽성을 측정하는 도구</li></ul><h3 id="소스코드-커버리지-유형"><a class="markdownIt-Anchor" href="#소스코드-커버리지-유형"></a> 소스코드 커버리지 유형</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_02.png" alt="소스코드커버리지" /></p><ul><li>구문 커버리지<ul><li>소스코드 구문에 대한 단순한 실행 여부 측정</li></ul></li><li>결정 커버리지<ul><li>결정 조건 내의 전체 조건식이 최소한 참/거짓 한 번의 값을 가지도록 측정</li></ul></li><li>조건 커버리지<ul><li>전체 조건식의 결과와 관계없이 각 개별 조건식이 참/거짓 한번 모두 갖도록 조건식을 조합</li></ul></li><li>조건/결정 커버리지<ul><li>전체조건식이 참/거짓 한번씩 가지면서, 개별 조건식이 참/거짓 모두 한 번씩 갖도록 조합</li></ul></li><li>변경조건/결정 커버리지<ul><li>각 개별 조건식이 다른 개별 조건식에 무관하게 전체 조건식의 결과에 영향</li></ul></li><li>다중조건 커버리지<ul><li>결정 조건 내의 모든 개별 조건식의 모든 가능한 논리적 조합 100% 보상</li></ul></li></ul><h3 id="ide도구를-활용한-디버깅"><a class="markdownIt-Anchor" href="#ide도구를-활용한-디버깅"></a> IDE도구를 활용한 디버깅</h3><ul><li>Eclipse 혹은 Window Visual Studio 같은 IDE 도구를 활용하여 단위 모듈에 대한 디버깅을 실시</li><li>디버깅 시 에러가 나온 코등 대해서 로직을 따라가면 변수 값의 변화를 관찰</li></ul><h3 id="단위테스트-자동화-도구를-활용한-디버깅"><a class="markdownIt-Anchor" href="#단위테스트-자동화-도구를-활용한-디버깅"></a> 단위테스트 자동화 도구를 활용한 디버깅</h3><ul><li>JUnit<ul><li>Java 기반의 단위 모듈 테스트 자동화 도구</li></ul></li><li>CppUnit<ul><li>C++ 언어 기반의 단위 모듈 테스트 자동화 도구</li></ul></li><li>unittest<ul><li>Python에서 단위 테스트를 수행하기 위한 자동화 도구<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_03.png" alt="unittest를 활용한 사례" /></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;단위모듈-테스트의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#단위모듈-테스트의-개
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="단위모듈테스트" scheme="https://hyeonukdev.github.io/tags/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 단위모듈구현</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/</id>
    <published>2020-05-26T04:54:48.000Z</published>
    <updated>2020-05-26T04:54:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><ul><li>구성된 연계 매커니즘에 대한 명세서를 참조하여 <u>연계 모듈 구현을 위한 논리적, 물리적 환경을 준비</u></li><li>구성된 연계 매너키즘에 대한 명세서를 참조하여 <u>외부 시스템과 연계 모듈을 구현</u></li><li><u>연계 모듈의 안정적인 작동 여부와 모듈 간 인터페이스를 통해 연동된 데이터의 무결성을 검증</u></li><li>구현된 연계 모듈을 테스트할 수 있는 <u>테스트 케이스를 작성하고 단위 테스트를 수행하기 위한 테스트 조건을 명세화</u></li></ul><h3 id="통합구현의-개념"><a class="markdownIt-Anchor" href="#통합구현의-개념"></a> 통합구현의 개념</h3><ul><li>모듈 간의 분산이 이루어진 경우를 포함하여 단위 모듈 간의 데이터 관계를 분석하고, 이를 기반으로 한 <u>매커니즘 모듈 간의 효율적인 연계</u>를 구현</li></ul><h3 id="단위모듈-구현의-개념"><a class="markdownIt-Anchor" href="#단위모듈-구현의-개념"></a> 단위모듈 구현의 개념</h3><ul><li>통합 구현에서 단위 모듈 구현은 비즈니스 컴포넌트, 내외부 인터페이스 모듈, 데이터베이스 접근 모듈 등 <u>통합 구현이 필요한 단위 컴포넌트 구현</u></li></ul><h3 id="단위모듈-종류"><a class="markdownIt-Anchor" href="#단위모듈-종류"></a> 단위모듈 종류</h3><ul><li>화면모듈</li><li>화면에서 입력 받은 데이터 처리를 위한 서비스 컴포넌트</li><li>비즈니스 트랜잭션 컴포넌트</li><li>데이터베이스 접근 컴포넌트</li><li>내외부 인터페이스 컴포넌트</li><li>데이터 암/복호화 컴포넌트<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_01.png" alt="단위모듈" /></li></ul><h3 id="공통모듈-구현"><a class="markdownIt-Anchor" href="#공통모듈-구현"></a> 공통모듈 구현</h3><ul><li>모든 서비스 컴포넌트 혹은 트랜잭션 컴퓨터가 <u>공통적으로 사용하는 컴포넌트 </u></li><li>종류<ul><li>내외부 인터페이스 컴포넌트</li><li>DB접근 컴포넌트</li><li>암/복호화 컴포넌트</li></ul></li><li>화면에서의 공통모듈은 스크립트로 구현하는데 날짜 계산, 주소 정보, 주민등록번호 정합성 체크 컴포넌트</li></ul><h3 id="단위모듈-구현시-고려사항"><a class="markdownIt-Anchor" href="#단위모듈-구현시-고려사항"></a> 단위모듈 구현시 고려사항</h3><ul><li>모듈 내 구성요소들 간의 <u>응집도는 높이고 모듈간의 결합도는 낮춤</u></li><li><u>공통모듈 구현을 먼저하고, 개별 단위모듈 구현시 이를 재사용</u></li><li>항상 예외처리 로직을 고려하여 구현</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구성된 연계 매커니즘에 대한 명세서를 참조하여 &lt;u&gt;연계 모듈 구현을 위한 논리적, 물리적 환경을 준비&lt;/u
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="단위모듈구현" scheme="https://hyeonukdev.github.io/tags/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/25/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/25/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-24T15:22:42.000Z</published>
    <updated>2020-05-24T15:22:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="1-소프트웨어-버전-관리-도구"><a class="markdownIt-Anchor" href="#1-소프트웨어-버전-관리-도구"></a> 1. 소프트웨어 버전 관리 도구</h3><ul><li>형상관리지침을 활용하여 제품 소프트웨어의 신규 개발, 변경, 개선과 관련된 수정 내역을 관리하는 도구</li><li>소프트웨어 버전관리 도구 유형</li></ul><ol><li>공유 폴더 방식 : RCS, SCCS</li><li>클라이언트/서버 방식 : CVS, SVN</li><li>분산 저장소 방식 : Git, Bitkeeper</li></ol><h3 id="2-빌드-자동화-도구"><a class="markdownIt-Anchor" href="#2-빌드-자동화-도구"></a> 2. 빌드 자동화 도구</h3><ul><li>제품 소프트웨어 실행 파일 생성을 자동화하기 위해서 저장소에 있는 소스를 자동으로 읽어서 빌드를 하여 실행 파일을 만드는 도구</li><li>온라인 빌드 자동화 도구 : 젠킨스</li><li>안드로이드 빌드 도구 : 그래들</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;1-소프트웨어-버전-관리-도구&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 빌드 자동화 도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EB%B9%8C%EB%93%9C%EC%9E%90%EB%8F%99%ED%99%94%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EB%B9%8C%EB%93%9C%EC%9E%90%EB%8F%99%ED%99%94%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-24T14:20:12.000Z</published>
    <updated>2020-05-24T14:20:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="소프트웨어-빌드-자동화-도구-개념"><a class="markdownIt-Anchor" href="#소프트웨어-빌드-자동화-도구-개념"></a> 소프트웨어 빌드 자동화 도구 개념</h3><ul><li>제품 소프트웨어 <u>실행 파일 생성을 자동화</u>하기 위해서 저장소에 있는 소스를 자동으로 읽어서 빌드를 하여 실행 파일을 만드는 도구</li><li>빌드 자동화 도구는 <u>지속적인 통합</u>과 일맥상통함</li><li>수없이 반복해서 최종 결과물을 만들어내야 하는 소프트웨어 개발 업무에 빌드 자동화 도구는 반드시 갖추어야함</li></ul><h3 id="온라인-빌드-자동화-도구-젠킨스"><a class="markdownIt-Anchor" href="#온라인-빌드-자동화-도구-젠킨스"></a> 온라인 빌드 자동화 도구, 젠킨스</h3><ul><li>빌드 자동화 도구로서 가장 많이 활용</li><li>Java 기반으의 오픈 소스로 지속적 통합관리를 가능</li><li>Apache-tomcat과 같은 서블릿 컨테이너 서버 기반으로 구동되는 시스템</li><li>CVS, SVN, Git 등 다양한 버전 관리 도구를 지원</li><li>특징<ul><li>쉬운 설치</li><li>친숙한 GUI</li><li>저장소 부하 감소</li><li>실시간 피드백</li><li>분산 빌드</li><li>3rd Party 플러그인</li></ul></li></ul><h3 id="gradle-안드로이드-환경에-적합한-도구"><a class="markdownIt-Anchor" href="#gradle-안드로이드-환경에-적합한-도구"></a> Gradle 안드로이드 환경에 적합한 도구</h3><ul><li>여러가지 언어의 빌드 환경 구성이 가능</li><li>안드로이드 개발환경에서 빌드 자동화됨</li><li>모든 그래들 빌드는 하나 이상의 projects로 구성되고 각 project는 하나 이상의 task들로 구성되며 이 task는 어떤 클래스를 컴파일 하거나 jar를 생성하거나 javadoc를 만드는 작업들을 의미함</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-빌드-자동화-도구-개념&quot;&gt;&lt;a class=&quot;markdownIt-An
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="빌드자동화도구" scheme="https://hyeonukdev.github.io/tags/%EB%B9%8C%EB%93%9C%EC%9E%90%EB%8F%99%ED%99%94%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 소프트웨어 버전 관리 도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-24T13:23:32.000Z</published>
    <updated>2020-05-24T13:23:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><ul><li>형상 관리 지침을 활용하여 <u>제품 소프트웨어의 신규 개발, 변경, 개선과 관련된 버전을 등록</u></li><li>형상 관리 지침을 활용하여 <u>제품 소프트웨어에 대한 버전 현황 관리와 소스, 관련 자료 백업</u>을 수행</li></ul><h3 id="소프트웨어-버전-관리-도구-개념"><a class="markdownIt-Anchor" href="#소프트웨어-버전-관리-도구-개념"></a> 소프트웨어 버전 관리 도구 개념</h3><ul><li>형상 관리 지침을 활용하여 제품 소프트웨어의 신규 개발, 변경, 개선과 관련된 수정 내역을 관리하는 도구</li></ul><h3 id="버전-관리-도구의-유형별-특징"><a class="markdownIt-Anchor" href="#버전-관리-도구의-유형별-특징"></a> 버전 관리 도구의 유형별 특징</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_06.png" alt="버전관리도구" /></p><h3 id="현업에서-쓰이는-버전-관리-도구별-특징"><a class="markdownIt-Anchor" href="#현업에서-쓰이는-버전-관리-도구별-특징"></a> 현업에서 쓰이는 버전 관리 도구별 특징</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_07.png" alt="버전관리도구특징" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_08.png" alt="버전관리도구특징" /></p><h3 id="버전관리-도구-사용-순서"><a class="markdownIt-Anchor" href="#버전관리-도구-사용-순서"></a> 버전관리 도구 사용 순서</h3><ol><li>버전 관리 도구 유의 사항 확인</li><li>버전 관리 도구 동작 원리 학습</li><li>버전 관리 도구 실행</li><li>버전 관리 도구 기능별 동작</li><li>형상 관리 개념 공유</li></ol><h3 id="소프트웨어-버전-관리-도구-사용시-유의점"><a class="markdownIt-Anchor" href="#소프트웨어-버전-관리-도구-사용시-유의점"></a> 소프트웨어 버전 관리 도구 사용시 유의점</h3><ol><li>형상 관리 지침에 의거 버전에 대한 정보를 언제든지 접근 가능</li><li>개발자, 배포자 이외에 불필요한 사용자의 소스 수정은 불가능함</li><li>동일한 프로젝트 파일에 대해서 여러 개발자가 동시 개발할 수 있어야 함</li><li>에러 발생 시 최대한 빠른 시간 내에 복구함</li></ol><h3 id="제품-소프트웨어-버전-관리-도구-활용방향"><a class="markdownIt-Anchor" href="#제품-소프트웨어-버전-관리-도구-활용방향"></a> 제품 소프트웨어 버전 관리 도구 활용방향</h3><ul><li>제품 소프트웨어 개발 조직이나 배포된 제품이 있는 조직에서는 <u>기 보유 제품 버전과 새로 개발된 버전을 동시에 유지, 관리</u></li><li>활용성 중심으로 버전 관리 도구의 상세 기능을 활용하여 새 버전을 유지하면서 기존 버전의 관리도 함께 수행</li><li>이를 위해 <u>백업 및 장애 복구 등의 추가적인 사항도 Case 별로 고려</u></li></ul><h3 id="버전-관리-도구를-활용한-통합-버전-현황-관리"><a class="markdownIt-Anchor" href="#버전-관리-도구를-활용한-통합-버전-현황-관리"></a> 버전 관리 도구를 활용한 통합 버전 현황 관리</h3><ul><li><u>기존에 버전 관리의 버전별 공동 작업 이외에도 백업 및 복구 작업, 공동 솔루션 기반의 여러 가지 작업 등이 통합되어 현황 관리</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_09.png" alt="버전관리도구현황관리" /></li></ul><h3 id="버전-관리-도구-활용시-자료-백업-정책-및-방법"><a class="markdownIt-Anchor" href="#버전-관리-도구-활용시-자료-백업-정책-및-방법"></a> 버전 관리 도구 활용시 자료 백업 정책 및 방법</h3><ul><li>버전 관리 도구를 활용, 제품 소프트웨어 백업은 내부의 정확한 백업 정책을 먼저 세워야 하고, 상세 백업 방법을 공유<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_10.png" alt="사례및방법" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;형상 관리 지침을 활용하여 &lt;u&gt;제품 소프트웨어의 신규 개발, 변경, 개선과
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="소프트웨어버전관리도구" scheme="https://hyeonukdev.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-24T12:58:41.000Z</published>
    <updated>2020-05-24T12:58:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="1-제품-소프트퉤어-매뉴얼-작성"><a class="markdownIt-Anchor" href="#1-제품-소프트퉤어-매뉴얼-작성"></a> 1. 제품 소프트퉤어 매뉴얼 작성</h3><ul><li>제품소프트웨어 매뉴얼은 설치 매뉴얼과 사용자 매뉴얼이 있음</li><li>설치 및 사용자 매뉴얼은 개발자의 기준이 아닌 사용자의 기준으로 작성</li><li>설치 및 사용자 매뉴얼의 작성 단계와 작성 항목에 대한 이해</li></ul><h3 id="2-국제-표준-제품-품질-특성"><a class="markdownIt-Anchor" href="#2-국제-표준-제품-품질-특성"></a> 2. 국제 표준 제품 품질 특성</h3><ul><li>제품 품질 표준과 프로세스 품질 표준으로 나뉨</li><li>소프트웨어 <u>제품</u> 품질 관련 국제 표준</li><li>소프트웨어 <u>프로세스</u> 품질 관련 국제 표준</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;1-제품-소프트퉤어-매뉴얼-작성&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 국제 표준 제품 품질 특성</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%EA%B5%AD%EC%A0%9C%ED%91%9C%EC%A4%80%EC%A0%9C%ED%92%88%ED%92%88%EC%A7%88%ED%8A%B9%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%EA%B5%AD%EC%A0%9C%ED%91%9C%EC%A4%80%EC%A0%9C%ED%92%88%ED%92%88%EC%A7%88%ED%8A%B9%EC%84%B1/</id>
    <published>2020-05-24T12:54:12.000Z</published>
    <updated>2020-05-24T12:54:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="국제-표준-제품-품질-특성-분류"><a class="markdownIt-Anchor" href="#국제-표준-제품-품질-특성-분류"></a> 국제 표준 제품 품질 특성 분류</h3><ul><li>제품 품질 관련<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_01.png" alt="제품 품질 관련1" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_02.png" alt="제품 품질 관련2" /></li><li>프로세스 관련<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_03.png" alt="프로세스 관련" /></li><li>ISO/IEC 12119<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_04.png" alt="ISO/IEC 12119 평가절차" /></li><li>ISO/IEC 14598<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_05.png" alt="ISO/IEC 14598 특징" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;국제-표준-제품-품질-특성-분류&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="국제표준제품품질특성" scheme="https://hyeonukdev.github.io/tags/%EA%B5%AD%EC%A0%9C%ED%91%9C%EC%A4%80%EC%A0%9C%ED%92%88%ED%92%88%EC%A7%88%ED%8A%B9%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 제품소프트웨어매뉴얼작성</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/</id>
    <published>2020-05-24T11:53:20.000Z</published>
    <updated>2020-05-24T11:53:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><ul><li>사용자가 제품 소프트웨어를 설치하는 데 참조할 수 있도록 <u>제품 소프트웨어 설치 매뉴얼의 기본 구성을 수립하고 작성</u></li><li>사용자가 제품 소프트웨어를 설치하고 사용하는데 필요한 <u>제품 소프트웨어의 설치 파일 및 매뉴얼을 배포용 미디어로 제작</u></li></ul><h3 id="제품소프트웨어-매뉴얼-종류"><a class="markdownIt-Anchor" href="#제품소프트웨어-매뉴얼-종류"></a> 제품소프트웨어 매뉴얼 종류</h3><ul><li>설치 매뉴얼</li><li>사용자 매뉴얼</li></ul><h3 id="제품-소프트웨어-설치-매뉴얼-개념"><a class="markdownIt-Anchor" href="#제품-소프트웨어-설치-매뉴얼-개념"></a> 제품 소프트웨어 설치 매뉴얼 개념</h3><ul><li>사용자가 제품 구매 후 최초 설치 시 참조하는 매뉴얼</li><li>제품 소프트웨어 소개, 설치 파일, 설치 절차 등이 포함</li></ul><h3 id="설치-매뉴얼"><a class="markdownIt-Anchor" href="#설치-매뉴얼"></a> 설치 매뉴얼</h3><h4 id="1-설치-매뉴얼-작성의-기본-사항"><a class="markdownIt-Anchor" href="#1-설치-매뉴얼-작성의-기본-사항"></a> 1. 설치 매뉴얼 작성의 기본 사항</h4><ul><li>설치 매뉴얼을 개발자의 기준이 아닌 <u>사용자의 기준으로 작성</u></li><li>최초 설치 진행부터 완료까지 <u>순차적</u>으로 진행</li><li>각 단계별 메시지 및 <u>해당화면을 순서대로 전부 캡처하여 설명</u></li><li>설치 중간에 이상 발생 시 해당 메시지 및 에러에 대한 내용을 분류하여 설명</li></ul><h4 id="2-제품-소프트웨어-설치-매뉴얼의-작성-항목"><a class="markdownIt-Anchor" href="#2-제품-소프트웨어-설치-매뉴얼의-작성-항목"></a> 2. 제품 소프트웨어 설치 매뉴얼의 작성 항목</h4><ol><li>목차 및 개요<ul><li>목차는 매뉴얼 전체의 내용을 순서대로 요약</li><li>개요에는 설치 매뉴얼의 주요 특징에 대한 정리와 설치 매뉴얼에서의 구성과 설치 방법, 순서 등에 기술</li></ul></li><li>서문<ul><li>문서 이력 정보<ul><li>매뉴얼 변경 이력 정보</li></ul></li><li>설치 도구 구성<ul><li>exe/dll/ini/chm 등 설치 관련 파일 설명</li><li>폴더 및 설치 프로그램 실행 파일 설명</li><li>설치 이후에 설치 결과를 기록하는 Log 폴더 설명</li></ul></li></ul></li><li>기본사항<ul><li>기본적으로 제품 소프트웨어 관련하여 설명되어야 할 항목</li></ul></li></ol><h4 id="3-제품-소프트웨어-설치-환경-체크-항목"><a class="markdownIt-Anchor" href="#3-제품-소프트웨어-설치-환경-체크-항목"></a> 3. 제품 소프트웨어 설치 환경 체크 항목</h4><ul><li>제품 설치와 관련하여 아래의 환경 체크 항목을 공지<ul><li>사용자 환경<ul><li>사용자의 CPU 및 Memory, OS 등의 적합 환경</li></ul></li><li>응용프로그램<ul><li>설치 전 다른 응용 플그램의 종료</li></ul></li><li>업그레이드 버전<ul><li>업그레이드 이전 버전에 대한 존재 유무 확인</li></ul></li><li>백업 폴더 확인<ul><li>데이터 저장 폴더를 확인하여 설치 시 폴더 동기화</li></ul></li></ul></li></ul><h4 id="4-제품-소프트웨어-설치-매뉴얼-기본-사항"><a class="markdownIt-Anchor" href="#4-제품-소프트웨어-설치-매뉴얼-기본-사항"></a> 4. 제품 소프트웨어 설치 매뉴얼 기본 사항</h4><ul><li>제품 소프트웨어와 관련하여 설명되어야 할 기본 항목</li><li>간략한 기능 및 UI를 첨부하고 요약함<ul><li>제품 소프트웨어 개요</li><li>설치 관련 파일</li><li>설치 절차</li><li>설치 아이콘</li><li>프로그램 삭제</li><li>설치 환경</li><li>설치 버전 및 작성자</li><li>FAQ</li></ul></li></ul><h4 id="5-제품-소프트웨어-설치-매뉴얼-내용-상세-가이드"><a class="markdownIt-Anchor" href="#5-제품-소프트웨어-설치-매뉴얼-내용-상세-가이드"></a> 5. 제품 소프트웨어 설치 매뉴얼 내용 상세 가이드</h4><ol><li>설치 화면 및 UI<ul><li>설치 실행</li><li>표시되는 내용 및 안내창의 메시지 설명</li></ul></li><li>설치 이상 시 메시지 설명<ul><li>설치가 잘못되었거나 잘못된 환경일 경우 메시지</li><li>해당 이상 내용에 따른 메시지를 설명</li><li>설치 단계별 참고 사항, 주의 사항등을 메모로 추가</li></ul></li><li>설치 완료 및 결과<ul><li>정상 설치 완료 시 최종 메시지 출력</li><li>정상 결과 및 사용에 대한 안내를 함으로써 설치가 잘 되 었음을 최종 통지</li></ul></li><li>FAQ<ul><li>실제 설치 시 자주 발생하는 어려움들을 FAQ로 정리하여 제품이 설치되지 않을 때를 대비</li></ul></li><li>설치 시 점검 사항<ul><li>설치 전 사용자 환경에 맞추어 점검할 내용들을 설명</li><li>사용자 계정 및 설치 권한에 대한 확인</li><li>설치 중간에 에러 발생 시 체크할 사항을 설명</li></ul></li><li>Network 환경 및 보안<ul><li>설치 시 Network 문제로 인해 오류가 발생하지 않도록 사전에 Connection 체크</li><li>보안 및 방화벽 등의 문제로 설치가 안될 경우에 대비해 환경 체크할 수 있도록 가이드</li></ul></li></ol><h4 id="6-제품-소프트웨어-고객-지원-방법-상세-가이드"><a class="markdownIt-Anchor" href="#6-제품-소프트웨어-고객-지원-방법-상세-가이드"></a> 6. 제품 소프트웨어 고객 지원 방법 상세 가이드</h4><ul><li>유선 및 E-mail, Website URL</li></ul><h4 id="7-준수-정보-제한-보증"><a class="markdownIt-Anchor" href="#7-준수-정보-제한-보증"></a> 7. 준수 정보 &amp; 제한 보증</h4><ul><li>Serial 보존, 불법 등록 사용 금지 등의 준수 사항 권고</li><li>저작권 정보 관련 작성</li></ul><h4 id="8-제품-소프트웨어-설치-매뉴얼-작성-순서"><a class="markdownIt-Anchor" href="#8-제품-소프트웨어-설치-매뉴얼-작성-순서"></a> 8. 제품 소프트웨어 설치 매뉴얼 작성 순서</h4><ol><li>기능식별</li><li>UI분류</li><li>설치/백업 파일 확인</li><li>Uninstall 절차 확인</li><li>이상 Case 확인</li><li>최종 매뉴얼 적용</li></ol><h3 id="제품-소프트웨어-사용자-매뉴얼-개념"><a class="markdownIt-Anchor" href="#제품-소프트웨어-사용자-매뉴얼-개념"></a> 제품 소프트웨어 사용자 매뉴얼 개념</h3><ul><li><p>개발이 완료된 제품 소프트웨어를 고객에게 전달하기 위한 형태로 패키징하고, <u>설치와 사용에 필요한 제반 절차 및 환경 등 전체 내용을 포함하는 매뉴얼 작성</u></p></li><li><p>제품 소프트웨어에 대한 <u>패치 개발과 업그레이드를 위해 버전 관리 수행</u></p></li></ul><h3 id="제품-소프트웨어-사용자-매뉴얼-작성-단계"><a class="markdownIt-Anchor" href="#제품-소프트웨어-사용자-매뉴얼-작성-단계"></a> 제품 소프트웨어 사용자 매뉴얼 작성 단계</h3><ol><li>작성 지침 정의</li><li>사용자 매뉴얼 구성요소의 정의<ul><li>제품 소프트웨어 기능</li><li>구성 객체 목록</li><li>객체별 메서드</li><li>메서드의 파라미터 및 설명</li><li>실제 사용 예제</li><li>사용자 환경 세팅 방법</li></ul></li><li>구성 요소별 내용 작성</li><li>사용자 매뉴얼 검토</li></ol><h3 id="제품-소프트웨어-사용자-매뉴얼의-작성-항목"><a class="markdownIt-Anchor" href="#제품-소프트웨어-사용자-매뉴얼의-작성-항목"></a> 제품 소프트웨어 사용자 매뉴얼의 작성 항목</h3><ol><li>목차 및 개요</li><li>서문</li><li>기본 사항</li></ol><h3 id="제품-소프트웨어-사용자-매뉴얼-기본-사항"><a class="markdownIt-Anchor" href="#제품-소프트웨어-사용자-매뉴얼-기본-사항"></a> 제품 소프트웨어 사용자 매뉴얼 기본 사항</h3><ul><li>간략한 기능 및 UI를 첨부하고 요약</li><li>제품 소프트웨어 개요</li><li>제품 소프트웨어 사용</li><li>제품 소프트웨어 관리</li><li>모델, 버전별 특징</li><li>기능, I/F 특징</li><li>제품 소프트웨어 구동 환경</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;사용자가 제품 소프트웨어를 설치하는 데 참조할 수 있도록 &lt;u&gt;제품 소프트웨
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어매뉴얼작성" scheme="https://hyeonukdev.github.io/tags/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-22T14:01:11.000Z</published>
    <updated>2020-05-22T14:01:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="1-애플리케이션-패키징"><a class="markdownIt-Anchor" href="#1-애플리케이션-패키징"></a> 1. 애플리케이션 패키징</h3><ul><li>개발이 완료된 소프트웨어를 <u>고객에게 전달하기 위한 형태로 패키징</u></li><li>설치와 사용에 필요한 제번 절차 및 환경 등 전체 내용을 포함하는 매뉴얼을 작성</li><li>소프트웨어에 대한 <u>패치 개발과 업그레이드</u>를 위하여 버전 관리를 수행</li><li>사용자 관점의 애플리케이션 패키징 고려사항과 애플리케이션 패키징 순서 이해</li><li>애플리케이션의 변경 정보가 포함된 릴리즈 노트 개념과 작성항목 이해</li></ul><h3 id="2-애플리케이션-배포-도구"><a class="markdownIt-Anchor" href="#2-애플리케이션-배포-도구"></a> 2. 애플리케이션 배포 도구</h3><ul><li>애플리케이션을 배포하기 위한 <u>패키징 시에 디지털 콘텐츠의 지적 재산권을 보호하고 관리하는 기능을 제공하여, 안전한 유통과 배포를 보장하는 도구이자 솔루션</u></li><li>패키징 도구 활용 시 고려사항 이해</li><li>저작권 관리의 흐름과 구성 요소 이해</li></ul><h3 id="3-애플리케이션-모니터링-도구"><a class="markdownIt-Anchor" href="#3-애플리케이션-모니터링-도구"></a> 3. 애플리케이션 모니터링 도구</h3><ul><li>제품 소프트웨어를 사용자 환경에 설치 후 기능 및 성능 운영 현황을 파악하는 도구</li><li>애플리케이션 변경관리, 성능관리, 정적분석, 동적분석 도구 등이 있음</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;1-애플리케이션-패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 애플리케이션 모니터링 도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-22T13:58:26.000Z</published>
    <updated>2020-05-22T13:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="애플리케이션-모니터링-도구-개념"><a class="markdownIt-Anchor" href="#애플리케이션-모니터링-도구-개념"></a> 애플리케이션 모니터링 도구 개념</h3><ul><li>제품 소프트웨어를 사용자 환경에 설치 후 기능 및 성능 운영 현황을 파악하는 도구</li></ul><h3 id="애플리케이션-모니터링-도구-필요성"><a class="markdownIt-Anchor" href="#애플리케이션-모니터링-도구-필요성"></a> 애플리케이션 모니터링 도구 필요성</h3><ul><li>제품소프트웨어 패키징에서 애플리케이션 모니터링 도구가 필요한 이유는 사용자 환경에 제품 소프트웨어가 설치되었을 때 <u>애플리케이션 성능을 모니터링하여 제품의 장애를 미리 예방</u></li></ul><h3 id="애플리케이션-모니터링-도구-기능"><a class="markdownIt-Anchor" href="#애플리케이션-모니터링-도구-기능"></a> 애플리케이션 모니터링 도구 기능</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0522_02.png" alt="애플리케이션 모니터링 도구 기능" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;애플리케이션-모니터링-도구-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션모니터링도구" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 애플리케이션 배포 도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EB%B0%B0%ED%8F%AC%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EB%B0%B0%ED%8F%AC%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-22T13:31:44.000Z</published>
    <updated>2020-05-22T13:31:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="애플리케이션-패키징-도구-개념"><a class="markdownIt-Anchor" href="#애플리케이션-패키징-도구-개념"></a> 애플리케이션 패키징 도구 개념</h3><ul><li>애플리케이션을 배포하기 위한 <u>패키징 시에 디지털 콘텐츠의 지적 재산권을 보호하고 관리하는 기능을 제공하여, 안전한 유통과 배포를 보장하는 도구이자 솔루션</u></li><li><u>불법 복제로부터 디지털 콘텐츠의 지적 재산권을 보호해 주는 사용 권한 제어 기술, 패키징 기술, 라이선스 관리, 권한 통제 기술등을 포함</u></li></ul><h3 id="패키징-도구-활용-시-고려-사항"><a class="markdownIt-Anchor" href="#패키징-도구-활용-시-고려-사항"></a> 패키징 도구 활용 시 고려 사항</h3><ul><li>반드시 <u>암호화/보안 고려</u><ul><li>패키징 시 사용자에게 배포되는 소프트웨어임을 감안하여 반드시 내부 콘텐츠에 대한 암호화 및 보안을 고려</li></ul></li><li>추가로 다양한 <u>이기종 연동 고려</u><ul><li>패키징 도구를 활용하여 여러 가지 이기종 콘텐츠 및 단말기 간 DRM 연동을 고려</li></ul></li><li>사용자 편의성을 위한 <u>복잡성 및 비효율성 문제 고려</u><ul><li>사용자 입장에서 불편해질 수 있는 문제를 고려하여, 최대한 효율적으로 적용</li></ul></li><li>애플리케이션 종류에 <u>적합한 암호화 알고리즘 적용</u><ul><li>애플리케이션의 종류에 맞는 알고리즘을 선택하여 배포 시 범용성에 지장이 없도록 고려</li></ul></li></ul><h3 id="drm-digital-rights-management"><a class="markdownIt-Anchor" href="#drm-digital-rights-management"></a> DRM; Digital Rights Management</h3><ul><li><u>디지털 콘텐츠의 무단 사용을 막아, 제공자의 권리와 이익을 보호해 주는 기술과 서비스</u></li><li>불법 복제와 변조를 방지</li></ul><h3 id="디지털-저작권-관리의-특징"><a class="markdownIt-Anchor" href="#디지털-저작권-관리의-특징"></a> 디지털 저작권 관리의 특징</h3><ul><li>저작권자와 콘텐츠 유통업자 사이의 거래구조 투명성을 제공</li><li>사용가능 횟수, 유효기간, 사용환경 등의 사용 규칙을 제공</li><li>이메일, 디지털미디어, 네트워크 등을 통한 자유로운 상거래 제공</li></ul><h3 id="저작권-관리-흐름"><a class="markdownIt-Anchor" href="#저작권-관리-흐름"></a> 저작권 관리 흐름</h3><ul><li>콘텐츠 제공자, 분재자, 소비자 간의 패키징 배포 및 관리의 주제를 중앙의 클리어링 하우스에서 키 관리 및 라이선스 발급 관리<br /><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=http%3A%2F%2Fcfile6.uf.tistory.com%2Fimage%2F99E29D475E983B8D180A52" alt="저작권관리흐름도" /></li></ul><h3 id="저작권-관리-구성-요소"><a class="markdownIt-Anchor" href="#저작권-관리-구성-요소"></a> 저작권 관리 구성 요소</h3><table><thead><tr><th>구성요소</th><th>설명</th></tr></thead><tbody><tr><td>콘텐츠 제공자</td><td>콘텐츠를 제공하는 저작권자</td></tr><tr><td>콘텐츠 분배자</td><td>쇼핑몰 등으로써 암호화된 콘텐츠 제공</td></tr><tr><td>패키지</td><td>콘텐츠를 메타 데이터와 함께 배포 가능한 단위로 묶는 기능</td></tr><tr><td>보안 컨테이너</td><td>원본을 안전하게 유통하기 위한 전자적 보안 장치</td></tr><tr><td>DRM 컨트롤러</td><td>배포된 콘텐츠의 이용 권한을 통제</td></tr><tr><td>클리어링 하우스</td><td>키 관리 및 라이선스 발급 관리</td></tr></tbody></table><h3 id="암호화보안-기능-중심의-패키징-도구-구성-요소"><a class="markdownIt-Anchor" href="#암호화보안-기능-중심의-패키징-도구-구성-요소"></a> 암호화/보안 기능 중심의 패키징 도구 구성 요소</h3><table><thead><tr><th>구성요소</th><th>설명</th></tr></thead><tbody><tr><td>암호화(Encryption)</td><td>콘텐츠및 라이선스를 암호화하고 전자 서명을 할 수 있는 기술</td></tr><tr><td>키 관리(Key Management)</td><td>콘텐츠를 암호화한 키에 대한 저장 및 분배 기술</td></tr><tr><td>암호화 파일 생성(Packager)</td><td>콘텐츠를 암호화된 콘텐츠로 생성하기 위한 기술</td></tr><tr><td>식별 기술(Identification)</td><td>콘텐츠에 대한 식별 체계 표현 기술</td></tr><tr><td>저작권 표현(Right Expression)</td><td>라이선스의 내용 표현 기술</td></tr><tr><td>정책 관리(Policy Management )</td><td>라이선스 발급 및 사용에 대한 정책 표현 및 관리 기술</td></tr><tr><td>크랙 방지(Tamper Resistance)</td><td>크랙에 의한 콘텐츠 사용 방지 기술</td></tr><tr><td>인증(Authentication)</td><td>라이선스 발급 및 사용의 기준이 되는 사용자 인증 기술</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;애플리케이션-패키징-도구-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션배포도구" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EB%B0%B0%ED%8F%AC%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 애플리케이션 패키징</title>
    <link href="https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    <id>https://hyeonukdev.github.io/2020/05/22/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%8C%A8%ED%82%A4%EC%A7%95/</id>
    <published>2020-05-22T12:18:17.000Z</published>
    <updated>2020-05-22T12:18:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><ul><li>신규 개발, 변경, 개선된 제품 <u>소프트웨어의 소스들로부터 모듈들을 빌드하고 고객의 편의성을 고려하여 패키징</u></li><li>이전 릴리즈 이후의 변경, 개선 사항을 포함하여 신규 패키징한 제품 소프트에어에 대한 <u>릴리즈 노트 작성</u></li><li>저작권 보호를 위해 <u>암호화/보안 기능을 제공하는 패키징 도구를 활용하여, 제품 소프트웨어의 설치, 배포 파일을 생성</u></li></ul><h3 id="애플리케이션-패키징-개념"><a class="markdownIt-Anchor" href="#애플리케이션-패키징-개념"></a> 애플리케이션 패키징 개념</h3><ul><li>개발이 완료된 소프트웨어를 <u>고객에게 전달하기 위한 형태로 패키징</u></li><li>설치와 사용에 필요한 제번 절차 및 환경 등 전체 내용을 포함하는 매뉴얼을 작성</li><li>소프트웨어에 대한 <u>패치 개발과 업그레이드</u>를 위하여 버전 관리를 수행</li></ul><h3 id="애플리케이션-패키징-특징"><a class="markdownIt-Anchor" href="#애플리케이션-패키징-특징"></a> 애플리케이션 패키징 특징</h3><ul><li>애플리케이션 패키징은 개발자가 아닌 <u>사용자 중심으로 진행</u></li><li><u>신규 및 변경 개발 소스를 식별하고 이를 모듈화하여 상용 제품으로 패키징</u></li><li>고객의 편의성을 위해 <u>신규/변경 이력을 확인하고, 이를 버전 관리 및 릴리즈 노트를 통해 지속적으로 관리</u></li><li>사용자의 실행 환경을 이해하고 <u>범용 환경에서 사용이 가능하도록</u> 일반적인 배포 형태로 분류하여 패키징 진행</li></ul><h3 id="사용자-실행-환경-이해"><a class="markdownIt-Anchor" href="#사용자-실행-환경-이해"></a> 사용자 실행 환경 이해</h3><ul><li>고객 편의성을 위해 <u>사용자 실행 환경을 우선 고려하여 패키지 진행</u></li><li>사용자 환경은 OS부터 시작하여 <u>실행환경, 시스템 사양 및 고객의 사용 방법</u>까지 상세 분류하여 실행 환경을 사전 정의</li><li>여러 가지 실행 환경이 나오게 된다면 <u>해당 경우에 맞는 배포본을 분류</u>하여 패키징 작업을 여러 번 수행할 수도 있음</li></ul><h3 id="사용자-관점의-애플리케이션-패키징-고려사항"><a class="markdownIt-Anchor" href="#사용자-관점의-애플리케이션-패키징-고려사항"></a> 사용자 관점의 애플리케이션 패키징 고려사항</h3><ul><li>사용자 시스템 수행 최소 환경 정의</li><li>사용자가 직관적으로 확인할 수 있는 UI를 제공하고, 매뉴얼과 일치시켜 패키징 작업</li><li>애플리케이션은 하드에어와 함께 통합 적용될 수 있도록, <u>패키징은 Managed Service 형태로 제공</u></li><li>애플리케이션은 고객 편의성을 위해 안정적 배포가 가장 중요하고, 다양한 사용자 군의 요구사항을 반영하기 위해 <u>패키징의 변경 및 관리를 고려하여 패키징 배포</u></li></ul><h3 id="애플리케이션-패키징-순서"><a class="markdownIt-Anchor" href="#애플리케이션-패키징-순서"></a> 애플리케이션 패키징 순서</h3><ol><li>기능 식별<ul><li>신규 개발 소스의 목적 및 기능을 식별</li><li>입출력 데이터, 전체적인 기능 정의 및 데이터 흐름을 식별</li></ul></li><li>모듈화<ul><li>모듈 단위 분류 및 모듈화를 순서에 맞게 진행</li><li>수행을 위한 기능 단위 및 서비스 분류와 패키징 개념에서의 기능의 공유와 재활용 단위를 분류</li></ul></li><li>빌드 진행<ul><li>애플리케이션빌드 도구를 활용한 빌드를 단위별로 진행</li><li>신규 개발 소스 및 컴파일 결과물 준비</li><li>정상 기능 단위 및 서비스 분류, 빌드 도구 확인 및 빌드 수행</li></ul></li><li>사용자 환경 분석<ul><li>고객 편의성을 위한 사용자의 요구 사항 및 사용 환경을 사전 분석</li><li>최소 사용자 환경 사전 정의</li><li>모듈 단위의 여러 가지 기능별 사용자 환경테스트</li></ul></li><li>패키징 적용 시험<ul><li>최종 패키징에 대해서 사용자 입장에서의 불편한 점 체크</li><li><u>사용자 환경과</u> 똑같은 상황으로 패키징을 적용하여 SW태스팅 수행</li><li>UI 및 시스템 상의 편의성 체크</li></ul></li><li>패키징 변경 개선<ul><li>사용자 입장을 반영하여 패키징에서 변경 및 개선 진행</li><li>패키징 적용 시 변견점 도출</li><li>최소 사용자 환경에서 서비스 가능한 수준의 개선</li><li>모듈 및 빌드 수정을 통한 개선 버전의 재배포를 실습</li></ul></li></ol><h3 id="애플리케이션-릴리즈-노트-개념"><a class="markdownIt-Anchor" href="#애플리케이션-릴리즈-노트-개념"></a> 애플리케이션 릴리즈 노트 개념</h3><ul><li><u>최종 사용자에게 전달되는 제품에 대한 정보 공유</u></li><li><u>제품의 수정, 변경 또는 개선하는 정보가 포함</u></li><li>릴리즈 정보들은 철저하게 테스트를 진행하고, 개발 팀에서 제공하는 사양에 대해 최종적으로 승인된 후 문서를 통해 배포</li></ul><h3 id="릴리즈-노트-작성-순서"><a class="markdownIt-Anchor" href="#릴리즈-노트-작성-순서"></a> 릴리즈 노트 작성 순서</h3><ol><li>모듈 식별</li><li>릴리즈 정보 확인</li><li>릴리즈 노트 개요 작성</li><li>영향도 체크</li><li>정식 릴리즈 노트 작성</li><li>추가 개선 항목 식별</li></ol><h3 id="릴리즈-노트-작성-항목"><a class="markdownIt-Anchor" href="#릴리즈-노트-작성-항목"></a> 릴리즈 노트 작성 항목</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0522_01.png" alt="릴리즈 노트 작성 항목" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;신규 개발, 변경, 개선된 제품 &lt;u&gt;소프트웨어의 소스들로부터 모듈들을 빌드
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션패키징" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-21T09:00:45.000Z</published>
    <updated>2020-05-21T09:00:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="1-알고리즘"><a class="markdownIt-Anchor" href="#1-알고리즘"></a> 1. 알고리즘</h3><ul><li>수학과 컴퓨터 과학, 언어학 또는 관련 분야에서 어떠한 문제를 해결하기 위해 정해진 일련의 절차나 방법을 공식화한 형태로 표현한 것</li><li>정렬<ul><li>선택 정렬</li><li>삽입 정렬</li><li>버블 정렬</li></ul></li><li>그래프<ul><li>깊이우선탐색 DFS</li><li>너비우선탐색 BFS</li></ul></li><li>탐색<ul><li>선형 탐색</li><li>이진 탐색</li></ul></li></ul><h3 id="2-애플리케이션-성능-개선"><a class="markdownIt-Anchor" href="#2-애플리케이션-성능-개선"></a> 2. 애플리케이션 성능 개선</h3><ul><li>소스코드 최적화는 읽기 쉽고 변경 및 추가가 쉬운 클린 코드를 작성하는 것</li><li>클린코드의 작성원칙과 소스코드 최적화 기법</li><li>소스코드 품질분석 도구의 이해</li><li>정적분석<ul><li>Pmd</li><li>cppcheck</li><li>SonarQube</li><li>Checkstyle</li></ul></li><li>동적분석<ul><li>Avalanche</li><li>valgrind</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;1-알고리즘&quot;&gt;&lt;a class=&quot;markdownIt-An
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션 성능 개선</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/</id>
    <published>2020-05-21T08:51:39.000Z</published>
    <updated>2020-05-21T08:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="소스코드-최적화-이해"><a class="markdownIt-Anchor" href="#소스코드-최적화-이해"></a> 소스코드 최적화 이해</h3><ul><li>읽기 쉽고 변경 및 추가가 쉬운 클린 코드를 작성하는 것으로, 소스 코드 품질을 위해 기본적으로 지킬 원칙과 기준을 정의</li></ul><h3 id="나쁜-코드"><a class="markdownIt-Anchor" href="#나쁜-코드"></a> 나쁜 코드</h3><ul><li>다른 개발자가 로직을 이해하기 어렵게 작성된 코드</li><li>대표적인 사례로 처리 로직의제어가 정제되지 않고 서로 얽혀 잇는 스파게티 코드, 변수나 메소드에 대한 이름 정의를 알 수 없는 코드, 동일한 처리 로직이 중복되게 작성된 코드</li><li>문제점<ul><li>스파게티 코드의 경우 잦은 오류가 발생할 가능성이 있음</li><li>소스 코드 이해가 안 되어 계속 덧 붙이기 할 경우 코드 복잡도 증가</li></ul></li></ul><h3 id="클린-코드-clean"><a class="markdownIt-Anchor" href="#클린-코드-clean"></a> 클린 코드 Clean</h3><ul><li>잘 작성되어 <u>가독성이 높고 단순하며 의존성을 줄이고, 종복을 최소하</u>하여 깔끔하게 잘 정리된 코드</li><li>효과성<ul><li>중복 코드 제거로 애플리케이션의 설계 개선</li><li>가독성이 높으므로 애플리케이션의 기능에 대해 쉽게 이해 가능</li><li>버그를 찾기 쉬워지며, 프로그래밍 속도가 빨라짐</li></ul></li></ul><h3 id="클린-코드-작성-원칙"><a class="markdownIt-Anchor" href="#클린-코드-작성-원칙"></a> 클린 코드 작성 원칙</h3><ul><li>가독성<ul><li>이해하기 쉬운 용어</li><li>들여쓰기 기능</li></ul></li><li>단순성<ul><li>한번에 한 가지 처리 수행</li><li>클래스 / 메소드 / 함수를 최소 단위로 분리</li></ul></li><li>의존성<ul><li>영향도를 최소화</li><li>코드의 변경이 다른 부분에 영향이 없게 작성</li></ul></li><li>중복성<ul><li>중복된 코드를 제거</li><li>공통된 코드를 제거</li></ul></li><li>추상화<ul><li>클래스 / 메소드 / 함수에 대해 동일한 수준으로 추상화</li><li>상세 내용은 하위 클래스 / 메소드 / 함수에서 구현</li></ul></li></ul><h3 id="소스코드-최적화-기법"><a class="markdownIt-Anchor" href="#소스코드-최적화-기법"></a> 소스코드 최적화 기법</h3><ol><li>클래스 분할 배치 기법<ul><li>클래스는 하나의 역할, 책임만 수행할 수 있도록 응집도를 높이고 크기를 작게 작성</li></ul></li><li>느슨한 결합 기법<ul><li>클래스의 자료구조, 메소드를 추상화 할 수 있는 인터페이스 클래스를 이용하여 클래스 간의 의존성을 최소화</li></ul></li><li>코딩 형식 기법<ul><li>줄바꿈으로 개념을 구분하고 종속함수를 사용</li><li>호출하는 함수를 먼저 배치하고 호출되는 함수는 나중에 배치</li><li>변수 선언 위치를 지역 변수는 각 함수 맨 처음에 위치</li></ul></li><li>주석문 사용을 습관화</li></ol><h3 id="소스코드-품질분석-도구의-개념"><a class="markdownIt-Anchor" href="#소스코드-품질분석-도구의-개념"></a> 소스코드 품질분석 도구의 개념</h3><ul><li>소스 코드에 대한 코딩 스타일, 설정된 코딩 표준, 코드의 복잡도, 코드 내에 존재하는 메모리 누수 현황, 스레드의 결함 등을 발견하기 위하여 사용하는 분석 도구</li><li>정적 분석 도구</li><li>동적 분석 도구</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;소스코드-최적화-이해&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션성능개선" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 알고리즘</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</id>
    <published>2020-05-21T08:46:47.000Z</published>
    <updated>2020-05-21T08:46:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><ul><li>정렬<ul><li>선택 정렬</li><li>삽입 정렬</li><li>버블 정렬</li></ul></li><li>그래프<ul><li>깊이우선탐색 DFS</li><li>너비우선탐색 BFS</li></ul></li><li>탐색<ul><li>선형 탐색</li><li>이진 탐색</li></ul></li></ul><p><a href="https://github.com/hyeonukdev/Algorithms-StudyGroup-KY">Github Repository</a><br /><a href="https://www.notion.so/hyeonukdev/Alogorithm-0fe7decd13f344d899ca2e5ba1c4d901">Notion 개념정리</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;정렬
&lt;ul&gt;
&lt;li&gt;선택 정렬&lt;/li&gt;
&lt;li&gt;삽입 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-21T08:18:14.000Z</published>
    <updated>2020-05-21T08:18:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="1-애플리케이션-통합-테스트-수행"><a class="markdownIt-Anchor" href="#1-애플리케이션-통합-테스트-수행"></a> 1. 애플리케이션 통합 테스트 수행</h3><ul><li>통합 테스트에 대한 개념 이해, 통합 테스트 수행 방법</li><li>테스트 자동화 도구와 개념 유형</li></ul><h3 id="2-애플리케이션-테스트-결과-분석"><a class="markdownIt-Anchor" href="#2-애플리케이션-테스트-결과-분석"></a> 2. 애플리케이션 테스트 결과 분석</h3><ul><li>소프트웨어 결함관련 용어, 테스트 완료 조건</li><li>테스트 결함 관리 개념과 결함 관리 도구</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;1-애플리케이션-통합-테스트-수행&quot;&gt;&lt;a class=&quot;m
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션 테스트 결과 분석</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC%EB%B6%84%EC%84%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC%EB%B6%84%EC%84%9D/</id>
    <published>2020-05-21T08:06:45.000Z</published>
    <updated>2020-05-21T08:06:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="소프트웨어-결함"><a class="markdownIt-Anchor" href="#소프트웨어-결함"></a> 소프트웨어 결함</h3><ul><li>용어</li></ul><ol><li>에러 Error / 오류<ul><li>결함 Defect 의 원인</li><li>사람에 의해 생성된 실수</li></ul></li><li>결함 / 결점 / 버그 Bug<ul><li>에러 또는 오류가 원인</li><li>소프트웨어 제품에 포함되어 있는 결함</li><li>제거하지 않을 시 제품 실패 또는 문제가 발생</li></ul></li><li>실패 / 문제<ul><li>소프트웨어 제품에 포함된 결함이 실행 될 때 발생</li></ul></li></ol><h3 id="테스트-완료-조건"><a class="markdownIt-Anchor" href="#테스트-완료-조건"></a> 테스트 완료 조건</h3><ul><li>단위 테스트, 통합 테스트, 시스템 테스트, 인수 테스트 등 각 단계별 테스트를 언제 어떤 상황에서 종료할 것인지 결정</li><li>완료 조건은 일정, 비용, 조직등에 제약이 있으므로 최적의 완료조건을 계획</li></ul><h3 id="테스트-결함-관리"><a class="markdownIt-Anchor" href="#테스트-결함-관리"></a> 테스트 결함 관리</h3><ul><li>각 단계별 테스트 수행 후 발생한 결함의 재발 방지를 위해, 유사 결함 발견시 처리 시간 단축을 위해 <u>결함을 추적하고 관리하는 활동</u></li></ul><h3 id="결함-추적-관리-활동"><a class="markdownIt-Anchor" href="#결함-추적-관리-활동"></a> 결함 추적 관리 활동</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_05.png" alt="결함 추적 관리 활동" /></p><h3 id="결함-관리-도구-유형"><a class="markdownIt-Anchor" href="#결함-관리-도구-유형"></a> 결함 관리 도구 유형</h3><ul><li>오픈소스<ul><li>Bugzilla</li><li>Trac</li><li>Mantis</li></ul></li><li>상용도구<ul><li>QC</li><li>Clear Quest</li><li>JIRA</li></ul></li></ul><h3 id="결함-관리-도구-도입-시-고려사항"><a class="markdownIt-Anchor" href="#결함-관리-도구-도입-시-고려사항"></a> 결함 관리 도구 도입 시 고려사항</h3><ul><li>웹 클라이언트 지원을 하는지 확인이 필요</li><li>윈도우, 유닉스 환경 등 이기종 플랫폼의 웹 서버를 지원하는지 확인</li><li>프로세스 및 워크플로우 변경이 가능 해야함</li><li>결함 간에 연관 관계 정보를 제공</li><li>결함 등록 및 상태 변경 시 담당자에게 이벤트 통보 기능 필요</li><li>각종 레포트, 차트, 쿼리 구성 및 저장이 가능</li><li>결함 상태 변경에 대한 추적 기능</li><li>다국어 지원이 가능</li><li>다중 프로젝트 지원이 가능</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-결함&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트결과분석" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC%EB%B6%84%EC%84%9D/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션 통합 테스트 수행</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%88%98%ED%96%89/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%88%98%ED%96%89/</id>
    <published>2020-05-21T04:56:06.000Z</published>
    <updated>2020-05-21T04:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><ul><li>개발자 통합 테스트 계획에 따라 <u>통합 모듈 및 인터페이스가 요구 사항을 충족하는지</u>에 대한 테스트를 수행</li><li>개발자 통합 테스트 수행 결과 발견된 <u>결함에 대한 추이 분석</u>을 통하여 잔존 결함을 추정</li><li>테스트의 충분석 여부를 검증하고 발견된 결함에 대한 개선 조치사항을 작성</li></ul><h3 id="통합-테스트의-개념"><a class="markdownIt-Anchor" href="#통합-테스트의-개념"></a> 통합 테스트의 개념</h3><ul><li>소프트웨어 각 <u>모듈 간의 인터페이스 관련 오류 및 결함</u>을 찾아내기 위한 체계적인 테스트 기법</li></ul><h3 id="통합-테스트-수행-방법의-분류"><a class="markdownIt-Anchor" href="#통합-테스트-수행-방법의-분류"></a> 통합 테스트 수행 방법의 분류</h3><ul><li>일반적으로 점증적인 방법과 비점증적인 방식으로 나뉨</li><li>비점증적 방법<ul><li>모든 컴포넌트를 사전에 통합하여 전체 프로그램을 한꺼번에 테스트</li></ul></li><li>점증적 방법<ul><li>상향식 통합</li><li>하향식 통합</li></ul></li></ul><h4 id="하향식-통합-top-down"><a class="markdownIt-Anchor" href="#하향식-통합-top-down"></a> 하향식 통합 Top Down</h4><ul><li>메인 제어 모듈로부터 아래 방향으로 제어의 경로를 따라 이동하면서 하향식으로 통합하면서 테스트를 진행</li><li>메인 제어 모듈은 작성된 프로그램을 사용하고, 아직 작성되지 않은 하위 제어 모듈 및 모든 <u>하위 컴포넌트를 대신하여 더미 모듈인 스텁을 개발</u></li><li><u>깊이 우선 방식 또는 너비 우선 방식</u>에 따라 하위 모듈인 스텁이 한 번에 하나씩 실제 모듈로 대체<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_02.png" alt="하향식 통합" /></li></ul><h4 id="상향식-통합-bottom-up"><a class="markdownIt-Anchor" href="#상향식-통합-bottom-up"></a> 상향식 통합 Bottom Up</h4><ul><li>애플리케이션 구조에서 최하위 레벨의 모듈 또는 컴포넌트로부터 위쪽 방향으로 제어의 경로를 따라 이동하면서 구축과 테스트 시작</li><li>최하위 레벨의 모듈 또는 컴포넌트들이 하위 모듈의 기능을 수행하는 클러스터로 결합</li><li><u>상위의 모듈</u>에서 데이터의 입력과 출력을 확인하기 위한 더미 모듈 인 드라이버를 작성</li><li>각 통합된 클러스터 단위를 테스트</li><li>테스트가 완료되면 각 클러스터들은 프로그램의 위쪽으로 결합되며, 드라이버는 실제 모듈 또는 컴포넌트로 대체<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_03.png" alt="상향식 통합" /></li></ul><h4 id="회귀-테스팅-regression-testing"><a class="markdownIt-Anchor" href="#회귀-테스팅-regression-testing"></a> 회귀 테스팅 Regression Testing</h4><ul><li>통합 테스트 과정에서 오류를 제거하거나 <u>수정한 프로그램이 새로운 형태의 오작동이나 오류</u>를 일으킬 수 있음</li><li>회귀 테스트는 모듈이나 컴포넌트의 <u>변화로 인해 의도하지 않은 오류가 생기지 않았음을 보증하기 위해 반복 테스트</u>하는 것</li><li>회귀 테스트 케이스 선정 방법<ul><li>모든 애플리케이션의 기능을 수행할 테스트 케이스의 대표적인 샘플을 도출</li><li><u>변경에 의한 영향도가 가장 높은</u> 애플리케이션 기능에 집중한 추가적인 테스트 케이스를 도출</li><li><u>실제 수정이 발생한 모듈</u> 또는 컴포넌트에서부터 시행하는 테스트 케이스를 도출</li></ul></li></ul><h3 id="테스트-자동화의-개념"><a class="markdownIt-Anchor" href="#테스트-자동화의-개념"></a> 테스트 자동화의 개념</h3><ul><li>테스트 도구를 활용하여 반복적인 테스트 작업을 <u>스크립트 형태로 구현</u></li><li>테스트 시간 단축과 인력 투입 비용을 최소하</li><li>운영중인 시스템의 모니터링 또는 UI가 없는 서비스의 경우에도 정밀한 테스트 수행</li></ul><h3 id="테스트-자동화의-장점과-단점"><a class="markdownIt-Anchor" href="#테스트-자동화의-장점과-단점"></a> 테스트 자동화의 장점과 단점</h3><ul><li>장점<ul><li>반복되는 테스트 데이터 재입력 작업의 자동화</li><li>사용자 요구 기능의 일관성 검증에 유리</li><li>테스트 결과 값에 대한 객관적인 평가 기준 제공</li><li>테스트 결과의 통계 작업과 그래프 등 다양한 표시 형태 제공</li><li>UI가 없는 서비스의 경우에도 정밀한 테스트 가능</li></ul></li><li>단점<ul><li>도구 도입 후 도구 사용 방법에 대한 교육 및 학습이 필요</li><li>도구를 프로세스 단계별로 적용하기 위한 시간, 비용, 노력이 필요</li><li>사용 도구의 경우 고가, 유지 관리 비용이 높아 추가 투자 필요</li></ul></li></ul><h3 id="정적-분석-도구-static-analysis-tools"><a class="markdownIt-Anchor" href="#정적-분석-도구-static-analysis-tools"></a> 정적 분석 도구 Static Analysis Tools</h3><ul><li>프로그램을 실제로 실행해 보지 않고 분석하는 방법</li><li>대부분의 경우 소스 코드에 대한 코딩 표준, 코딩 스타일, 코드 복잡도 및 남은 결함을 발견하기 위해 사용</li><li>테스트를 수행하는 사람이 작성된 소스 코드에 대한 이해를 기반한 자동화된 도구 활용한 분석 수행</li></ul><h3 id="테스트-실행-도구-test-execution-tools"><a class="markdownIt-Anchor" href="#테스트-실행-도구-test-execution-tools"></a> 테스트 실행 도구 Test Execution Tools</h3><ul><li>테스트를 위해 작성된 스크립트를 실행</li><li>데이터 주도 접근<ul><li>테스트 데이터를 스프레드 시트에 저장하고, 이 데이터를 읽고 실행할 수 있도록 함</li><li>다양한 테스트 데이터를 이용하여 동일한 테스트 케이스르 반복 실행</li><li>스크립트 언어에 익숙하지 않은 테스터도 미리 작성된 스크립트에 테스트 데이터만 추가하여 쉽게 테스트를 수행</li></ul></li><li>키워드 주도 접근 방식<ul><li>스프레드시트에 테스트를 수행할 동작을 나타내는 키워드와 테스트 데이터를 저장</li><li>키워드를 이용하여 테스트 수행 동작을 정의</li><li>테스트 대상 애플리케이션의 특성에 맞추어 키워드에 대해 테일러링을 수행</li></ul></li></ul><h3 id="성능-테스트-도구-performance-test-tools"><a class="markdownIt-Anchor" href="#성능-테스트-도구-performance-test-tools"></a> 성능 테스트 도구 Performance Test Tools</h3><ul><li>애플리케이션의 처리량, 응답 시간, 경과 시간, 자원 사용률에 대해 가상의 사용자를 생성하고 테스트를 수행함으로써 성능 목표를 달성하였는지를 확인하는 도구</li></ul><h3 id="테스트-통제-도구-test-control-tools"><a class="markdownIt-Anchor" href="#테스트-통제-도구-test-control-tools"></a> 테스트 통제 도구 Test Control Tools</h3><ul><li>테스트 계획 및 관리를 위한 <u>테스트 관리 도구</u></li><li>테스트 수행에 필요한 데이터와 도구를 관리하는 <u>형상 관리 도구</u></li><li>테스트에서 발생한 결함에 대해 관리하거나 협업을 지원하기 위한 <u>결함 추적/관리 도구</u></li><li>조직의 요구사항에 최적화된 형태의 정보를 생성, 관리하기 위하여 &lt;u트스프레드시트 등 다른 도구들과 연계하여 사용</u></li></ul><h3 id="테스트-장치-test-harness"><a class="markdownIt-Anchor" href="#테스트-장치-test-harness"></a> 테스트 장치 Test Harness</h3><ul><li>애플리케이션 컴포넌트 및 모듈을 테스트하는 환경의 일부분으로, 테스트를 지원하기 위한 코드와 데이터를 말하며, 단위 또는 모듈 테스트에 사용하기 위해 코드 개발자가 작성</li><li>구성요소<ul><li>테스트 드라이버<ul><li>상향식 테스트에 필요</li></ul></li><li>테스트 스텁<ul><li>하향식 테스트에 필요</li></ul></li><li>테스트 슈트<ul><li>대상 모듈, 테스트 케이스 집합</li></ul></li><li>테스트 케이스<ul><li>입력 값, 실행조건, 기대 결과</li></ul></li><li>테스트 스크립트<ul><li>자동화된 스크립트 실행 절차</li></ul></li><li>목 Mock 오브젝트<ul><li>행위를 조건부로 사전에 입력</li></ul></li></ul></li></ul><h3 id="테스트-자동화-도구"><a class="markdownIt-Anchor" href="#테스트-자동화-도구"></a> 테스트 자동화 도구</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_04.png" alt="자동화도구" /></p><h3 id="소프트웨어-테스트-관리-지원-도구"><a class="markdownIt-Anchor" href="#소프트웨어-테스트-관리-지원-도구"></a> 소프트웨어 테스트 관리 지원 도구</h3><ul><li>실행된 테스트와 테스트 활동 관리를 지원하며 테스트 실행 도구나 결함 추적 도구, 요구사항 관리 도구와의 인터페이스 역할</li><li>결함이 발견, 분배, 수정, 확인, 종료되는 결함의 생명주기 관리</li><li>테스트 진행 상황에 대한 리포트 생성, 발견된 결함의 정량적인 분석을 지원</li><li>오픈 소스<ul><li>결함관리<ul><li>Mantis, Bugzilla</li></ul></li><li>테스트 케이스 관리 도구<ul><li>Testlink</li></ul></li><li>형상 관리 도구<ul><li>CVS, SVN, Git, Bazar</li></ul></li><li>커뮤니케이션 도구<ul><li>MediaWiki, Dokuwiki</li></ul></li><li>통합프로젝트 지원 도구<ul><li>Trac, nForge, Gforge</li></ul></li></ul></li><li>상용 소스<ul><li>버그 추적<ul><li>JIRA, TPMS, Test Director</li></ul></li><li>형상 관리<ul><li>Visual Sourcesafe, IBM, Clear Case</li></ul></li><li>커뮤니케이션<ul><li>Confluence</li></ul></li></ul></li></ul><h3 id="소프트웨어-정적-분석-지원-도구"><a class="markdownIt-Anchor" href="#소프트웨어-정적-분석-지원-도구"></a> 소프트웨어 정적 분석 지원 도구</h3><ul><li>리뷰 프로세스에 관한 정보를 저장, 리뷰 코멘트를 저장</li><li>정적 분석 도구는 동적 테스트를 하기 전에 결함을 발견할 수 있도록 지원</li><li>코딩 표준을 지킬 것을 강제하고 구조와 의존 관계를 분석</li><li>소스 코드의 복잡도를 측정</li><li>오픈소스<ul><li>PMD</li><li>Valgrind</li><li>Find Bugs</li><li>CPPCheck</li><li>Corbetrua</li></ul></li><li>상용 소스<ul><li>Coverity</li><li>IBM Rtional Software</li><li>PloySpace</li></ul></li></ul><h3 id="소프트웨어-테스트-실행-및-로깅-지원-도구"><a class="markdownIt-Anchor" href="#소프트웨어-테스트-실행-및-로깅-지원-도구"></a> 소프트웨어 테스트 실행 및 로깅 지원 도구</h3><ul><li>스크립트 언어의 도움으로 저장된 입력 값과 예상 결과를 이용하여 테스트를 실행하고 결과와 비교</li><li>테스트 대상이 실행되는 환경을 시뮬레이션, 테스트 Harness 도구</li><li>오픈 소스<ul><li>테스트 프레임워크<ul><li>xUnit, TestNG, FIT</li><li>Jmock, Easymock, Googlemock</li></ul></li><li>지속적인 통합<ul><li>CruiseControl, hudson, jenkinson</li></ul></li><li>빌드자동화<ul><li>Ant, Maven, Make</li></ul></li><li>실행자동화<ul><li>STAF/STAX, Selenium</li></ul></li></ul></li><li>상용 소스<ul><li>WinRunner</li><li>Jtest</li><li>CodeScroll</li></ul></li></ul><h3 id="소프트웨어-성능-및-모니터링-도구"><a class="markdownIt-Anchor" href="#소프트웨어-성능-및-모니터링-도구"></a> 소프트웨어 성능 및 모니터링 도구</h3><ul><li>소프트웨어가 실행도중에만 발생하는 시간 의존성과 메모리 누수와 같은 결함 발견에 활용</li><li>소프트웨어 성능/부하/스트레스를 테슽</li><li>특정 시스템 리소스의 사용량을 지속적으로 분석하고 확인</li><li>오픈 소스<ul><li>Jmeter</li><li>OpenSTA</li><li>allomon</li></ul></li><li>상용 소스<ul><li>E-load</li><li>LoadRunner</li><li>Webload</li><li>Robot</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;개발자 통합 테스트 계획에 따라 &lt;u&gt;통합 모듈 및 인
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션통합테스트수행" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%88%98%ED%96%89/"/>
    
  </entry>
  
</feed>
