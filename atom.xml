<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-29T12:02:11.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>데이터입출력구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-29T12:02:11.000Z</published>
    <updated>2020-05-29T12:02:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="1-물리데이터모델-설계"><a class="markdownIt-Anchor" href="#1-물리데이터모델-설계"></a> 1. 물리데이터모델 설계</h3><ul><li>논리 데이ㅓ 모델로부터 물리 데이터 모델로 변환하는 것은 단위 엔터티를 테이블로, 속성을 칼럼으로 UID를 기본키로, 관계를 외래키로 변환 후 칼럼 유형과 길이 정의</li><li>데이터 처리 범위와 빈도 수를 분석하여 반정규화를 고려</li><li>반정규화는 중복테이블을 추가하거나 테이블 조합, 분할, 제거 하는 방법 등을 통해 설계</li></ul><h3 id="2-물리-데이터저장소-구성"><a class="markdownIt-Anchor" href="#2-물리-데이터저장소-구성"></a> 2. 물리 데이터저장소 구성</h3><ul><li>물리 데이터 모델링 완료 후 모델링 결과에 따라 디스크라는 물리 데이터 저장소에 다양한 오브젝트 구성</li><li>테이블, 인덱스, 뷰, 클러스터, 파티션</li><li>오브젝트는 디스크 구성 설계를 통해 구성</li></ul><h3 id="3-orm-프레임워크"><a class="markdownIt-Anchor" href="#3-orm-프레임워크"></a> 3. ORM 프레임워크</h3><ul><li>객체 관계 매핑은 관계형 데이터 베이스와 객체지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법</li><li>ORM 절차<ol><li>클래스를 테이블로 변환</li><li>속성은 칼럼으로 변환</li><li>클래스간 관계는 관계형 테이블 간의 관계로 변환</li></ol></li></ul><h3 id="4-트랜잭션-인터페이스"><a class="markdownIt-Anchor" href="#4-트랜잭션-인터페이스"></a> 4. 트랜잭션 인터페이스</h3><ul><li>물리 데이터 저장소에서 트랜잭션 인터페이스는 전체적인 데이터베이스 트랜잭션의 골격 및 인터페이스를 정의하는 활동</li><li>데이터베이스 트랜잭션 특징<ol><li>원자성</li><li>일관성</li><li>독립성</li><li>영속성</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;1-물리데이터모델-설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 트랜잭션 인터페이스</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</id>
    <published>2020-05-29T11:56:28.000Z</published>
    <updated>2020-05-29T11:56:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="트랜잭션-인터페이스-transaction-interface-개념"><a class="markdownIt-Anchor" href="#트랜잭션-인터페이스-transaction-interface-개념"></a> 트랜잭션 인터페이스 Transaction Interface 개념</h3><ul><li>물리 데이터 저장소에서 트랜잭션 인터페이스는 전체적인 데이터 베이스 <u>트랙잭션의 골격 및 인터페이스를 정의하는 활동</u></li><li>트랜잭션은 데이터베이스 입출력과 관련된 기능적 형태로 정의</li></ul><h3 id="데이터베이스-트랜잭션-특징"><a class="markdownIt-Anchor" href="#데이터베이스-트랜잭션-특징"></a> 데이터베이스 트랜잭션 특징</h3><ol><li>원자성<ul><li>트랜잭션을 구성하는 연산들이 모두 정상적으로 실행되거나 하나도 실행되지 않아야 함</li></ul></li><li>일관성<ul><li>트랙잭션이 그 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 변환</li></ul></li><li>독립성<ul><li>둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션 연산이 끼어들 수 없음</li></ul></li><li>영속성<ul><li>성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영</li></ul></li></ol><h3 id="데이터베이스-트랜잭션-연산자"><a class="markdownIt-Anchor" href="#데이터베이스-트랜잭션-연산자"></a> 데이터베이스 트랜잭션 연산자</h3><ol><li>COMMIT<ul><li>하나의 트랜잭션에 대한 작업이 성공적으로 끝나고 수행결과를 관리자에게 알려주는 연산</li></ul></li><li>ROLLBACK<ul><li>하나의 트랜잭션 처리가 비정상적으로 종료되어 해당 트랜잭션을 재시작 혹은 폐기하는 연산</li></ul></li><li>RECOVERY<ul><li>트랜잭션들을 수행하는 도중에 장애로 인해 손상된 데이터베이스를 손상되기 이전의 정상적인 상태로 복구시키는 연산</li></ul></li></ol><h3 id="트랜잭션-인터페이스-설계"><a class="markdownIt-Anchor" href="#트랜잭션-인터페이스-설계"></a> 트랜잭션 인터페이스 설계</h3><ul><li>데이터 접근 방법 및 인터페이스를 절차적으로 명세</li><li>트랜잭션 인터페이스는 주로 프로그래밍 언어로 구현</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;트랜잭션-인터페이스-transaction-interface-개념&quot;&gt;&lt;a class=&quot;ma
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="트랜잭션인터페이스" scheme="https://hyeonukdev.github.io/tags/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - ORM 프레임워크</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/ORM%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/ORM%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/</id>
    <published>2020-05-29T11:48:54.000Z</published>
    <updated>2020-05-29T11:48:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="orm-object-relationship-mapping-프레임워크의-개념"><a class="markdownIt-Anchor" href="#orm-object-relationship-mapping-프레임워크의-개념"></a> ORM; Object-Relationship Mapping 프레임워크의 개념</h3><ul><li>객체 관련 매핑은 관계형 데이터베이스와 객체지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법</li><li><u>객체지향 언어에서 사용하는 객체를 관계형 데이터베이스로 변환하여 테이블을 구성하는 활용</u></li></ul><h3 id="객체와-테이블-간의-변환-방법"><a class="markdownIt-Anchor" href="#객체와-테이블-간의-변환-방법"></a> 객체와 테이블 간의 변환 방법</h3><ul><li>객체지향 클래스/객체는 관계형데이터베이스에서 테이블로 매피</li><li><u>속성은 칼럼으로 오퍼레이션은 프로시저 혹은 함수로 매핑</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0529_01.png" alt="ORM 매핑" /></li></ul><h3 id="관계와-테이블-간의-변환-방법"><a class="markdownIt-Anchor" href="#관계와-테이블-간의-변환-방법"></a> 관계와 테이블 간의 변환 방법</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0529_02.png" alt="관계 테이블 " /></p><h3 id="orm-절차"><a class="markdownIt-Anchor" href="#orm-절차"></a> ORM 절차</h3><ol><li>클래스를 테이블로 변환<ul><li>클래스의 인스턴스는 테이블의 레코드로 매핑</li></ul></li><li>속성은 칼럼으로 변환<ul><li>클래스 인스턴스의 속성은 테이블의 칼럼으로 매핑</li></ul></li><li>클래스간 관계는 관계형 테이블 간의 관계로 변환<ul><li>클래스 간의 관계는 관계형 데이터베이스의 테이블 간 제약사항으로 변환</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;orm-object-relationship-mapping-프레임워크의-개념&quot;&gt;&lt;a cla
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="ORM프레임워크" scheme="https://hyeonukdev.github.io/tags/ORM%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-29T11:44:50.000Z</published>
    <updated>2020-05-29T11:44:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="1-자료구조"><a class="markdownIt-Anchor" href="#1-자료구조"></a> 1. 자료구조</h3><ul><li>컴퓨터에서 자료를 효율적으로 표현하고 저장하고 처리할 수 있도록 만들어진 논리적인 틀</li><li>분류<ul><li>선형 구조<ul><li>리스트</li><li>스택</li><li>큐</li><li>데크</li></ul></li><li>비선형 구조<ul><li>트리</li><li>그래프</li></ul></li></ul></li></ul><h3 id="2-논리-데이터모델-개요"><a class="markdownIt-Anchor" href="#2-논리-데이터모델-개요"></a> 2. 논리 데이터모델 개요</h3><ul><li>논리 데이터 모델링은 정확한 업무 분석을 통한 자료의 흐름을 분석하여 현재 사용 중인 양식, 문서, 징표를 중심으로 자료항목을 추출하고 추출된 엔티티와 속성들의 관계를 구조적으로 정의하는 단계</li><li>정규화<ul><li>릴레이션을 관련 있는 속성들로만 구성되도록 릴레이션을 분해하는 과정</li><li>제 1 정규화<ul><li>중복속성제거</li></ul></li><li>제 2 정규화<ul><li>부분종속성제거</li></ul></li><li>제 3 정규화<ul><li>이행종속성제거</li></ul></li></ul></li></ul><h3 id="3-논리-데이터모델-검증"><a class="markdownIt-Anchor" href="#3-논리-데이터모델-검증"></a> 3. 논리 데이터모델 검증</h3><ul><li>논리 데이터저장소 확인</li></ul><ol><li>엔티티 및 속성 확인</li><li>관계 확인</li><li>데이터 흐름 확인</li><li>데이터 접근 권한 확인</li><li>데이터 백업정책 및 분산 구조 확인</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;1-자료구조&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-자료구
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="자료구조" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 물리데이터 모델 설계</title>
    <link href="https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84/"/>
    <id>https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84/</id>
    <published>2020-05-28T03:37:30.000Z</published>
    <updated>2020-05-28T03:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><ul><li>논리데이터저장소 설계를 바탕으로 응용소프트웨어가 사용하는 <u>데이터저장소의 특성을 반영한 물리 데이터 저장소 설계 수행</u></li><li>논리데이터저장소 설계를 바탕으로 <u>목표 시스템의 데이터 특성을 반영하여 최적화된 물리 데이터저장소를 설계</u></li><li>실제 데이터가 저장될 물리적 공간을 구성</li></ul><h3 id="데이터베이스-스키마-schema의-개념"><a class="markdownIt-Anchor" href="#데이터베이스-스키마-schema의-개념"></a> 데이터베이스 스키마 Schema의 개념</h3><ul><li>데이터베이스에서 자료의 구조, 자료의 표현방법, 자료 간의 관계를 형식 언어로 정의한 구조</li></ul><h3 id="데이터베이스-스키마-종류"><a class="markdownIt-Anchor" href="#데이터베이스-스키마-종류"></a> 데이터베이스 스키마 종류</h3><ul><li>외부 스키마<ul><li>프로그래머나 사용자의 입장에서 데이터베이스의 모습으로 조직의 일부분을 정의한 것</li></ul></li><li>개념 스키마<ul><li>모든 응용 시스템과 사용자들이 필요로 하는 데이터를 통합한 조직 전체의 데이터베이스 구조를 논리적으로 정의 한 것</li></ul></li><li>내부 스키마<ul><li>전체 데이터베이스의 물리적 저장 형태를 기술</li></ul></li></ul><h3 id="논리-데이터-모델-물리-데이터-모델-변환-순서"><a class="markdownIt-Anchor" href="#논리-데이터-모델-물리-데이터-모델-변환-순서"></a> 논리 데이터 모델 -&gt; 물리 데이터 모델 변환 순서</h3><ol><li>단위 엔티티를 테이블로 변환<ul><li>논리 모델에서 정의된 엔티티는 물리 모델에서 테이블로 변환</li><li>엔티티는 한글명, 테이블은 영문명 사용하고 명칭을 동일하게</li></ul></li><li>속성을 칼럼으로 변환<ul><li>SQL 예약어 사용은 피하기</li><li>가독성을 위해 명칭은 가능한 짧게</li><li>칼럼명에 복합 단어 사용할 경우 미리 정의된 표준에 의해 명명</li></ul></li><li>UID를 기본키로 변환<ul><li>엔티티의 UID는 기본키로 선언</li><li>Not null, Unique 등의 제약 조건을 추가적으로 정의</li></ul></li><li>관계를 외래키로 변환<ul><li>1:n 관계에서 1 영역에 있는 기본키를 n영역의 외래키로 선언</li><li>외래키 명은 1 영역의 기본키 이름을 사용하나 다른 의미를 가질 경우 변경하여 명명</li><li>순환 관계에서 자신의 기본키는 외래키로 정의</li></ul></li><li>칼럼 유형과 길이 정의<ul><li>정의된 각 칼럼에 대해, <u>적용 DBMS에서 제공하는 데이터 유형 중 적절한 유형 정의</u></li><li>해당 데이터의 최대 길이를 파악하여 길이 설정</li></ul></li><li>데이터 처리 범위와 빈도수를 분석하여 반정규화 고려<ul><li>중복 테이블 추가</li><li>테이블 조합</li><li>테이블 분할<ul><li>수식 분할</li><li>수평 분할</li></ul></li><li>테이블 제거<ul><li>더 이상 엑세스 되지 않는 테이블</li></ul></li><li>칼럼의 중복화</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;논리데이터저장소 설계를 바탕으로 응용소프트웨어가 사용하는 &lt;u&gt;데이터저장소의 특성을 반
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리데이터모델설계" scheme="https://hyeonukdev.github.io/tags/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 물리데이터 저장소 구성</title>
    <link href="https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EA%B5%AC%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EA%B5%AC%EC%84%B1/</id>
    <published>2020-05-28T03:37:30.000Z</published>
    <updated>2020-05-28T03:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="delete-constraint"><a class="markdownIt-Anchor" href="#delete-constraint"></a> Delete Constraint</h3><ul><li><u>참조된 기본키의 값이 삭제될 경우</u>의 처리 내용 정의</li><li>Cascade<ul><li>참조한 테이블이 있는 외부키가 일치하는 모든 Row가 삭제</li></ul></li><li>Restricted<ul><li>참조한 테이블에 있는 외부키에 없는 것만 삭제 가능</li></ul></li><li>Nullify<ul><li>참조한 테이블에 정의된 외부키가 일치하는 것을 Null로 수정</li></ul></li></ul><h3 id="update-constraint"><a class="markdownIt-Anchor" href="#update-constraint"></a> Update Constraint</h3><ul><li><u>참조된 기본키의 값이 수정될 경우</u>의 처리 내용 정의</li><li>Cascade<ul><li>참조한 테이블에 있는 외부키와 일치하는 모든 Row가 수정</li></ul></li><li>Restricted<ul><li>참조한 테이블에 있는 외부키에 없는 것만 수정가능</li></ul></li><li>Nullify<ul><li>참조한 테이블에 정의된 외부키와 일치하는 것을 Null로 수정</li></ul></li></ul><h3 id="인덱스-설계"><a class="markdownIt-Anchor" href="#인덱스-설계"></a> 인덱스 설계</h3><h4 id="1-인덱스-적용-기준"><a class="markdownIt-Anchor" href="#1-인덱스-적용-기준"></a> 1. 인덱스 적용 기준</h4><ul><li>인덱스 칼럼의 분포가 10~15% 이내인 경우<br /><code>분포도 = (1/칼럼값의종류) * 100 = (칼럼값의 평균 Row수/테이블의 총Row수) * 100</code></li><li>분포도가 범위 이상이더라도 부분처리를 목적으로 하는 경우</li><li>입출력 장표 등에서 <u>조회 및 출력 조건으로 사용되는 칼럼</u></li><li>인덱스가 자동 생성되는 기본키와 Unique키의 제약조건을 사용할 경우</li></ul><h4 id="2-인덱스-칼럼-선정"><a class="markdownIt-Anchor" href="#2-인덱스-칼럼-선정"></a> 2. 인덱스 칼럼 선정</h4><ul><li>분포도가 좋은 칼럼은 단독적으로 생성하여 활용도 향상</li><li>자주 조합되어 사용되는 칼럼은 결합 인덱스로 생성하여 활용</li><li>결합 인덱스는 구성되는 칼럼 순서 선정에 유의</li><li>가능한 수정이 빈번하지 않은 칼럼 선정</li></ul><h4 id="3-설계시-고려사항"><a class="markdownIt-Anchor" href="#3-설계시-고려사항"></a> 3. 설계시 고려사항</h4><ul><li>새로 추가되는 인덱스가 기존 액세스 경로에 영향을 미칠지 않는지 고려</li><li>지나치게 많은 인덱스는 오버헤드로 작용하므로 유의</li><li>인덱스는 추가적인 저장공간이 필요함으로 고려</li><li>넓은 범위를 인덱스 처리 시 오히려 전체 처리보다 많은 오버헤드를 발생시킬 수 있음</li></ul><h3 id="뷰-설계"><a class="markdownIt-Anchor" href="#뷰-설계"></a> 뷰 설계</h3><h4 id="1-뷰-테이블-개념"><a class="markdownIt-Anchor" href="#1-뷰-테이블-개념"></a> 1. 뷰 테이블 개념</h4><ul><li>가상 테이블을 구성하는 <u>데이터베이스 오브젝트로 별도의 저장 공간은 없지만 </u> 뷰를 통해 SELECT, DELETE, UPDATE를 할 수 있음</li></ul><h4 id="2-뷰-테이블-생성"><a class="markdownIt-Anchor" href="#2-뷰-테이블-생성"></a> 2. 뷰 테이블 생성</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> EMP_VIEW10</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> EMPNO, ENAME, SAL, COMM,</span><br><span class="line">DEPTNO</span><br><span class="line"><span class="keyword">FROM</span> EMP_COPY</span><br><span class="line"><span class="keyword">WHERE</span> DEPTNO=<span class="number">30</span></span><br></pre></td></tr></table></figure><ul><li>REPLACE : 뷰가 이미 존재하는 경우 재생성</li><li>FORCE : 기본 테이블의 존 여부에 관계 없이 뷰 생성</li><li>NOFORCE : 기본 테이블이 존재할 때만 뷰 생성</li><li>WITH CHECK OPTION : Sub-Query 내의 조건을 만족하는 행만 변경</li><li>WITH READ ONLY : 조회만 가능하게 제약</li></ul><h4 id="3-뷰-설계시-고려사항"><a class="markdownIt-Anchor" href="#3-뷰-설계시-고려사항"></a> 3. 뷰 설계시 고려사항</h4><ul><li>최종적으로는 <u>테이블을 액세스하는 것으로 사용에 따라 수행 속도에 문제 발생 가능성</u></li><li>뷰 내의 SELECT 문의 조건은 가능한 한 <u>최적의 액세스 경로를 사용할 수 있도록 함</u></li><li>그럴 수 없다면 뷰를 사용한 SQL의 WHERE 절에서는 반드시 <u>양호한 액세스 경로가 되도록 해야 함</u></li></ul><h3 id="클러스터-설계"><a class="markdownIt-Anchor" href="#클러스터-설계"></a> 클러스터 설계</h3><h4 id="1-클러스터-개념"><a class="markdownIt-Anchor" href="#1-클러스터-개념"></a> 1. 클러스터 개념</h4><ul><li>클러스터 키 값을 기준으로 같은 값들끼리 레코드가 한 블록에 모이는 저장 구조</li></ul><h4 id="2-클러스터-적용-기준"><a class="markdownIt-Anchor" href="#2-클러스터-적용-기준"></a> 2. 클러스터 적용 기준</h4><ul><li>분포도가 넓을수록 오히려 유리한 기법</li><li>액세스 기법이 아니라 액세스 효율 향상을 위한 물리적 저장 방법</li><li>분포도가 넓은 테이블의 클러스터링은 저장 공간의 절약 가능</li><li>다중 블록 이상의 테이블에 적용</li><li>대량의 범위를 자주 액세스하는 경우 적용</li><li>인덱스를 사용한 처리 부담이 되는 넓은 분포도에 활용</li><li>여러 개의 테이블이 번번히 조인을 일으킬 때 활용</li><li>반복 칼럼이 정규화에 의해 어쩔 수 없이 분할된 경우 활용</li></ul><h4 id="3-클러스터-설계시-고려사항"><a class="markdownIt-Anchor" href="#3-클러스터-설계시-고려사항"></a> 3. 클러스터 설계시 고려사항</h4><ul><li>검색 효율은 높여 주나 입력, 수정, 삭제 시는 <u>부하가 증가함 고려</u></li><li><u>Union, Distinct, Order by, Group by 빈번한 칼럼이면 고려</u></li><li><u>수정이 자주 발생하지 않는 칼럼</u>은 고려 대상</li></ul><h3 id="파티션-설계"><a class="markdownIt-Anchor" href="#파티션-설계"></a> 파티션 설계</h3><h4 id="1-파티션-개념"><a class="markdownIt-Anchor" href="#1-파티션-개념"></a> 1. 파티션 개념</h4><ul><li>데이터베이스를 여러 부분으로 분할 하는 것</li></ul><h4 id="2-파티션-종류"><a class="markdownIt-Anchor" href="#2-파티션-종류"></a> 2. 파티션 종류</h4><ul><li>범위 분할 : 지정한 열의 값을 기준으로 분할</li><li>해시 분할 : 해시 함수에 따라 데이터를 분할</li><li>조합 분할 : 범위 분할에 의해 데이터를 분할한 다음 해시 함수를 적용하여 다시 분할 하는 것</li></ul><h4 id="3-파티션-장점"><a class="markdownIt-Anchor" href="#3-파티션-장점"></a> 3. 파티션 장점</h4><ul><li><u>데이터 액세스 범위를 줄여 성능 향상</u></li><li>전체 데이터의 훼손 가능성이 감소 및 데이터 가용성 향상</li><li>각 분할 영역을 독립적으로 백업하고 복구 가능</li><li>디스크 경합에 대한 감소</li></ul><h4 id="4-파티셔닝-순서"><a class="markdownIt-Anchor" href="#4-파티셔닝-순서"></a> 4. 파티셔닝 순서</h4><ol><li>파티션의 종류 결정</li><li>파티션 키의 선정</li><li>파티션 수의 결정</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;delete-constraint&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리데이터저장소구성" scheme="https://hyeonukdev.github.io/tags/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EA%B5%AC%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 논리데이터모델 개요</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EC%9A%94/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EC%9A%94/</id>
    <published>2020-05-26T07:45:48.000Z</published>
    <updated>2020-05-26T07:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_09.png" alt="논리데이터모델" /></p><h3 id="시스템-개발-절차"><a class="markdownIt-Anchor" href="#시스템-개발-절차"></a> 시스템 개발 절차</h3><ul><li><u>데이터관점, 프로세스 관점</u> 두 가지로 진행</li><li><u>개념 모델링</u>을 통해 개발 범위 파악</li><li>업무 중심의 분석 단계</li><li>개발하고자 하는 환경을 고려한 설계 단계로 구체화</li><li>개발 단계로 진행</li></ul><h3 id="데이터-모델링-정의"><a class="markdownIt-Anchor" href="#데이터-모델링-정의"></a> 데이터 모델링 정의</h3><ul><li>데이터베이스 설계 방법론</li><li>기업의 정보 구조를 실체와 관계를 중심으로 명확하고 체계적으로 표현하여 문서화하는 기법</li><li>기업의 정보 구조를 실체와 관계를 중심으로 명확하고 체계적으로 표현하여 문서화하는 기법</li></ul><h3 id="데이터-모델링-목적"><a class="markdownIt-Anchor" href="#데이터-모델링-목적"></a> 데이터 모델링 목적</h3><ul><li>연관 조직의 정보요구에 대한 정확한 이해</li><li>사용자, 설계자, 개발자 간에 효율적인 의사소통 수단 제공</li><li>데이터 체계 구축을 통한 고품질 S/W와 유지보수 비용의 감소 효과 기대</li><li>신규 또는 개선 시스템의 개발 기초를 제공</li></ul><h3 id="데이터-모델링-특성"><a class="markdownIt-Anchor" href="#데이터-모델링-특성"></a> 데이터 모델링 특성</h3><ul><li>데이터 중심 분석을 통한 업무 흐름 파악이 용이</li><li>데이터 무결성 보장</li><li>데이터의 공유를 통한 중복을 제거하고 일관성 있는 정보 제공</li></ul><h3 id="데이터-모델링-절차"><a class="markdownIt-Anchor" href="#데이터-모델링-절차"></a> 데이터 모델링 절차</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_10.png" alt="데이터모델링절차" /></p><h3 id="논리-데이터-모델링-정의"><a class="markdownIt-Anchor" href="#논리-데이터-모델링-정의"></a> 논리 데이터 모델링 정의</h3><ul><li>데이터베이스 개발 과정의 전략수립 및 분석 단계에서 실시하며, 데이터 구조에 대한 논리적 정의 단계</li><li>정확한 업무 분석을 통한 자료의 흐름을 분석하여 현재 사용 중인 양식, 문서, 징표를 중심으로 자료항목을 추출하여 추출된 <u>엔티티와 속성들의 관계를 구조적으로 정의하는 단계</u></li></ul><h3 id="논리-데이터-모델의-특성"><a class="markdownIt-Anchor" href="#논리-데이터-모델의-특성"></a> 논리 데이터 모델의 특성</h3><ul><li><u>요구사항을 충분히 수집하지 않으면 다음 단계의 요구사항 변경에 따른 많은 비용이 발생</u></li><li>모든 이해당사자들과 의사소통의 보조자료로서 E-R모델을 활용</li><li>논리적모델은 독립적</li></ul><h3 id="이상-anomaly-현상"><a class="markdownIt-Anchor" href="#이상-anomaly-현상"></a> 이상 Anomaly 현상</h3><ul><li><u>불필요한 데이터 중복으로 인해</u> 릴레이션에 대한 데이터 삽입/수정/삭제 연산을 수행할 때 발생할 수 있는 부작용</li><li><u>정규화를 통해 이상현상을 제거</u></li><li>종류<ul><li>삽입 이상<ul><li>새 데이터를 삽입시 불필요한 데이터도 함께 삽입되는 문제</li></ul></li><li>갱신 이상<ul><li>중복 데이터 중 일부만 변경하여 데이터가 불일치하게 되는 모순의 문제</li></ul></li><li>삭제 이상<ul><li>데이터를 삭제시 꼭 필요한 데이터까지 함께 삭제되는 데이터 손실의 문제</li></ul></li></ul></li></ul><h3 id="정규화-normalization-개념"><a class="markdownIt-Anchor" href="#정규화-normalization-개념"></a> 정규화 Normalization 개념</h3><ul><li>중복성을 최소화하고 정보의 일관성을 보장하기 위한 개념</li><li>릴레이션을 관련 있는 속성들로만 구성되도록 릴레이션을 분해하는 과정<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_11.png" alt="Normalization" /></li></ul><h3 id="정규화-목적"><a class="markdownIt-Anchor" href="#정규화-목적"></a> 정규화 목적</h3><ul><li>데이터 중복 배제로 데이터 관리 편의성 제고 및 자료 저장 공간의 최소화</li><li>데이터 모형 단순화</li><li>데이터 구조의 안정성 및 무결성 유지</li><li>속성의 배열상태 검증</li><li>엔터티와 속성의 누락 여부 검증 수단</li><li>자료검색과 추출의 효율성을 추구</li></ul><h3 id="정규화-특징"><a class="markdownIt-Anchor" href="#정규화-특징"></a> 정규화 특징</h3><ul><li>어떤 관계구조가 바람직한 것인지, 바람직하지 못한 관계를 어떻게 분해하여야 하는지에 관한 구체적인 판단기준을 제공</li><li>정규화된 데이터 모델은 정확성, 일치성, 단순성, 비중복성, 안정성 보장</li></ul><h3 id="정규화-방법"><a class="markdownIt-Anchor" href="#정규화-방법"></a> 정규화 방법</h3><p><a href="https://yaboong.github.io/database/2018/03/09/database-normalization-1/">링크</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터모델개요" scheme="https://hyeonukdev.github.io/tags/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EC%9A%94/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 자료구조</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</id>
    <published>2020-05-26T07:21:15.000Z</published>
    <updated>2020-05-26T07:21:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><ul><li>업무 분석가, 데이터베이스 엔지니어가 작성한 논리 데이터저장소 설계 내역에서 <u>정의된 데이터의 유형을 확인하고 식별</u></li><li>논리 데이터저장소 설계 내역에서 <u>데이터의 논리적 단위와 데이터 간의 관계를 확인</u></li><li>논리 데이터저장소 설계 내역에서 <u>데이터 또는 데이터간의 제약조건과 이들 간의 관계를 식별</u></li></ul><h3 id="자료구조의-개념"><a class="markdownIt-Anchor" href="#자료구조의-개념"></a> 자료구조의 개념</h3><ul><li><p>컴퓨터에서 자료를 효율적으로 표현하고 저장하고 처리할 수 있도록 만들어진 논리적인 틀</p></li><li><p>분류<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_08.png" alt="자료구조" /></p></li><li><p>선형리스트</p></li><li><p>연결리스트</p></li><li><p>스택</p></li><li><p>큐</p></li><li><p>데크</p></li><li><p>트리</p><ul><li>이진트리</li><li>순회</li></ul></li><li><p>그래프<br /><a href="https://www.notion.so/hyeonukdev/Alogorithm-0fe7decd13f344d899ca2e5ba1c4d901">알고리즘스터디</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;업무 분석가, 데이터베이스 엔지니어가 작성한 논리 데이터저장소 설계 내역에서 &lt;u&gt;정의
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="자료구조" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-26T06:17:14.000Z</published>
    <updated>2020-05-26T06:17:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="1-ide-도구"><a class="markdownIt-Anchor" href="#1-ide-도구"></a> 1. IDE 도구</h3><ul><li>통합 개발 환경은 코드의 작성 및 편집, 디버깅, 컴파일, 배포 등 프로그램 개발에 관련된 모든 작업을 하나씩 프로그램 안에서 처리하는 환경을 제공하는 소프트웨어</li><li>기능<ol><li>개발 환경 지원</li><li>컴파일 및 디버깅 기능 제공</li><li>외부 연계모듈과 통합 기능 제공</li></ol></li></ul><h3 id="2-협업-도구"><a class="markdownIt-Anchor" href="#2-협업-도구"></a> 2. 협업 도구</h3><ul><li>종류<ul><li>기능에 따라 문서굥유</li><li>소스 공유</li><li>아이디어 공유</li><li>디자인 공유</li><li>마인드 맵핑</li><li>프로제트 관리</li><li>일정관리</li></ul></li><li>기능<ol><li>개발자간 커뮤니케이션</li><li>일정 및 이슈 공유</li><li>개발자간 집단지성 활용</li></ol></li></ul><h3 id="3-형상관리-도구"><a class="markdownIt-Anchor" href="#3-형상관리-도구"></a> 3. 형상관리 도구</h3><ul><li>소프트웨어 개발 과정에서 <u>소프트웨어의 변경 사항을 관리</u>하기 위해 변경을 체계적으로 관리, 추적 및 제어하기 위한 일련의 활동</li><li>절차<ol><li>형상 식별</li><li>변경 제어</li><li>형상 감사</li><li>형상 기록</li></ol></li><li>관리 도구<ul><li>CVS</li><li>SVN</li><li>GIT</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;1-ide-도구&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-ide-도구&quot;&gt;&lt;/a&gt; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 형상관리도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-26T06:04:41.000Z</published>
    <updated>2020-05-26T06:04:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="형상관리-configuration-management"><a class="markdownIt-Anchor" href="#형상관리-configuration-management"></a> 형상관리 Configuration Management</h3><ul><li>소프트웨어 개발 과정에서 <u>소프트웨어의 변경 사항을 관리</u>하기 위해 변경을 체계적으로 관리, 추적 및 제어하기 위한 일련의 활동</li><li>소프트웨어 형상은 항상 변하게 되는데 이때 과거의 형상을 기억하고 있어야 하중에 문제가 되더라고 <u>과거의 형상을 원상 복구 가능</u></li><li>형상관리절차<ol><li>형상 식별</li><li>변경 제어</li><li>형상 감사</li><li>형상 기록</li></ol></li></ul><h3 id="형상관리-수행-절차-및-관리조직"><a class="markdownIt-Anchor" href="#형상관리-수행-절차-및-관리조직"></a> 형상관리 수행 절차 및 관리조직</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_06.png" alt="형상관리 수행 절차" /></p><ul><li>형상 통제 위원회<ul><li>변경 요청에 대한 기술적인 타당성, 부작용, 시스템의 기능 및 형상관리 항목들에 미치는 영향, 수정에 소요되는 기간 및 비용 등을 평가</li></ul></li></ul><h3 id="형상관리의-특징"><a class="markdownIt-Anchor" href="#형상관리의-특징"></a> 형상관리의 특징</h3><ul><li><u>소프트웨어 변경의 원인을 알아내고 제어하며 적절히 변경되고 있는지 확인</u>하여 해당 담당자에게 통보하는 작업</li><li>형상관리는 소프트에어 개발의 전 단계는 물론 유지보수 단계에서도 수행되는 활동</li><li>형상관리는 소프트웨어 개발의 전체 비용을 줄이고, 개발과정의 여러 가지 문제점 발생요인이 최소화 되도록 보증하는 것이 목적</li></ul><h3 id="소프트웨어-형상관리-도구-기능"><a class="markdownIt-Anchor" href="#소프트웨어-형상관리-도구-기능"></a> 소프트웨어 형상관리 도구 기능</h3><ul><li>체크아웃<ul><li>형상관리 도구 Repository로 부터 최신 소프트웨어 형상을 개발자 PC로 다운로드 받는 기능</li></ul></li><li>체크인<ul><li>개발자가 수정한 소스를 형상관리 도구로 업로드하는 기능</li></ul></li><li>커밋<ul><li>개발자가 소스를 형상관리 도구에 업로드 후 최종적으로 업데이트가 되었을 때 형상관리 서버에서 반영되도록 하는 기능</li></ul></li></ul><h3 id="소프트웨어-형상관리-도구개념"><a class="markdownIt-Anchor" href="#소프트웨어-형상관리-도구개념"></a> 소프트웨어 형상관리 도구개념</h3><ul><li>소스 코드나 문서의 버전 관리, 이력 관리, 추적 등 변경사항을 체계적으로 관리할 수 있는 기능을 제공하는 도구</li><li>종류<ul><li>CVS</li><li>SVN</li><li>GIT</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;형상관리-configuration-management&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="형상관리도구" scheme="https://hyeonukdev.github.io/tags/%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 현업도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%84%EC%97%85%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%84%EC%97%85%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-26T05:59:59.000Z</published>
    <updated>2020-05-26T05:59:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="협업도구의-필요성"><a class="markdownIt-Anchor" href="#협업도구의-필요성"></a> 협업도구의 필요성</h3><ul><li>규모에 따라 소프트웨어 개발 프로젝트는 수명에서 수천 명의 개발자가 참여하기 때문에 그들 간의 협업을 위한 도구 필요</li><li>특히, 통합 규현 관리를 위한 개발자 간 협업도구 필요</li><li>개발자 간에는 전문 분야, 경험, 개인적 목표가 다르기 때문에 다른 의견이 있을 수 있고 다른 개발자와 유대감 형성 및 유대감 지속을 위한 커뮤니케이션 필요</li></ul><h3 id="협업도구의-분류"><a class="markdownIt-Anchor" href="#협업도구의-분류"></a> 협업도구의 분류</h3><ul><li>기능에 따라 문서굥유</li><li>소스 공유</li><li>아이디어 공유</li><li>디자인 공유</li><li>마인드 맵핑</li><li>프로제트 관리</li><li>일정관리<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_05.png" alt="협업도구분류1" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_06.png" alt="협업도구분류2" /></li></ul><h3 id="협업도구-기능"><a class="markdownIt-Anchor" href="#협업도구-기능"></a> 협업도구 기능</h3><ol><li>개발자간 커뮤니케이션<ul><li>개발자간 작업 공유, 오류 현상 공유, 의견 공유 등 다양한 의사 소통 제공</li></ul></li><li>일정 및 이슈 공유<ul><li>소스 코드 규현 도중 발생하는 오류 및 이슈에 대한 공유 혹은 프로젝트 일정에 대한 공유 기능</li></ul></li><li>개발자간 집단지성 활용<ul><li>구현아이디어의 공유 혹은 새로운 아이디어를 개발자들 간에 공유함으로써 집단지성 활용 가능</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;협업도구의-필요성&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#협업도구의-필요성&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="현업도구" scheme="https://hyeonukdev.github.io/tags/%ED%98%84%EC%97%85%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - IDE도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/IDE%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/IDE%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-26T05:39:25.000Z</published>
    <updated>2020-05-26T05:39:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><ul><li>개발하고자 하는 응용 소프트웨어와 연계 대상 모듈간의 특성을 고려하여 효율적인 데이터 송수신 방법을 정의</li><li>데터 연계 요구 사항을 고려하여 연계 주기를 정의</li><li>대상 내외부 모듈 간의 연계 목적을 고려하여 데이터 연계 실패 시 처리 방안을 정의</li><li>내외부 모듈 간 연계 데이터의 중요성을 고려하여 송수신 시 보안을 적용</li></ul><p>IDE; Integrated Development Environmnet 개념</p><ul><li>통합 개발 환경은 코드의 작성 및 편집, 디버깅, 컴파일, 배포 등 프로그램 개발에 관련된 모든 작업을 하나씩 프로그램 안에서 처리하는 환경을 제공하는 소프트웨어</li></ul><h3 id="ide-도구의-기능"><a class="markdownIt-Anchor" href="#ide-도구의-기능"></a> IDE 도구의 기능</h3><ol><li>개발 환경 지원</li></ol><ul><li>C++, JAVA 등의 언어를 이용하여 애프릴케이션을 개발할 수 있는 환경 제공</li></ul><ol start="2"><li>컴파일 및 디버깅 기능 제공</li></ol><ul><li>소스 코딩이 완료된 후 이를 컴파일하면 문법에 어긋나지 않았는지 확인하고 오류가 발생하면 이를 추적하여 수정할 수 있는 디버깅 기능을 제공</li></ul><ol start="3"><li>외부 연계모듈과 통합 기능 제공</li></ol><ul><li>EAI; Enterprise Application Integration, ESB; Enterprise Service Bus 등 외부 인터페이스 모듈과 통합을 통하여 통합 개발 기능 제공</li><li>JDBC; Java Database Connection, ODBC;Open Database Connectivity 등을 통하여 데이터베이스 연동을 통한 통합 개발 기능 제공</li><li>외부 협상, 배포 관리 기능과 연계되어 소스 코드의 형상관리 및 자동 배포 가능</li></ul><h3 id="ide-도구-비교"><a class="markdownIt-Anchor" href="#ide-도구-비교"></a> IDE 도구 비교</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_04.png" alt="IDE 도구 비교" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;개발하고자 하는 응용 소프트웨어와 연계 대상 모듈간의 특성을 고려하여 효율적인 데이터 송수신 방법을 정의&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="IDE도구" scheme="https://hyeonukdev.github.io/tags/IDE%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-26T05:23:40.000Z</published>
    <updated>2020-05-26T05:23:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="1-단위모듈-구현"><a class="markdownIt-Anchor" href="#1-단위모듈-구현"></a> 1. 단위모듈 구현</h3><ul><li>통합 구현에서 단위 모듈 구현은 비즈니스 컴포넌트, 내외부 인터페이스 모듈, 데이터베이스 접근 모듈 등 <u>통합 구현이 필요한 단위 컴포넌트 구현</u></li><li>고려사항<ol><li>응집도는 높히고 결합도는 낮춤</li><li>공통모듈을 먼저 구현</li><li>항상 예외처리 로직을 구려하여 구현</li></ol></li></ul><h3 id="2-단위모듈-테스트"><a class="markdownIt-Anchor" href="#2-단위모듈-테스트"></a> 2. 단위모듈 테스트</h3><ul><li>컴퓨터 프로그래밍에서 소스 코드의 특정 모듈이 의도된 대로 정확히 작동하는지 검증하는 절차</li><li>테스트 방법<ol><li>화이트박스 테스트</li><li>메소드 기반 테스트</li><li>화면 기반 테스트</li><li>스텁과 드라이버 활용 테스트</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;1-단위모듈-구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-단위모듈-구현&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 단위모듈테스트</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%ED%85%8C%EC%8A%A4%ED%8A%B8/</id>
    <published>2020-05-26T05:11:47.000Z</published>
    <updated>2020-05-26T05:11:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="단위모듈-테스트의-개념"><a class="markdownIt-Anchor" href="#단위모듈-테스트의-개념"></a> 단위모듈 테스트의 개념</h3><ul><li>컴퓨터 프로그래밍에서 소스 코드의 특정 모듈이 의도된 대로 정확히 작동하는지 검증하는 절차</li></ul><h3 id="단위모듈-테스트-방법"><a class="markdownIt-Anchor" href="#단위모듈-테스트-방법"></a> 단위모듈 테스트 방법</h3><ol><li>화이트박스 테스트</li></ol><ul><li>단위모듈 테스트의 가장 기본적인 방법</li><li>모듈 내부의 소스 코드를 보면서 테스트 케이스를 다양하게 만들어서 테스트</li></ul><ol start="2"><li>메소드 기반 테스트</li></ol><ul><li>단위 모듈의 외부에 공개된 메소드 기반 테스트</li><li>메소드에 파라미터 값을 다르게 호출하면서 다양한 테스트 수행</li></ul><ol start="3"><li>화면 기반 테스트</li></ol><ul><li>사용자용 화면이 있는 경우 각각의 화면 단위로 단위모듈 개발 후 화면에 직접 데이터를 입력하며 테스트 수행</li><li>화면과 연계된 서비스 컴포넌트, 비즈니스 컴포넌트 및 공통 텀포넌트를 한꺼번에 단위 테스트에 참여시킬 수 있음</li><li>사용자 시나리오에 기반한 단위 모듈 테스트</li></ul><ol start="4"><li>스텀과 드라이버 활용 테스트</li></ol><ul><li>사용자용 화면이 없는 경우 스텁 혹은 드라이버를 활용한 단위모듈 테스트</li><li>서비스 컴포넌트, 비즈니스 컴포넌트 등 하위 모듈 개발이 안된 경우에도 스텁과 드라이버를 활용한 단위 테스트 가능</li></ul><h3 id="소스코드-커버리지-개념"><a class="markdownIt-Anchor" href="#소스코드-커버리지-개념"></a> 소스코드 커버리지 개념</h3><ul><li>프로그램의 테스트 수행 정도를 나타내는 값으로 테스트 수행의 완벽성을 측정하는 도구</li></ul><h3 id="소스코드-커버리지-유형"><a class="markdownIt-Anchor" href="#소스코드-커버리지-유형"></a> 소스코드 커버리지 유형</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_02.png" alt="소스코드커버리지" /></p><ul><li>구문 커버리지<ul><li>소스코드 구문에 대한 단순한 실행 여부 측정</li></ul></li><li>결정 커버리지<ul><li>결정 조건 내의 전체 조건식이 최소한 참/거짓 한 번의 값을 가지도록 측정</li></ul></li><li>조건 커버리지<ul><li>전체 조건식의 결과와 관계없이 각 개별 조건식이 참/거짓 한번 모두 갖도록 조건식을 조합</li></ul></li><li>조건/결정 커버리지<ul><li>전체조건식이 참/거짓 한번씩 가지면서, 개별 조건식이 참/거짓 모두 한 번씩 갖도록 조합</li></ul></li><li>변경조건/결정 커버리지<ul><li>각 개별 조건식이 다른 개별 조건식에 무관하게 전체 조건식의 결과에 영향</li></ul></li><li>다중조건 커버리지<ul><li>결정 조건 내의 모든 개별 조건식의 모든 가능한 논리적 조합 100% 보상</li></ul></li></ul><h3 id="ide도구를-활용한-디버깅"><a class="markdownIt-Anchor" href="#ide도구를-활용한-디버깅"></a> IDE도구를 활용한 디버깅</h3><ul><li>Eclipse 혹은 Window Visual Studio 같은 IDE 도구를 활용하여 단위 모듈에 대한 디버깅을 실시</li><li>디버깅 시 에러가 나온 코등 대해서 로직을 따라가면 변수 값의 변화를 관찰</li></ul><h3 id="단위테스트-자동화-도구를-활용한-디버깅"><a class="markdownIt-Anchor" href="#단위테스트-자동화-도구를-활용한-디버깅"></a> 단위테스트 자동화 도구를 활용한 디버깅</h3><ul><li>JUnit<ul><li>Java 기반의 단위 모듈 테스트 자동화 도구</li></ul></li><li>CppUnit<ul><li>C++ 언어 기반의 단위 모듈 테스트 자동화 도구</li></ul></li><li>unittest<ul><li>Python에서 단위 테스트를 수행하기 위한 자동화 도구<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_03.png" alt="unittest를 활용한 사례" /></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;단위모듈-테스트의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#단위모듈-테스트의-개
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="단위모듈테스트" scheme="https://hyeonukdev.github.io/tags/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 단위모듈구현</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/</id>
    <published>2020-05-26T04:54:48.000Z</published>
    <updated>2020-05-26T04:54:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><ul><li>구성된 연계 매커니즘에 대한 명세서를 참조하여 <u>연계 모듈 구현을 위한 논리적, 물리적 환경을 준비</u></li><li>구성된 연계 매너키즘에 대한 명세서를 참조하여 <u>외부 시스템과 연계 모듈을 구현</u></li><li><u>연계 모듈의 안정적인 작동 여부와 모듈 간 인터페이스를 통해 연동된 데이터의 무결성을 검증</u></li><li>구현된 연계 모듈을 테스트할 수 있는 <u>테스트 케이스를 작성하고 단위 테스트를 수행하기 위한 테스트 조건을 명세화</u></li></ul><h3 id="통합구현의-개념"><a class="markdownIt-Anchor" href="#통합구현의-개념"></a> 통합구현의 개념</h3><ul><li>모듈 간의 분산이 이루어진 경우를 포함하여 단위 모듈 간의 데이터 관계를 분석하고, 이를 기반으로 한 <u>매커니즘 모듈 간의 효율적인 연계</u>를 구현</li></ul><h3 id="단위모듈-구현의-개념"><a class="markdownIt-Anchor" href="#단위모듈-구현의-개념"></a> 단위모듈 구현의 개념</h3><ul><li>통합 구현에서 단위 모듈 구현은 비즈니스 컴포넌트, 내외부 인터페이스 모듈, 데이터베이스 접근 모듈 등 <u>통합 구현이 필요한 단위 컴포넌트 구현</u></li></ul><h3 id="단위모듈-종류"><a class="markdownIt-Anchor" href="#단위모듈-종류"></a> 단위모듈 종류</h3><ul><li>화면모듈</li><li>화면에서 입력 받은 데이터 처리를 위한 서비스 컴포넌트</li><li>비즈니스 트랜잭션 컴포넌트</li><li>데이터베이스 접근 컴포넌트</li><li>내외부 인터페이스 컴포넌트</li><li>데이터 암/복호화 컴포넌트<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_01.png" alt="단위모듈" /></li></ul><h3 id="공통모듈-구현"><a class="markdownIt-Anchor" href="#공통모듈-구현"></a> 공통모듈 구현</h3><ul><li>모든 서비스 컴포넌트 혹은 트랜잭션 컴퓨터가 <u>공통적으로 사용하는 컴포넌트 </u></li><li>종류<ul><li>내외부 인터페이스 컴포넌트</li><li>DB접근 컴포넌트</li><li>암/복호화 컴포넌트</li></ul></li><li>화면에서의 공통모듈은 스크립트로 구현하는데 날짜 계산, 주소 정보, 주민등록번호 정합성 체크 컴포넌트</li></ul><h3 id="단위모듈-구현시-고려사항"><a class="markdownIt-Anchor" href="#단위모듈-구현시-고려사항"></a> 단위모듈 구현시 고려사항</h3><ul><li>모듈 내 구성요소들 간의 <u>응집도는 높이고 모듈간의 결합도는 낮춤</u></li><li><u>공통모듈 구현을 먼저하고, 개별 단위모듈 구현시 이를 재사용</u></li><li>항상 예외처리 로직을 고려하여 구현</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구성된 연계 매커니즘에 대한 명세서를 참조하여 &lt;u&gt;연계 모듈 구현을 위한 논리적, 물리적 환경을 준비&lt;/u
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="단위모듈구현" scheme="https://hyeonukdev.github.io/tags/%EB%8B%A8%EC%9C%84%EB%AA%A8%EB%93%88%EA%B5%AC%ED%98%84/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/25/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/25/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-24T15:22:42.000Z</published>
    <updated>2020-05-24T15:22:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="1-소프트웨어-버전-관리-도구"><a class="markdownIt-Anchor" href="#1-소프트웨어-버전-관리-도구"></a> 1. 소프트웨어 버전 관리 도구</h3><ul><li>형상관리지침을 활용하여 제품 소프트웨어의 신규 개발, 변경, 개선과 관련된 수정 내역을 관리하는 도구</li><li>소프트웨어 버전관리 도구 유형</li></ul><ol><li>공유 폴더 방식 : RCS, SCCS</li><li>클라이언트/서버 방식 : CVS, SVN</li><li>분산 저장소 방식 : Git, Bitkeeper</li></ol><h3 id="2-빌드-자동화-도구"><a class="markdownIt-Anchor" href="#2-빌드-자동화-도구"></a> 2. 빌드 자동화 도구</h3><ul><li>제품 소프트웨어 실행 파일 생성을 자동화하기 위해서 저장소에 있는 소스를 자동으로 읽어서 빌드를 하여 실행 파일을 만드는 도구</li><li>온라인 빌드 자동화 도구 : 젠킨스</li><li>안드로이드 빌드 도구 : 그래들</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;1-소프트웨어-버전-관리-도구&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 빌드 자동화 도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EB%B9%8C%EB%93%9C%EC%9E%90%EB%8F%99%ED%99%94%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EB%B9%8C%EB%93%9C%EC%9E%90%EB%8F%99%ED%99%94%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-24T14:20:12.000Z</published>
    <updated>2020-05-24T14:20:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="소프트웨어-빌드-자동화-도구-개념"><a class="markdownIt-Anchor" href="#소프트웨어-빌드-자동화-도구-개념"></a> 소프트웨어 빌드 자동화 도구 개념</h3><ul><li>제품 소프트웨어 <u>실행 파일 생성을 자동화</u>하기 위해서 저장소에 있는 소스를 자동으로 읽어서 빌드를 하여 실행 파일을 만드는 도구</li><li>빌드 자동화 도구는 <u>지속적인 통합</u>과 일맥상통함</li><li>수없이 반복해서 최종 결과물을 만들어내야 하는 소프트웨어 개발 업무에 빌드 자동화 도구는 반드시 갖추어야함</li></ul><h3 id="온라인-빌드-자동화-도구-젠킨스"><a class="markdownIt-Anchor" href="#온라인-빌드-자동화-도구-젠킨스"></a> 온라인 빌드 자동화 도구, 젠킨스</h3><ul><li>빌드 자동화 도구로서 가장 많이 활용</li><li>Java 기반으의 오픈 소스로 지속적 통합관리를 가능</li><li>Apache-tomcat과 같은 서블릿 컨테이너 서버 기반으로 구동되는 시스템</li><li>CVS, SVN, Git 등 다양한 버전 관리 도구를 지원</li><li>특징<ul><li>쉬운 설치</li><li>친숙한 GUI</li><li>저장소 부하 감소</li><li>실시간 피드백</li><li>분산 빌드</li><li>3rd Party 플러그인</li></ul></li></ul><h3 id="gradle-안드로이드-환경에-적합한-도구"><a class="markdownIt-Anchor" href="#gradle-안드로이드-환경에-적합한-도구"></a> Gradle 안드로이드 환경에 적합한 도구</h3><ul><li>여러가지 언어의 빌드 환경 구성이 가능</li><li>안드로이드 개발환경에서 빌드 자동화됨</li><li>모든 그래들 빌드는 하나 이상의 projects로 구성되고 각 project는 하나 이상의 task들로 구성되며 이 task는 어떤 클래스를 컴파일 하거나 jar를 생성하거나 javadoc를 만드는 작업들을 의미함</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-빌드-자동화-도구-개념&quot;&gt;&lt;a class=&quot;markdownIt-An
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="빌드자동화도구" scheme="https://hyeonukdev.github.io/tags/%EB%B9%8C%EB%93%9C%EC%9E%90%EB%8F%99%ED%99%94%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 소프트웨어 버전 관리 도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-24T13:23:32.000Z</published>
    <updated>2020-05-24T13:23:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><ul><li>형상 관리 지침을 활용하여 <u>제품 소프트웨어의 신규 개발, 변경, 개선과 관련된 버전을 등록</u></li><li>형상 관리 지침을 활용하여 <u>제품 소프트웨어에 대한 버전 현황 관리와 소스, 관련 자료 백업</u>을 수행</li></ul><h3 id="소프트웨어-버전-관리-도구-개념"><a class="markdownIt-Anchor" href="#소프트웨어-버전-관리-도구-개념"></a> 소프트웨어 버전 관리 도구 개념</h3><ul><li>형상 관리 지침을 활용하여 제품 소프트웨어의 신규 개발, 변경, 개선과 관련된 수정 내역을 관리하는 도구</li></ul><h3 id="버전-관리-도구의-유형별-특징"><a class="markdownIt-Anchor" href="#버전-관리-도구의-유형별-특징"></a> 버전 관리 도구의 유형별 특징</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_06.png" alt="버전관리도구" /></p><h3 id="현업에서-쓰이는-버전-관리-도구별-특징"><a class="markdownIt-Anchor" href="#현업에서-쓰이는-버전-관리-도구별-특징"></a> 현업에서 쓰이는 버전 관리 도구별 특징</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_07.png" alt="버전관리도구특징" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_08.png" alt="버전관리도구특징" /></p><h3 id="버전관리-도구-사용-순서"><a class="markdownIt-Anchor" href="#버전관리-도구-사용-순서"></a> 버전관리 도구 사용 순서</h3><ol><li>버전 관리 도구 유의 사항 확인</li><li>버전 관리 도구 동작 원리 학습</li><li>버전 관리 도구 실행</li><li>버전 관리 도구 기능별 동작</li><li>형상 관리 개념 공유</li></ol><h3 id="소프트웨어-버전-관리-도구-사용시-유의점"><a class="markdownIt-Anchor" href="#소프트웨어-버전-관리-도구-사용시-유의점"></a> 소프트웨어 버전 관리 도구 사용시 유의점</h3><ol><li>형상 관리 지침에 의거 버전에 대한 정보를 언제든지 접근 가능</li><li>개발자, 배포자 이외에 불필요한 사용자의 소스 수정은 불가능함</li><li>동일한 프로젝트 파일에 대해서 여러 개발자가 동시 개발할 수 있어야 함</li><li>에러 발생 시 최대한 빠른 시간 내에 복구함</li></ol><h3 id="제품-소프트웨어-버전-관리-도구-활용방향"><a class="markdownIt-Anchor" href="#제품-소프트웨어-버전-관리-도구-활용방향"></a> 제품 소프트웨어 버전 관리 도구 활용방향</h3><ul><li>제품 소프트웨어 개발 조직이나 배포된 제품이 있는 조직에서는 <u>기 보유 제품 버전과 새로 개발된 버전을 동시에 유지, 관리</u></li><li>활용성 중심으로 버전 관리 도구의 상세 기능을 활용하여 새 버전을 유지하면서 기존 버전의 관리도 함께 수행</li><li>이를 위해 <u>백업 및 장애 복구 등의 추가적인 사항도 Case 별로 고려</u></li></ul><h3 id="버전-관리-도구를-활용한-통합-버전-현황-관리"><a class="markdownIt-Anchor" href="#버전-관리-도구를-활용한-통합-버전-현황-관리"></a> 버전 관리 도구를 활용한 통합 버전 현황 관리</h3><ul><li><u>기존에 버전 관리의 버전별 공동 작업 이외에도 백업 및 복구 작업, 공동 솔루션 기반의 여러 가지 작업 등이 통합되어 현황 관리</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_09.png" alt="버전관리도구현황관리" /></li></ul><h3 id="버전-관리-도구-활용시-자료-백업-정책-및-방법"><a class="markdownIt-Anchor" href="#버전-관리-도구-활용시-자료-백업-정책-및-방법"></a> 버전 관리 도구 활용시 자료 백업 정책 및 방법</h3><ul><li>버전 관리 도구를 활용, 제품 소프트웨어 백업은 내부의 정확한 백업 정책을 먼저 세워야 하고, 상세 백업 방법을 공유<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_10.png" alt="사례및방법" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;형상 관리 지침을 활용하여 &lt;u&gt;제품 소프트웨어의 신규 개발, 변경, 개선과
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="소프트웨어버전관리도구" scheme="https://hyeonukdev.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%B2%84%EC%A0%84%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-24T12:58:41.000Z</published>
    <updated>2020-05-24T12:58:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="1-제품-소프트퉤어-매뉴얼-작성"><a class="markdownIt-Anchor" href="#1-제품-소프트퉤어-매뉴얼-작성"></a> 1. 제품 소프트퉤어 매뉴얼 작성</h3><ul><li>제품소프트웨어 매뉴얼은 설치 매뉴얼과 사용자 매뉴얼이 있음</li><li>설치 및 사용자 매뉴얼은 개발자의 기준이 아닌 사용자의 기준으로 작성</li><li>설치 및 사용자 매뉴얼의 작성 단계와 작성 항목에 대한 이해</li></ul><h3 id="2-국제-표준-제품-품질-특성"><a class="markdownIt-Anchor" href="#2-국제-표준-제품-품질-특성"></a> 2. 국제 표준 제품 품질 특성</h3><ul><li>제품 품질 표준과 프로세스 품질 표준으로 나뉨</li><li>소프트웨어 <u>제품</u> 품질 관련 국제 표준</li><li>소프트웨어 <u>프로세스</u> 품질 관련 국제 표준</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;1-제품-소프트퉤어-매뉴얼-작성&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>제품소프트웨어 패키징 - 국제 표준 제품 품질 특성</title>
    <link href="https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%EA%B5%AD%EC%A0%9C%ED%91%9C%EC%A4%80%EC%A0%9C%ED%92%88%ED%92%88%EC%A7%88%ED%8A%B9%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/24/Engineer_Information_Processing/ch07_%EC%A0%9C%ED%92%88%ED%8C%A8%ED%82%A4%EC%A7%95%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A7%A4%EB%89%B4%EC%96%BC%EC%9E%91%EC%84%B1/%EA%B5%AD%EC%A0%9C%ED%91%9C%EC%A4%80%EC%A0%9C%ED%92%88%ED%92%88%EC%A7%88%ED%8A%B9%EC%84%B1/</id>
    <published>2020-05-24T12:54:12.000Z</published>
    <updated>2020-05-24T12:54:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="제품소프트웨어패키징"><a class="markdownIt-Anchor" href="#제품소프트웨어패키징"></a> 제품소프트웨어패키징</h2><h3 id="국제-표준-제품-품질-특성-분류"><a class="markdownIt-Anchor" href="#국제-표준-제품-품질-특성-분류"></a> 국제 표준 제품 품질 특성 분류</h3><ul><li>제품 품질 관련<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_01.png" alt="제품 품질 관련1" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_02.png" alt="제품 품질 관련2" /></li><li>프로세스 관련<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_03.png" alt="프로세스 관련" /></li><li>ISO/IEC 12119<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_04.png" alt="ISO/IEC 12119 평가절차" /></li><li>ISO/IEC 14598<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0524_05.png" alt="ISO/IEC 14598 특징" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;제품소프트웨어패키징&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#제품소프트웨어패키징&quot;&gt;&lt;/a&gt; 제품소프트웨어패키징&lt;/h2&gt;
&lt;h3 id=&quot;국제-표준-제품-품질-특성-분류&quot;&gt;&lt;a class=&quot;markdownIt-Anc
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="제품소프트웨어패키징" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%9C%ED%92%88%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%ED%8C%A8%ED%82%A4%EC%A7%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="국제표준제품품질특성" scheme="https://hyeonukdev.github.io/tags/%EA%B5%AD%EC%A0%9C%ED%91%9C%EC%A4%80%EC%A0%9C%ED%92%88%ED%92%88%EC%A7%88%ED%8A%B9%EC%84%B1/"/>
    
  </entry>
  
</feed>
