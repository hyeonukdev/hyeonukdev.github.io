<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-31T05:35:12.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>정보처리기사 - 오답노트</title>
    <link href="https://hyeonukdev.github.io/2020/05/31/Engineer_Information_Processing/%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8/%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B81/"/>
    <id>https://hyeonukdev.github.io/2020/05/31/Engineer_Information_Processing/%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8/%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B81/</id>
    <published>2020-05-31T05:35:12.000Z</published>
    <updated>2020-05-31T05:35:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-프로토타이핑의-장점"><a class="markdownIt-Anchor" href="#1-프로토타이핑의-장점"></a> 1. 프로토타이핑의 장점</h3><ul><li>잘못된 요구사항을 사전에 도출하여 향후 발생될 자원의 낭비를 제거</li><li>분석가의 가정을 파악하고 잘못된 경우 유용한 피드백 제공</li><li>사용자 인터페이스의 <b>동적인 행위</b> 용이성 제공</li><li>단점<ul><li>사용자 관심이 프로토타입의 디자인이나 품질 문제로 집중</li></ul></li></ul><h3 id="2-소프트웨어-설계는-요구분석-명세서와-설계-원리-제약-조건에-따라-상위-설계와-하위-설계로-나뉠-때-상위에-설계에-해당되는-것"><a class="markdownIt-Anchor" href="#2-소프트웨어-설계는-요구분석-명세서와-설계-원리-제약-조건에-따라-상위-설계와-하위-설계로-나뉠-때-상위에-설계에-해당되는-것"></a> 2. 소프트웨어 설계는 요구분석 명세서와 설계 원리, 제약 조건에 따라 상위 설계와 하위 설계로 나뉠 때 상위에 설계에 해당되는 것</h3><ul><li>사용자 인터페이스 설계</li><li>아키텍처 설계</li><li>하위 설계<ul><li>모듈 설계</li></ul></li></ul><h3 id="3-소프트웨어-품질-목표-중-할당된-시간에-한정된-자원으로-얼마나-빨리-처리하는가를-의미하는-것은"><a class="markdownIt-Anchor" href="#3-소프트웨어-품질-목표-중-할당된-시간에-한정된-자원으로-얼마나-빨리-처리하는가를-의미하는-것은"></a> 3. 소프트웨어 품질 목표 중 할당된 시간에 한정된 자원으로 얼마나 빨리 처리하는가를 의미하는 것은?</h3><ul><li>Effeciency : 효율성 : 쓸데없이 자원을 낭비하지마!<br /><img src="https://t1.daumcdn.net/cfile/tistory/1923B8054CB8660A97" alt="품질표준" /></li></ul><h3 id="4-응집도의-종류-중-모듈-내에서-한-활동으로부터-나온-출력-값을-다른-활동이-사용할-경우에-해당하는-것은"><a class="markdownIt-Anchor" href="#4-응집도의-종류-중-모듈-내에서-한-활동으로부터-나온-출력-값을-다른-활동이-사용할-경우에-해당하는-것은"></a> 4. 응집도의 종류 중 모듈 내에서 한 활동으로부터 나온 출력 값을 다른 활동이 사용할 경우에 해당하는 것은?</h3><ul><li>순차적응집도</li><li>암기<ul><li><b>기능</b>은 <b>순차</b>적으로 <b>통신</b>해야, <b>절차</b>적 <b>시간</b>이 <b>논리</b>적이 되고 <b>우연</b>이 낮음<br /><img src="https://hyeonukdev.github.io/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0509_02.png" alt="응집도" /></li></ul></li></ul><h3 id="5-모듈-간의-인터페이스로-전달되는-파리미터를-통해서만-모듈-간의-상호-작용이-일어나는-경우에-해당하는-결합도는"><a class="markdownIt-Anchor" href="#5-모듈-간의-인터페이스로-전달되는-파리미터를-통해서만-모듈-간의-상호-작용이-일어나는-경우에-해당하는-결합도는"></a> 5. 모듈 간의 인터페이스로 전달되는 파리미터를 통해서만 모듈 간의 상호 작용이 일어나는 경우에 해당하는 결합도는?</h3><ul><li>자료 결합 : 매개변수나 인수로 데이터를 넘겨주고 처리 결과를 반환<br /><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FD69Nr%2FbtqDj2luZEp%2FgPcAc6E5mT7m7yQnX7pW20%2Fimg.png" alt="결합도" /></li></ul><h3 id="6-디자인-패턴"><a class="markdownIt-Anchor" href="#6-디자인-패턴"></a> 6. 디자인 패턴</h3><ul><li>구조 패턴<ul><li>Adapter</li></ul></li><li>생성 패턴 - factory method - singleton - builder<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0531_01.png" alt="디자인 패턴" /></li></ul><h3 id="7-트리의-degree와-터미널-노드"><a class="markdownIt-Anchor" href="#7-트리의-degree와-터미널-노드"></a> 7. 트리의 Degree와 터미널 노드</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0531_02.png" alt="트리" /></p><ul><li>트리의 Degree : 가장 차수가 많은 노드의 Degree<ul><li>2</li></ul></li><li>터미널 노드 : 자식이 하나도 없는 노드<ul><li>4</li></ul></li></ul><h3 id="8-데이터베이스에-입력-갱신-삭제-등의-데이터-조작과-관련된-이벤트가-발생했을-때-수행되는-절차형-프로시저는"><a class="markdownIt-Anchor" href="#8-데이터베이스에-입력-갱신-삭제-등의-데이터-조작과-관련된-이벤트가-발생했을-때-수행되는-절차형-프로시저는"></a> 8. 데이터베이스에 입력, 갱신, 삭제 등의 데이터 조작과 관련된 이벤트가 발생했을 때 수행되는 절차형 프로시저는?</h3><ul><li>트리거</li><li>절차형 SQL<ul><li>사용자 정의함수<ul><li>연산 처리 결과를 단일값으로 변한</li><li>호출을 통해 실행</li></ul></li><li>이벤트<ul><li>특정 시간에 특정한 쿼리, 프로시저, 함수 등을 실행</li></ul></li><li>프로시저<ul><li>특정 작업을 수행하는 PL/SQL BLOCK</li></ul></li></ul></li></ul><h3 id="9-단위-모듈-테스트에-대한-설명"><a class="markdownIt-Anchor" href="#9-단위-모듈-테스트에-대한-설명"></a> 9. 단위 모듈 테스트에 대한 설명</h3><ul><li>단위 모듈에 대한 코드이므로 시스템 수준의 오류를 찾아내기는 어렵다</li><li>테스트 케이스를 활용하여 수행할 수 있다</li><li>모듈 통합 이후에는 찾기 어려운 에러들을 간단히 찾을 수 있도록 해준다</li><li>화이트 테스트 기법이 기본적으로 사용됨<ul><li><u>블랙박스 아님</u></li></ul></li></ul><h3 id="10-빌드-자동화-도구에-대한-설명"><a class="markdownIt-Anchor" href="#10-빌드-자동화-도구에-대한-설명"></a> 10. 빌드 자동화 도구에 대한 설명</h3><ul><li>빌드 자동화 도구<ul><li>Ant, Maven, Gradle, Jenkins</li></ul></li><li>빌드 자동화 도구는 지속적인 통합 개발 환경에서 유용하게 활용 된다</li><li>Jenkins는 SVN, Git 등 대부분의 형상 관리 도구와 연동이 가능하다</li><li>Gradle은 Groovy를 기반으로 한 오픈 소스 형태의 자동화 도구로, 안드로이드 앱 개발 환경에서 사용한다<ul><li><u>오픈소스형태는 아님</u></li></ul></li></ul><h3 id="11-하향식-통합-검사에-대한-설명"><a class="markdownIt-Anchor" href="#11-하향식-통합-검사에-대한-설명"></a> 11. 하향식 통합 검사에 대한 설명</h3><ul><li>시스템 구조의 위층에 있는 모듈로부터 아래층의 모듈로 내려오면서 통합한다</li><li>테스트 케이스 입출력을 조정하기 위한 <u>스텁</u> 프로그램을 추가로 작성한다</li><li>상위 모듈에서는 테스트 케이스를 사용하기 어렵다</li><li>테스트 초기에도 시스템의 구조를 사용자에게 보여줄 수 있다.</li></ul><h3 id="12-eai의-구축-유형"><a class="markdownIt-Anchor" href="#12-eai의-구축-유형"></a> 12. EAI의 구축 유형</h3><p><img src="https://hyeonukdev.github.io/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_01.png" alt="EAI" /></p><ul><li>그룹 내에는 Hub&amp;Spoke 방식을 그룹 간은 메시징 버스 방식을 사용하는 것은 Hybrid 유형</li></ul><h3 id="13-인터페이스-보안-기능-적용에-대한-설명"><a class="markdownIt-Anchor" href="#13-인터페이스-보안-기능-적용에-대한-설명"></a> 13. 인터페이스 보안 기능 적용에 대한 설명</h3><ul><li>인터페이스 보안 기능은 먼저 인터페이스 기능 및 보안 취약점을 확인한 후 이를 기반으로 적용한다.</li><li>네트워크 구간에 보안 기능 적용 시 중간자에 의한 데이터 탈취 및 위조와 변조를 막기 위해 네트워크 트패픽에 암호화를 수행한다.</li><li>데이터베이스에 보안 기능 적용 시 데이터베이스의 접근 권한 및 데이터베이스 동작 객체의 보안 취약점을 보완하는 기능으로 적용한다.</li><li>애플리케이션 영역의 보안은 애플리케이션 코드 상 보안 취약점을 보완한다.</li></ul><h3 id="14-dml-구문종류"><a class="markdownIt-Anchor" href="#14-dml-구문종류"></a> 14. DML 구문종류</h3><ul><li>INSERT</li><li>DELETE</li><li>UPDATE</li><li>SELECT</li><li><u>create는 없음</u></li></ul><h3 id="15-트랜잭션의-특징"><a class="markdownIt-Anchor" href="#15-트랜잭션의-특징"></a> 15. 트랜잭션의 특징</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0531_03.png" alt="트랜잭션 특징" /></p><h3 id="16-뷰에-대한-설명"><a class="markdownIt-Anchor" href="#16-뷰에-대한-설명"></a> 16. 뷰에 대한 설명</h3><ul><li>뷰는 독자적인 인덱스를 가질 수 없다</li><li>뷰는 논리적 독립성을 제공한다</li><li>뷰로 구성된 내용에 삽입, 갱신, 삭제 연산은 제약이 따른다</li><li>뷰는 별도의 저장공간이 없는 가상 테이블로 뷰가 정의된 <u>기본 테이블이 삭제되면 뷰는 자동적으로 삭제된다</u></li></ul><h3 id="17-릴레이션에서-튜플의-수량과-관련된-것"><a class="markdownIt-Anchor" href="#17-릴레이션에서-튜플의-수량과-관련된-것"></a> 17. 릴레이션에서 튜플의 수량과 관련된 것</h3><ul><li>Cardinality</li><li>관계 데이터 모델 기본 용어<ul><li>Relation 릴레이션<ul><li>하나의 개체에 관한 데이터를 2차원 테이블 구조로 저장한 것</li><li>파일 관리 시스템 관점에서 파일에 대응</li></ul></li><li>Attribute 속성<ul><li>릴레이션의 열</li><li>파일 관리 시스템 관점에서 필드에 대응</li></ul></li><li>Tuple 튜플<ul><li>릴레이션의 행</li><li>파일 관리 시스템 관점에서 레코드에 대응</li></ul></li><li>Domain 도메인<ul><li>하나의 속성이 가질 수 있는 모든 값의 집합</li><li>속성 값을 입력 및 수정 할 때 적합성 판단의 기준이 됨</li><li>일반적으로 속성의 특성을 고려한 데이터 타입으로 정의</li></ul></li><li>Null 널<ul><li>속성 값을 아직 모르거나 해당되는 값이 없음을 표현</li></ul></li><li>Degree 차수<ul><li>하나의 릴레이션에서 속성의 전체 개수</li></ul></li><li>Cardinality 카디널리티<ul><li>하나의 릴레이션에서 튜플의 전체 개수</li></ul></li></ul></li></ul><h3 id="18-관계대수-중-순수-관계연산자"><a class="markdownIt-Anchor" href="#18-관계대수-중-순수-관계연산자"></a> 18. 관계대수 중 순수 관계연산자</h3><p><img src="https://hyeonukdev.github.io/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_07.png" alt="순수 관계 연산자" /></p><h3 id="19-정규화-과정중-1nf-2nf가-되기-위한-조건"><a class="markdownIt-Anchor" href="#19-정규화-과정중-1nf-2nf가-되기-위한-조건"></a> 19. 정규화 과정중 1NF -&gt; 2NF가 되기 위한 조건</h3><ul><li>1NF를 만족하고 키가 아닌 모든 속성이 기본키에 <u>완전 함수적 종속</u>되어야 한다</li></ul><h3 id="20-한-릴레이션-내의-속성들의-집합으로-구성된-키로서-릴레이션을-구성하는-모든-튜플에-대한-유일성은-만족시키지만-최소성은-만족시키지-못하는-것은"><a class="markdownIt-Anchor" href="#20-한-릴레이션-내의-속성들의-집합으로-구성된-키로서-릴레이션을-구성하는-모든-튜플에-대한-유일성은-만족시키지만-최소성은-만족시키지-못하는-것은"></a> 20. 한 릴레이션 내의 속성들의 집합으로 구성된 키로서, 릴레이션을 구성하는 모든 튜플에 대한 유일성은 만족시키지만 최소성은 만족시키지 못하는 것은</h3><ul><li>슈퍼키</li></ul><h3 id="21-논리-데이터-모델을-물리-데이터-모델로-변환하는-설명"><a class="markdownIt-Anchor" href="#21-논리-데이터-모델을-물리-데이터-모델로-변환하는-설명"></a> 21. 논리 데이터 모델을 물리 데이터 모델로 변환하는 설명</h3><ul><li>엔티티 -&gt; 테이블</li><li>속성 -&gt; 칼럼</li><li>UID -&gt; Primary Key</li><li>관계 -&gt; 외래키</li></ul><h3 id="22-데이터-전환-검증에-사용되는-검증-방법"><a class="markdownIt-Anchor" href="#22-데이터-전환-검증에-사용되는-검증-방법"></a> 22. 데이터 전환 검증에 사용되는 검증 방법</h3><ul><li>로그 검증</li><li>기본 항목 검증</li><li>응용 프로그램 검증</li><li>값 검증</li></ul><h3 id="23-프레임워크-특성"><a class="markdownIt-Anchor" href="#23-프레임워크-특성"></a> 23. 프레임워크 특성</h3><ul><li>재사용성</li><li>확장성</li><li>모듈화</li><li>제어의 역흐름</li><li><u>캡슐화를 통해 모듈화를 강화시킬 수 있지만 특성은 아님</u></li></ul><h3 id="24-전위식-후위식"><a class="markdownIt-Anchor" href="#24-전위식-후위식"></a> 24. 전위식 -&gt; 후위식</h3><ul><li>/ * A - B C D E</li></ul><ul><li>답<ul><li>A B C - * D / E +</li></ul></li></ul><h3 id="25-객체지향-개념에서-이미-정의도어-있는-상위-클래스의-메소드를-비롯한-모든-속성을-하위-클래스가-물려-받는-것을-무엇이라고-하는가"><a class="markdownIt-Anchor" href="#25-객체지향-개념에서-이미-정의도어-있는-상위-클래스의-메소드를-비롯한-모든-속성을-하위-클래스가-물려-받는-것을-무엇이라고-하는가"></a> 25. 객체지향 개념에서 이미 정의도어 있는 상위 클래스의 메소드를 비롯한 모든 속성을 하위 클래스가 물려 받는 것을 무엇이라고 하는가?</h3><ul><li><p>Inheritance : 상속성</p></li><li><p>Encapsulation : 캡슐화 : 데이터와 함수를 하나로 묶는것, 재사용을 위해</p></li><li><p>Abstraction : 추상화 : 공통 성질을 추출하여 슈퍼클래스를 설정하는 것</p></li></ul><h3 id="26-c언어-서식-문자열"><a class="markdownIt-Anchor" href="#26-c언어-서식-문자열"></a> 26. c언어 서식 문자열</h3><ul><li>진수 입출력 지정<ul><li>%d 10진수</li><li>%o 8진수</li><li>%x 1진수</li></ul></li><li>소수점<ul><li>%f</li></ul></li><li>지수<ul><li>%e</li></ul></li></ul><h3 id="27-3개의-페이지-프레임을-가진-기억장치에서-페이지-요청을-다음과-같이-2-3-2-1-5-2-4-5-3-2-5-2-페이지-번호-순으로-요청했을-때-교체-알고리즘으로-fifo-방법을-사용한다면-몇-번의-페이지-부재가-발생하는가"><a class="markdownIt-Anchor" href="#27-3개의-페이지-프레임을-가진-기억장치에서-페이지-요청을-다음과-같이-2-3-2-1-5-2-4-5-3-2-5-2-페이지-번호-순으로-요청했을-때-교체-알고리즘으로-fifo-방법을-사용한다면-몇-번의-페이지-부재가-발생하는가"></a> 27. 3개의 페이지 프레임을 가진 기억장치에서 페이지 요청을 다음과 같이 (2, 3, 2, 1, 5, 2, 4, 5, 3, 2, 5, 2) 페이지 번호 순으로 요청했을 때 교체 알고리즘으로 FIFO 방법을 사용한다면 몇 번의 페이지 부재가 발생하는가?</h3><ul><li>FIFO : 가장 먼저 들어와서 가장 오래 있었던 페이지 교채</li><li>3개의 페이지 프레임</li><li>해설<ul><li>3개의 프레임에 (2, 3, 2) 들어가면서 결함 3회</li><li>1이 오면서 처음 2가 나가면서 결함 총4회 (3, 2, 1)</li><li>5가 오면서 처음 3이 나가면서 결합 총 5회 (2, 1, 5)</li><li>2가 들어오면서 그대로</li><li>4가 들어오면서 처음 2가 나가면서 결함 총 6회 (1, 5, 4)</li><li>5가 들어오면서 그대로</li><li>3이 들어오면서 처음 1이 나가면서 결함 총 7회 (5, 4, 3)</li><li>2가 들어오면서 처음 5가 나가면서 결함 총 8회 (4, 3, 2)</li><li>5가 들어오면서 처음 4가 나가면서 결함 총 9회 (3, 2, 5)</li><li>2가 들어오면서 대로</li></ul></li><li>답<ul><li>9회</li></ul></li></ul><h3 id="28-비선점-스케쥴링에-해당하지-않는-것"><a class="markdownIt-Anchor" href="#28-비선점-스케쥴링에-해당하지-않는-것"></a> 28. 비선점 스케쥴링에 해당하지 않는 것</h3><ul><li>이미 할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 스케쥴링 기법</li><li>FIFO</li><li>SJF</li><li>HRN</li><li>Priority</li><li>기한부<br /><img src="https://hyeonukdev.github.io/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0505_01.png" alt="프로세스 스케줄링" /></li></ul><h3 id="29-두-개의-lan이-데이터-링크-계층에-서로-결합되어-있는-경우-이들을-연결하는-장비는"><a class="markdownIt-Anchor" href="#29-두-개의-lan이-데이터-링크-계층에-서로-결합되어-있는-경우-이들을-연결하는-장비는"></a> 29. 두 개의 LAN이 데이터 링크 계층에 서로 결합되어 있는 경우 이들을 연결하는 장비는?</h3><ul><li>브리지</li><li>물리계층<ul><li>허브</li></ul></li><li>네트워크계층<ul><li>라우터</li></ul></li><li>전송계층 - 게이트웨이<br /><img src="https://baekjungho.github.io/images/posts/201904/osi.jpg" alt="OSI 7계층" /></li></ul><h3 id="30-tcpip에서-사용되는-논리주소를-물리주소로-변환시켜-주는-프로토콜은"><a class="markdownIt-Anchor" href="#30-tcpip에서-사용되는-논리주소를-물리주소로-변환시켜-주는-프로토콜은"></a> 30. TCP/IP에서 사용되는 논리주소를 물리주소로 변환시켜 주는 프로토콜은?</h3><ul><li>ARP</li></ul><h3 id="31-네트워크-토폴리지"><a class="markdownIt-Anchor" href="#31-네트워크-토폴리지"></a> 31. 네트워크 토폴리지</h3><p><img src="https://upload.wikimedia.org/wikipedia/commons/9/96/NetworkTopologies.png" alt="네트워크 토폴리지" /></p><h3 id="32-보안-요소-중-시스템의-정보는-오직-인가된-사용자만-수정할-수-있는-것은"><a class="markdownIt-Anchor" href="#32-보안-요소-중-시스템의-정보는-오직-인가된-사용자만-수정할-수-있는-것은"></a> 32. 보안 요소 중 시스템의 정보는 오직 인가된 사용자만 수정할 수 있는 것은?</h3><ul><li>무결성</li></ul><h3 id="33-secure-sdlc의-구현-단계에-대한-설명"><a class="markdownIt-Anchor" href="#33-secure-sdlc의-구현-단계에-대한-설명"></a> 33. Secure SDLC의 구현 단계에 대한 설명</h3><ul><li>보안 요구사항들을 구현하는 단계</li><li>설계 단계에서 작성한 보안 설계서에 따라 소프트웨어를 구현</li><li>지속적인 점검 및 진단작업으로 코드의 안정성을 확보</li><li><u>동적 분석도구의 사용 또는 모의 침투테스트를 통해 보안 위협들의 해결 여부를 검증하는 것은 테스트 단계에 해당</u></li></ul><h3 id="34-sw개발-보안-설계에서-입력데이터-검증-및-표현의-보안-약점에-해당"><a class="markdownIt-Anchor" href="#34-sw개발-보안-설계에서-입력데이터-검증-및-표현의-보안-약점에-해당"></a> 34. SW개발 보안 설계에서 입력데이터 검증 및 표현의 보안 약점에 해당</h3><ul><li>SQL 삽입</li><li>XSS</li></ul><h3 id="35-공개키-암호화에-대한-설명"><a class="markdownIt-Anchor" href="#35-공개키-암호화에-대한-설명"></a> 35. 공개키 암호화에 대한 설명</h3><ul><li>암호화키는 사용자에게 공개하고 복호화키는 비밀리에 관리</li><li>대표적 알고리즘 RSA, DSA</li><li>알고리즘이 복잡하고 파일의 크기가 비교적 크다</li><li>속도가 느리다</li></ul><h3 id="36-패킷의-크기가-커서-여러-개로-분할되어-전송될-때-분할-순서를-알-수-있도록-fragment-offset-값을-함께-전송하는데-이-offset-값을-변경하여-수신-측에서-패킷을-재조립할-때-오류로-인한-과부하를-발생시켜-시스템이-다운되게-하는-공격법은"><a class="markdownIt-Anchor" href="#36-패킷의-크기가-커서-여러-개로-분할되어-전송될-때-분할-순서를-알-수-있도록-fragment-offset-값을-함께-전송하는데-이-offset-값을-변경하여-수신-측에서-패킷을-재조립할-때-오류로-인한-과부하를-발생시켜-시스템이-다운되게-하는-공격법은"></a> 36. 패킷의 크기가 커서 여러 개로 분할되어 전송될 때 분할 순서를 알 수 있도록 Fragment Offset 값을 함께 전송하는데 이 Offset 값을 변경하여 수신 측에서 패킷을 재조립할 때 오류로 인한 과부하를 발생시켜 시스템이 다운되게 하는 공격법은?</h3><ul><li>TearDrop</li></ul><h3 id="37-방화벽만으로는-내부-사용자의-불법적인-행동과-외부-해킹에-완벽하게-대처할-수-없다-문제가-발생한-경우-모든-내외부-정보의-흐름을-실시간으로-차단하기-위해-해커-침입-패턴에-대한-추적과-유해정보감시와-관련된-보안솔루션은"><a class="markdownIt-Anchor" href="#37-방화벽만으로는-내부-사용자의-불법적인-행동과-외부-해킹에-완벽하게-대처할-수-없다-문제가-발생한-경우-모든-내외부-정보의-흐름을-실시간으로-차단하기-위해-해커-침입-패턴에-대한-추적과-유해정보감시와-관련된-보안솔루션은"></a> 37. 방화벽만으로는 내부 사용자의 불법적인 행동과 외부 해킹에 완벽하게 대처할 수 없다. 문제가 발생한 경우 모든 내외부 정보의 흐름을 실시간으로 차단하기 위해 해커 침입 패턴에 대한 추적과 유해정보감시와 관련된 보안솔루션은?</h3><ul><li>IDS; 침입 탐지 시스템</li><li><a href="https://hyeonukdev.github.io/2020/04/26/Engineer_Information_Processing/ch21_%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EA%B5%AC%EC%B6%95/%EC%8B%9C%EC%8A%A4%ED%85%9C%EB%B3%B4%EC%95%88%EA%B5%AC%ED%98%84/%EB%B3%B4%EC%95%88%EC%86%94%EB%A3%A8%EC%85%98/">보안솔루션종류</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-프로토타이핑의-장점&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-프로토타이핑의-장점&quot;&gt;&lt;/a&gt; 1. 프로토타이핑의 장점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;잘못된 요구사항을 사전에 도출하여 향후 발생될 자원의 낭비를 제
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="오답노트" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="오답노트" scheme="https://hyeonukdev.github.io/tags/%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/30/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/30/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-30T08:23:13.000Z</published>
    <updated>2020-05-30T08:23:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="1-데이터-조작-프로시저-성능-개선"><a class="markdownIt-Anchor" href="#1-데이터-조작-프로시저-성능-개선"></a> 1. 데이터 조작 프로시저 성능 개선</h3><ul><li>성능 개선 및 자원의 효율적인 사용을 위해 성능 분석 필요</li><li>성능 분석 도구<ul><li>리소스 및 성능 모니터링 : APM</li><li>SQL 성능 측정 : TKPROF, EXPLAIN PLAN</li></ul></li><li>모니터링 결과 문제시 되는 내용 확인시 SQL 성능 개선 순서</li></ul><ol><li>문제있는 SQL 식별</li><li>옵티마이저 통계 확인</li><li>실행 계획 검토</li><li>SQL문을 재구성하거나 인덱스 재구성</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;1-데이터-조작-프로시저-성능-개선&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 소스코드 인스펙션</title>
    <link href="https://hyeonukdev.github.io/2020/05/30/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C%EC%9D%B8%EC%8A%A4%ED%8E%99%EC%85%98/"/>
    <id>https://hyeonukdev.github.io/2020/05/30/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C%EC%9D%B8%EC%8A%A4%ED%8E%99%EC%85%98/</id>
    <published>2020-05-30T08:20:09.000Z</published>
    <updated>2020-05-30T08:20:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="소스코드-인스펙션의-개념"><a class="markdownIt-Anchor" href="#소스코드-인스펙션의-개념"></a> 소스코드 인스펙션의 개념</h3><ul><li>데이터 조작 프로시저에서 소스코드 인스펙션은 데이터베이스 성능 향상을 위하여 프로시저 코드를 보면서 성능 문제점을 개선해 나가는 활동</li></ul><h3 id="sqlplus에서-stored-procedure-소스-확인"><a class="markdownIt-Anchor" href="#sqlplus에서-stored-procedure-소스-확인"></a> SQL*Plus에서 Stored Procedure 소스 확인</h3><ol><li>USER_SOURCE 데이터 사전을 활용</li><li>프로시저 소스 확인</li></ol><h3 id="sql-코드-인스펙션-대상"><a class="markdownIt-Anchor" href="#sql-코드-인스펙션-대상"></a> SQL 코드 인스펙션 대상</h3><ul><li>사용되지 않는 변수</li><li>사용되지 않는 서브쿼리</li><li>Null 값과 비교</li><li>과거의 데이터타입을 사용</li></ul><h3 id="sql-코드-인스펙션-절차"><a class="markdownIt-Anchor" href="#sql-코드-인스펙션-절차"></a> SQL 코드 인스펙션 절차</h3><ol><li>계획</li><li>개관</li><li>준비</li><li>검사</li><li>재작업</li><li>추적</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;소스코드-인스펙션의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="소스코드인스펙션" scheme="https://hyeonukdev.github.io/tags/%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C%EC%9D%B8%EC%8A%A4%ED%8E%99%EC%85%98/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 데이터 조작 프로시저 최적화</title>
    <link href="https://hyeonukdev.github.io/2020/05/30/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/30/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%84%B1%EB%8A%A5%EA%B0%9C%EC%84%A0/</id>
    <published>2020-05-30T06:53:53.000Z</published>
    <updated>2020-05-30T06:53:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><ul><li>프로그래밍 언어와 도구에 대한 이해를 바탕으로 응용소프트웨어 설계, 물리 데이터 저장소 설계와 운영 환경을 고려하여 <u>데이터 조작 프로시저의 성능</u>을 예측</li><li>업무 분석가에 의해 정의된 요구사항을 기준으로, 성능 측정 도구를 활용하여 <u>데이터 조작 프로시저의 성능을 측정</u></li><li>실 데이터를 기반으로 테스트를 수행하여 <u>데이터 조작 프로시저의 성능에 영향을 주는 병목을 파악</u></li></ul><h3 id="apm-application-performance-management-의-개념"><a class="markdownIt-Anchor" href="#apm-application-performance-management-의-개념"></a> APM; Application Performance Management 의 개념</h3><ul><li>애플리케이션 성능 관리</li><li>시스템의 안정적인 운영을 위한 부하량과 접속자 파악 및 장애 진단 등을 목적으로 하는 성능 모니터링<ul><li>Resource 모니터링<ul><li>대상<ul><li>CPU</li><li>메모리</li><li>네트워크</li><li>디스크</li></ul></li><li>오픈소스<ul><li>Nagios</li><li>Zabbix</li><li>Cacti</li></ul></li></ul></li><li>End to End 모니터링<ul><li>대상<ul><li>애플리케이션 수행 관점</li><li>비즈니스 트랜잭션 관리 및 최종 사용자</li></ul></li><li>오픈소스<ul><li>VisualVM</li></ul></li><li>제품<ul><li>제니퍼</li><li>파로스</li><li>시스마스터</li></ul></li></ul></li></ul></li></ul><h3 id="sql-처리-흐름도"><a class="markdownIt-Anchor" href="#sql-처리-흐름도"></a> SQL 처리 흐름도</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0530_05.png" alt="SQL 처리 흐름도" /></p><ol><li>구문분석 단계<ul><li>SQL문장 사용여부 확인</li><li>기 사용된 경우 : 구문 분석 작업 수행 불필요</li><li>처음 사용된 경우 : 구문 분석 작업 필요</li><li>문법 확인 : 정상적으로 작성된지 확인</li><li>오브젝트 확인 : 테이블, 뷰 등이 데이터베이스에 존재하는지 확인</li><li>실행계획 확인 : 옵티마이저는 sql문을 가장 빠르게 데이터를 검색해줄 수 있는 실행 계획을 찾음</li></ul></li><li>실행 단계<ul><li>캐시 영역 확인 : 구문 분석이 정상적으로 실행된 후 서버 프로세스가 메모리 영역의 데이터 버퍼 캐시 영역을 검색</li><li>해당 테이블의 데이터가 다른 사용자의 다른 SQL문에 의해 이미 <u>데이터 버퍼 캐시 영역에 존재하는 지 검색</u><ul><li><u>데이터 버퍼 캐시에 존재하는 경우</u> : 테이블의 해당 데이터 파일로부터 테이블을 읽지 않고 캐시 영역의 데이터를 그대로 추출</li><li><u>존재하지 않을 경우</u> : 정의된 테이블의 해당 데이터 파일로 부터 테이블을 읽어서 데이터 버퍼 캐시 영역에 저장</li></ul></li><li><u>SQL 문이 UPDATE, DELETE, INSERT 문의 경우</u> : 데이터 버퍼 캐시 영역에서 새로운 데이터로 변경, 삭제 또는 입력</li></ul></li><li>추출 단계<ul><li>사용자 요청 대응 : 실행 단계가 끝난 후 서버 프로세스가 데이터 버퍼 캐시 영역에서 관련 테이블 데이터를 읽어 사용자가 요청한 클라이언트로 보냄</li><li>SELECT문을 실행하는 경우에만 추출 단계 실행됨</li></ul></li></ol><h3 id="sql-작성시-고려사항"><a class="markdownIt-Anchor" href="#sql-작성시-고려사항"></a> SQL 작성시 고려사항</h3><ul><li>개발자는 SQL문을 적절히 구사할 수 있는 능력이 기본적으로 있어야함</li><li>사용자가 SQL 작성시, 옵티마이저가 실행계획을 수립한 후 실행되는 일련의 과정을 이해하고 작성하여야 함</li><li>구문 분석 단계시 옵티마이저가 수립한 실행계획에 따라 엄청난 <u>수행속도 차이가 발생할 수 있음을 이해</u></li><li>특정 SQL이 실행될 때 옵티마이저에 의해 수립된 실행계획은 제어하기 어렵지만, 옵티마이저가 비정상적으로 동작된다면, 이를 추적하여 개발자가 원하는 실행계획으로 동작될 수 있도록 조정 필요</li><li><u>종합적이고 전략적인 포인트를 SQL에 부여하여 작성하여야 함</u></li></ul><h3 id="sql-성능-최적화-유틸리티-종류"><a class="markdownIt-Anchor" href="#sql-성능-최적화-유틸리티-종류"></a> SQL 성능 최적화 유틸리티 종류</h3><ul><li>TKPROF 도구<ul><li>SQL문이 적절히 작성되지 않아 전반적인 처리 효율성이 떨어질 경우 <u>처리 성능의 통계치 정보 파악</u></li></ul></li><li>EXPLAIN PLAN 도구<ul><li>SQL이 사용하는 <u>엑세스 경로</u>를 파악하기 위해 사용</li></ul></li></ul><h3 id="sql-성능-개선-순서"><a class="markdownIt-Anchor" href="#sql-성능-개선-순서"></a> SQL 성능 개선 순서</h3><ol><li>문제있는 SQL 식별</li><li>옵티마이저 통계 확인</li><li>실행 계획 검토</li><li>SQL 문 재구성</li><li>인덱스 재구성</li><li>실행 계획 유지 관리</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로그래밍 언어와 도구에 대한 이해를 바탕으로 응용소프트웨어 설계, 물리 데이터 저장소
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터조작프로시저최적화" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%B5%9C%EC%A0%81%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>정규분포의 이해 및 활용</title>
    <link href="https://hyeonukdev.github.io/2020/05/30/DataScience/%EC%A0%95%EA%B7%9C%EB%B6%84%ED%8F%AC%EC%9D%98%EC%9D%B4%ED%95%B4%EB%B0%8F%ED%99%9C%EC%9A%A9/"/>
    <id>https://hyeonukdev.github.io/2020/05/30/DataScience/%EC%A0%95%EA%B7%9C%EB%B6%84%ED%8F%AC%EC%9D%98%EC%9D%B4%ED%95%B4%EB%B0%8F%ED%99%9C%EC%9A%A9/</id>
    <published>2020-05-30T05:33:36.000Z</published>
    <updated>2020-05-30T05:33:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="정규분포의-예시"><a class="markdownIt-Anchor" href="#정규분포의-예시"></a> 정규분포의 예시</h3><p><img src="https://dimg.donga.com/wps/NEWS/IMAGE/2019/09/22/97530574.2.jpg" alt="연봉분위별 근로자 연봉하한액(`18)" /><br /><img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F254EF94D590070132B" alt="대한민국 성인 키 조사" /></p><h3 id="정규분포-normal-distribution"><a class="markdownIt-Anchor" href="#정규분포-normal-distribution"></a> 정규분포 Normal Distribution</h3><ul><li>연속확률변수에 속하고 <u>모분포, 가우스 분포</u>라 하여 이상적인 모형</li><li>평균 : <b>모집단평균</b></li><li>분산 : &lt;b선모집단분산</b></li><li>평균과 표준편차에 의해 정의되고 결정되는 대칭 곡선<br /><img src="/images/datascience/0530_01.png" alt="정규분포 수식" /></li><li>평균 = 중앙값 = 최반값</li><li>분포의 곡선 면적은 1.00</li><li>평균에 대해서 대칭형태</li><li>확률 값은 중앙값에 양 극단으로 갈수록 0에 가까워짐(무한대)</li><li>평균값에 의해 결정되고, 분포는 표준편차에 의해 결정<br /><img src="/images/datascience/0530_02.png" alt="정규분포 표" /></li></ul><h3 id="표준정규분포-z-분포"><a class="markdownIt-Anchor" href="#표준정규분포-z-분포"></a> 표준정규분포 : z-분포</h3><ul><li><b>평균=0, 표준편차=1</b> 인 정규분포를 표준정규분포라고 함<br /><img src="/images/datascience/0530_03.png" alt="표준정규확률분포(z값)" /><br /><img src="/images/datascience/0530_04.png" alt="표준정규분포에서 관측값이 존재할 확률" /></li><li>표준정규확률분포(z값)<ul><li>확률분포표는 양수 z의 값에 대해서 표준정규분포가 0~z사이에 있을 확률(면적)을 기록한 것</li><li>음영표시 확률 (47.5%)는 z값 1.9와 0.06을 합쳐 1.96이며, 절대값 1.96 바깥에 있는 부분의 확률은 2*0.025=0.05 , 즉 5%</li><li>이는 표준편차 1.96배 바깥의 범위의 확률이 5%라는 의미<br /><img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F2114073C56D6A78F30" alt="확률분포표" /></li></ul></li></ul><h3 id="중심극한정리-central-limit-theorem"><a class="markdownIt-Anchor" href="#중심극한정리-central-limit-theorem"></a> 중심극한정리 central limit theorem</h3><ul><li>정규분포를 이루는 모집단에서 추출한 표본집단의 평균과 표본분포는 정규분포를 갖음</li><li>모집단이 정규분포가 아니라도 표본의 크기가 증가함에 따라 모집단에 관계없이 표본집단 평균은 정규분포에 가까워지는데 이를 <b>중심극한정리</b>라 함</li><li>대상자가 30명 이상 일 때, 모집단에 상관없이 표본집단은 정규분포를 이룬다고 하고, 대상자수가 많을수록 정규성에 가까워짐</li></ul><h3 id="문제풀기-1"><a class="markdownIt-Anchor" href="#문제풀기-1"></a> 문제풀기 1</h3><p>문) 전문뉴스 라디오채널 A방송 청취자의 평균 청취시간 분포가 정규분포를 따른다고 가정할 때, 이 분포의 평균은 15.0분, 표준편차는 3.5분이다.<br />각 구간별 청취시간을 나타낼 확률을 구하시오</p><ol><li>20분 이상</li><li>20분 이하</li><li>10분과 12분 사이</li><li>25분 이상</li></ol><hr /><ul><li>Tip : NORM.DIST(x,y,z, True) 활용</li></ul><ol><li>20분 이상</li></ol><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">norm.dist</span>(<span class="number">20</span>, <span class="number">15.0</span>, <span class="number">3.5</span>, <span class="built_in">true</span>)</span><br><span class="line">/// <span class="number">0.9234</span></span><br></pre></td></tr></table></figure><p>20분 이상 청취할 확률은 1.0 - 0.9234 = 0.0766 -&gt; 7.6%</p><h3 id="문제풀기-2"><a class="markdownIt-Anchor" href="#문제풀기-2"></a> 문제풀기 2</h3><p>문) 우리집 막내A 는 중학교 2학년에 재학중이다. 이번 중간고사 시험결과가 학교로부터 우편으로 배달되었다. 시험결과 안내는 A의 등수가 아니라 표로 제시되었다.</p><table><thead><tr><th>A의평균점수</th><th>2학년 평균점수</th><th>2학년 표준펹차</th><th>2학년 학생 수</th></tr></thead><tbody><tr><td>81.5</td><td>78.6</td><td>16.4</td><td>347</td></tr></tbody></table><ul><li>2학년 전체의 시험성적이 정규분포를 나타낼때 A의 등수는?</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;정규분포의-예시&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#정규분포의-예시&quot;&gt;&lt;/a&gt; 정규분포의 예시&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://dimg.donga.com/wps/NEWS/IMAGE/2019/0
      
    
    </summary>
    
    
      <category term="데이터사이언스" scheme="https://hyeonukdev.github.io/categories/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%82%AC%EC%9D%B4%EC%96%B8%EC%8A%A4/"/>
    
      <category term="데이터분석" scheme="https://hyeonukdev.github.io/categories/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%82%AC%EC%9D%B4%EC%96%B8%EC%8A%A4/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D/"/>
    
    
      <category term="데이터분석 - 정규분포" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D-%EC%A0%95%EA%B7%9C%EB%B6%84%ED%8F%AC/"/>
    
  </entry>
  
  <entry>
    <title>엑셀을 활용한 통계 기초</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/DataScience/%EC%97%91%EC%85%80%EC%9D%84%ED%99%9C%EC%9A%A9%ED%95%9C%ED%86%B5%EA%B3%84%EA%B8%B0%EC%B4%88/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/DataScience/%EC%97%91%EC%85%80%EC%9D%84%ED%99%9C%EC%9A%A9%ED%95%9C%ED%86%B5%EA%B3%84%EA%B8%B0%EC%B4%88/</id>
    <published>2020-05-29T13:33:55.000Z</published>
    <updated>2020-05-29T13:33:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="변수의-종류"><a class="markdownIt-Anchor" href="#변수의-종류"></a> 변수의 종류</h2><h3 id="척도에-따른-분류"><a class="markdownIt-Anchor" href="#척도에-따른-분류"></a> 척도에 따른 분류</h3><ul><li>척도 : 입력자료를 수치적으로 측정하는 단위</li><li>명목 척도 : 성별, 직업, 지역 -&gt; 순서와 무관, 수학적 계산 불가</li><li>순서 척도 : 대소, 다과 등 서열적 자료 -&gt; 순서상 상대적 위치 표현</li><li>등간 척도 : 온도, 만족도 -&gt; 수학적 연산 가능</li><li>비율 척도 : 매출액, 가격 -&gt; 절대적 원점 존재, 수학적 연산 가능<br /><img src="/images/datascience/0529_05.png" alt="데이터종류" /></li></ul><h3 id="인과관계예-따른-분류"><a class="markdownIt-Anchor" href="#인과관계예-따른-분류"></a> 인과관계예 따른 분류</h3><ul><li>독립변수(설명변수)<ul><li>다른 변수에 영향을 <u>주는</u> 변수</li><li><b>원인</b>에 해당</li></ul></li><li>종속변수(반응변수)<ul><li>다른 변수에 영향을 <u>받는</u> 변수</li><li><b>결과</b>에 해당<br /><img src="/images/datascience/0529_06.png" alt="독립변수 종속변수 예" /></li></ul></li></ul><h3 id="자료형식에-따른-분류"><a class="markdownIt-Anchor" href="#자료형식에-따른-분류"></a> 자료형식에 따른 분류</h3><ul><li>숫자변수<ul><li>숫자로 처리되는 변수</li></ul></li><li>문자변수<ul><li>문자열로 처리되는 변수</li></ul></li><li>날씨변수<ul><li>날짜 표기형식으로 처리되는 변수</li></ul></li></ul><h3 id="기술통계와-추론통계"><a class="markdownIt-Anchor" href="#기술통계와-추론통계"></a> 기술통계와 추론통계</h3><ul><li>기술통계<ul><li>측정이나 실험으로 수집한 자료의 정리, 표현, 요약, 해석 등을 통해 자료의 특성과 변수 간의 관계를 분석하는 통계적 방법</li><li>도수분포, 백분율, 평균, 표준편차 등 분석 포함</li></ul></li><li>추론통계<ul><li>표본정보를 가지고 그 모집단의 특성 및 가능성 등을 추론해내는 통계적 방법</li><li>표본통계량을 이용하여 모수를 추론</li><li>추론과정에서 모집단의 분포가 정규분포이면 모수검정 실시</li><li>모집단이 정규분포를 가정하지 못하면 비모수검정 실시<br /><img src="/images/datascience/0529_07.png" alt="변수에 따른 분석모형" /></li></ul></li></ul><h2 id="범주형-데이터-기초분석"><a class="markdownIt-Anchor" href="#범주형-데이터-기초분석"></a> 범주형 데이터 기초분석</h2><ul><li>빈도분석<ul><li>실행메뉴<ul><li>분석 -&gt; 기술통계량 -&gt; 빈도분석</li></ul></li><li>분석할 변수의 빈도, 퍼센트, 무응답을 제외한 유효퍼센트, 누적퍼센트 등이 분석</li></ul></li><li>통계량<ul><li>수학적 분석결과 표시</li><li>백분위수</li><li>산포도</li><li>중심경향</li><li>분포</li></ul></li><li>도표<ul><li>범주형 변수<ul><li>막대도표</li><li>원도표</li></ul></li><li>정량적 변수<ul><li>히스토그램</li><li>steam&amp;leaf</li><li>Box-plot</li></ul></li></ul></li></ul><h2 id="연속형-데이터-기초-분석"><a class="markdownIt-Anchor" href="#연속형-데이터-기초-분석"></a> 연속형 데이터 기초 분석</h2><h3 id="기술-통계값"><a class="markdownIt-Anchor" href="#기술-통계값"></a> 기술 통계값</h3><ul><li><u>주어진 데이터를 요약하며 의미 있는 몇 개의 값으로 분석</u></li><li>요약과정에서 정보의 손실에 의한 정확성이 상실되나, 대부분 요약성이 정확성보다 중요한 의미를 갖음<br /><img src="/images/datascience/0529_08.png" alt="기술통계값" /></li></ul><h4 id="평균값-mean"><a class="markdownIt-Anchor" href="#평균값-mean"></a> 평균값 mean</h4><ul><li>AVERAGE()</li><li>평균값은 어디에나 존재</li><li>자료의 모든 값을 고려</li><li>극단치에서 변동의 폭이 심함<br /><img src="/images/datascience/0529_09.png" alt="평균값" /></li></ul><h4 id="중앙값-median"><a class="markdownIt-Anchor" href="#중앙값-median"></a> 중앙값 median</h4><ul><li>MEDIAN()</li><li>중앙값은 어떤 경우에나 존재</li><li>자료의 모든 값 자체를 고려하지는 않고 몇 개의 값이 있는지만 고려</li><li>극단적인 자료에서도 크게 변하지 않음</li><li>극단치가 있다면, 평균값보다 중앙값이 더 대표성을 띔</li></ul><h4 id="최빈값-mode"><a class="markdownIt-Anchor" href="#최빈값-mode"></a> 최빈값 mode</h4><ul><li>MODE()</li><li>특히 이름으로 표현한는 명목변수나 이산변수를 기술할 때 사용</li><li>하나 이상일 수 있지만, 전혀 없을 때도 있음</li><li>모든 값을 반영하지는 않음</li></ul><h4 id="범위-range"><a class="markdownIt-Anchor" href="#범위-range"></a> 범위 range</h4><ul><li>MAX() - MIN()</li><li>연속형 변수에서 사용</li><li>변수의 최고값에서 최소값을 뺀 것</li><li>계산하기에 간편함</li><li>최고값과 최소값에 의해서 범위가 결정되므로 그 사이에 값들의 퍼진 정도는 알수 없음</li><li>극단치가 있을 때는 변동이 큼</li></ul><h4 id="분산-variance"><a class="markdownIt-Anchor" href="#분산-variance"></a> 분산 variance</h4><ul><li>모집단의 분산 VAR.P()</li><li>표본집단의 분산 VAR.S()</li><li>측정값의 편차를 제곱하여 계산</li><li>모 분산의 단위는 관측 값이 갖는 측정단위와 일치하지 않음<br /><img src="/images/datascience/0529_10.png" alt="분산" /></li></ul><h4 id="표준편차-standard-eviation"><a class="markdownIt-Anchor" href="#표준편차-standard-eviation"></a> 표준편차 standard eviation</h4><ul><li>모집단 표준편차 STDEV.P()</li><li>표본집단의 표준편차 STDEV.S()</li><li>분산의 양의 제곱근</li><li>측정값의 측정단위와 일치하기 위함</li><li>크다<ul><li>자료가 평균값을 중심으로 광범위하게 분포</li></ul></li><li>작다<ul><li>평균값을 중심으로 밀접하게 분포<br /><img src="/images/datascience/0529_11.png" alt="표준편차" /></li></ul></li></ul><h4 id="변동계수-coefficient-of-variation-cv"><a class="markdownIt-Anchor" href="#변동계수-coefficient-of-variation-cv"></a> 변동계수 coefficient of variation, CV%</h4><ul><li>변동계수는 표준편차를 평균으로 나눈 값</li><li>측정단위에 따라 표준편차의 값의 크기가 달라지므로, 단위가 다른 두 집단을 비교하는 경우, 두 표준편차의 단위를 같게 하기 위해 표준편차를 평균으로 나눈 값에 100을 곱하여 CV%로 표시(그전에는 단위가 없음)<br /><img src="/images/datascience/0529_12.png" alt="변동계수" /></li></ul><h4 id="사분위수범위-interquartile-range-iqr"><a class="markdownIt-Anchor" href="#사분위수범위-interquartile-range-iqr"></a> 사분위수범위 interquartile range : IQR</h4><ul><li>상위 25%에 해당하는 값과 하위 25%에 해당하는 값을 제외하고 범위를 구한 값</li><li>IQR는 주우이수를 중심으로 상위25%와 하위 25% 관측값의 차이를 의미<br /><img src="/images/datascience/0529_13.png" alt="사분위수범위" /></li></ul><h4 id="왜도-skewness"><a class="markdownIt-Anchor" href="#왜도-skewness"></a> 왜도 skewness</h4><ul><li>SKEW()</li><li>0SKEW.P()</li><li>분포도의 기울어진 방향과 정도를 나타내는 양</li><li>'0’에 가까울수록 정규분포와 비슷<br /><img src="/images/datascience/0529_14.png" alt="왜도" /><br /><img src="/images/datascience/0529_15.png" alt="왜도 표" /></li></ul><h4 id="첨도-kurtosis"><a class="markdownIt-Anchor" href="#첨도-kurtosis"></a> 첨도 kurtosis</h4><ul><li>KURT()</li><li>분포도의 모양이 얼마나 뾰족한 가를 나타내는 양</li><li>'0’에 가까울수록 정규분포와 비슷<br /><img src="/images/datascience/0529_16.png" alt="첨도" /><br /><img src="/images/datascience/0529_17.png" alt="첨도 표" /></li></ul><h2 id="엑셀에서-통계도구-사용하기"><a class="markdownIt-Anchor" href="#엑셀에서-통계도구-사용하기"></a> 엑셀에서 통계도구 사용하기</h2><ul><li>파일 -&gt; 옵션 -&gt; 추가기능 -&gt; 분석도구 -&gt; 이동 -&gt; 분석도구 check</li><li>데이터 탭 -&gt; 데이터분석</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;변수의-종류&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#변수의-종류&quot;&gt;&lt;/a&gt; 변수의 종류&lt;/h2&gt;
&lt;h3 id=&quot;척도에-따른-분류&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#척도에-따른-분
      
    
    </summary>
    
    
      <category term="데이터사이언스" scheme="https://hyeonukdev.github.io/categories/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%82%AC%EC%9D%B4%EC%96%B8%EC%8A%A4/"/>
    
      <category term="데이터분석" scheme="https://hyeonukdev.github.io/categories/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%82%AC%EC%9D%B4%EC%96%B8%EC%8A%A4/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D/"/>
    
    
      <category term="데이터분석 - 통계기초" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D-%ED%86%B5%EA%B3%84%EA%B8%B0%EC%B4%88/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-29T13:27:05.000Z</published>
    <updated>2020-05-29T13:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="1-데이터-조작-프로시저-개발"><a class="markdownIt-Anchor" href="#1-데이터-조작-프로시저-개발"></a> 1. 데이터 조작 프로시저 개발</h3><ul><li>SQL은 관계형 데이터베이스 관리시스템의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어로 데이터 정의어, 데이터 조작어, 데이터 제어어를 가짐</li><li>PL/SQL은 Oracle에서 개발한 데이터 조작 언어이며, 프로그래밍 언어의 특성을 수용한 SQL의 확장 기능이 우수</li><li>저장형 객체<ul><li>Trigger</li><li>Stored Function</li><li>Stored Procedure</li><li>Stored Package</li></ul></li></ul><h3 id="2-데이터-조작-프로시저-테스트"><a class="markdownIt-Anchor" href="#2-데이터-조작-프로시저-테스트"></a> 2. 데이터 조작 프로시저 테스트</h3><ul><li>Oracle DBMS는 모든 데이터 조작 프로시저에 대한 테스트 환경으로 SQL*Plus 도구를 제공</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;1-데이터-조작-프로시저-개발&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 데이터 조작 프로시저 테스트</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%ED%85%8C%EC%8A%A4%ED%8A%B8/</id>
    <published>2020-05-29T13:21:22.000Z</published>
    <updated>2020-05-29T13:21:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="sqlplus-개요"><a class="markdownIt-Anchor" href="#sqlplus-개요"></a> SQL*Plus 개요</h3><ul><li>Oracle DBMS에서 제공하는 데이터 조작 프로시저에 대한 테스트 도구<br /><img src="/imagegs/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0529_03.png" alt="SQL*Plus" /></li></ul><h3 id="sql과-sqlplus-차이점"><a class="markdownIt-Anchor" href="#sql과-sqlplus-차이점"></a> SQL과 SQL*Plus 차이점</h3><ul><li>SQL은 데이터를 조작하는 표준 언어</li><li>SQL*Plus는 이러한 SQL을 DBMS 서버에 전송하여 처리할 수 있도록하는 Oracle에서 제공하는 도구<br /><img src="/imagegs/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0529_04.png" alt="SQL과 SQL*Plus 차이점" /></li></ul><h3 id="sqlplus-명령어-유형"><a class="markdownIt-Anchor" href="#sqlplus-명령어-유형"></a> SQL*Plus 명령어 유형</h3><ul><li>파일<ul><li>SAVE</li><li>GET</li><li>SPOOL</li></ul></li><li>편집<ul><li>A</li><li>C</li><li>L</li><li>I</li><li>DEL</li><li>n</li></ul></li><li>실행<ul><li>START</li><li>@</li><li>RUN</li></ul></li><li>환경<ul><li>SET HEAD ON</li></ul></li><li>형식<ul><li>COLUMN</li><li>TITITLE</li><li>BTITLE</li><li>BREAK</li></ul></li><li>대화<ul><li>DEFINE</li><li>PROMPT</li><li>ACCEPT</li></ul></li></ul><h3 id="dbms_output-패키지-활용"><a class="markdownIt-Anchor" href="#dbms_output-패키지-활용"></a> DBMS_OUTPUT 패키지 활용</h3><ul><li>메시지를 버퍼에 저장하고 버퍼로 부터 메시지를 읽어오기 위한 인터페이스를 제공하는 패키지</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;sqlplus-개요&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#s
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터조작프로시저테스트" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 데이터 조작 프로시저 작성</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EA%B0%9C%EB%B0%9C/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EA%B0%9C%EB%B0%9C/</id>
    <published>2020-05-29T12:27:21.000Z</published>
    <updated>2020-05-29T12:27:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><ul><li>응용소프트웨어 설계와 물리 데이터저장소 설계에 따라 <u>데이터 저장소에 연결을 수행하는 프로시저를 작성</u></li><li>데이터 저장소로부터 데이터를 읽어오는 프로시저 작성</li><li>데이터 변경 내용 또는 신규 입력된 데이터를 데이터 저장소에 저장하는 프로시저를 작성</li><li>구현된 데이터 조작 프로시저를 테스트할 수 있는 테스트 케이스를 작성하고 단위 테스트를 수행하기 위한 테스트 조건을 명세화</li></ul><h3 id="sql-structured-query-language-개념"><a class="markdownIt-Anchor" href="#sql-structured-query-language-개념"></a> SQL; Structured Query Language 개념</h3><ul><li>데이터 조작을 위해서 사용하는 특수 목적의 프로그래밍 언어</li><li>일정힌 데이터 집합으로부터 보다 쉽게 자료를 검색하고 입력, 수정, 삭제와 같은 조작을 할 수 있도록 고안된 언어</li></ul><h3 id="sql-분류"><a class="markdownIt-Anchor" href="#sql-분류"></a> SQL 분류</h3><h4 id="1-ddl-data-definition-language-데이터-정의어"><a class="markdownIt-Anchor" href="#1-ddl-data-definition-language-데이터-정의어"></a> 1. DDL; Data Definition Language 데이터 정의어</h4><ul><li>데이터를 저장하는 테이블 등의 구조를 생성, 변경하기 위해 사용하는 명령어들</li><li>명령어 수행이 되면 이전 상태로 복귀할 수 없으므로 신중히 사용</li><li>명령어<ul><li>CREATE : 오브젝트 생성</li><li>DROP : 오브젝트 삭제</li><li>RENAME : 이름변경</li><li>ALTER : 구조 변경</li><li>TRUNCATE : 자름</li></ul></li></ul><h4 id="2-dml-data-manipulation-language-데이터-조작어"><a class="markdownIt-Anchor" href="#2-dml-data-manipulation-language-데이터-조작어"></a> 2. DML; DATA Manipulation Language 데이터 조작어</h4><ul><li>데이터베이스에 있는 데이터를 변경하거나 검색하기 위해 사용하는 명령어</li><li>트랜잭션 제어어를 활용하여 실행전 상태로 복귀 가능한 명령어</li><li>명령어<ul><li>INSERT : 데이터 입력</li><li>UPDATE : 수정</li><li>DELETE : 삭제</li></ul></li></ul><h4 id="3-dcl-data-control-language-데이터-제어어"><a class="markdownIt-Anchor" href="#3-dcl-data-control-language-데이터-제어어"></a> 3. DCL; Data Control Language 데이터 제어어</h4><ul><li>사용자별로 데이터베이스에 접근할 수 있는 권한을 부여하거나 회수하는 명령어들</li><li>명령어<ul><li>ROLE : 권한부여</li><li>GRANT : 권한 및 롤 부여</li><li>REVOKE : 권한 및 롤 부여</li><li>COMMIT, ROLBACK : 트랜잭션 제어어</li></ul></li></ul><h4 id="트랜잭션-제어어"><a class="markdownIt-Anchor" href="#트랜잭션-제어어"></a> 트랜잭션 제어어</h4><ol><li>COMMIT<ul><li><u>트랜잭션을 완료하여 데이터 변경 사항을 최종 반영</u></li><li>COMMIT 이후에는 데이터에 대한 변경 사항이 물리적인 디스크에 반영</li><li>COMMIT 이전 데이터는 복구할 수 없음</li><li>모든 사용자가 변경된 결과를 볼 수 있음</li></ul></li><li>ROLLBACK<ul><li><u>데이터 변경 사항을 이전 상태로 되돌림</u></li><li>ROLLBACK 된 DML 문장은 메모리 상의 버퍼에만 영향을 미치기 때문에 복구 가능</li></ul></li><li>SAVEPOINT<ul><li><u>지정된 특정 시점까지 ROLLBACK 할 수 있는 명령어</u></li></ul></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 테이블;</span><br><span class="line"><span class="keyword">SAVEPOINT</span> A;</span><br><span class="line"><span class="keyword">UPDATE</span> 테이블</span><br><span class="line"><span class="keyword">SAVEPOINT</span> B;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 테이블;</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> A;</span><br><span class="line">// A로 되돌림</span><br></pre></td></tr></table></figure><h3 id="데이터-검색어-개념"><a class="markdownIt-Anchor" href="#데이터-검색어-개념"></a> 데이터 검색어 개념</h3><ul><li>데이터베이스 중 하나 또는 그 이상의 테이블에서 데이터를 추출하기 위한 명령</li></ul><h3 id="문법"><a class="markdownIt-Anchor" href="#문법"></a> 문법</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">DISTINCT</span>]&#123;*, <span class="keyword">column</span> [<span class="keyword">alias</span>], ...&#125;</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line">[<span class="keyword">WHERE</span> condition]</span><br><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">column</span>]</span><br><span class="line">[<span class="keyword">HAVING</span> condition]</span><br><span class="line">[<span class="keyword">ORDER</span> <span class="keyword">BY</span> &#123;<span class="keyword">column</span>, expression&#125;[<span class="keyword">ASC</span>|<span class="keyword">DESC</span>]];</span><br></pre></td></tr></table></figure><ul><li>DISTINCT : 중복되는 행을 제거하는 옵션</li><li><ul><li>: 테이블의 모든 column을 출력</li></ul></li><li>alias : 해당 column에 대해서 다른 이름을 부여할 때 사용</li><li>table_name : 질의 대상 테이블 명</li><li>where : 조건을 만족하는 행들만 검색</li><li>condition : column, 표현식, 상수 및 비교 연산자</li><li>GROUP BY : 그룹핑하고자하는 단위 지정</li><li>HAVING : 그룹핑한 결과 값에 대한 조건 검색</li><li>ORDER BY : 질의 결과 정렬을 위한 옵션</li></ul><h3 id="plsql-개요"><a class="markdownIt-Anchor" href="#plsql-개요"></a> PL/SQL 개요</h3><ul><li>프로그래밍 언어의 특성을 수용한 SQL의 확장 기능</li><li>Oracle 기반의 모든 프로시저 작성에 사용됨</li><li>장점<ul><li>Compile 필요 없이 script 생성 및 변경 후 바로 실행 가능</li><li>프로그램 개발의 모듈화가 가능</li><li>식별자를 선언할 수 있음</li><li>ERROR 처리가 가능</li><li>성능 향상을 기대</li></ul></li></ul><h3 id="plsql-구조"><a class="markdownIt-Anchor" href="#plsql-구조"></a> PL/SQL 구조</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SQL</span>/로직</span><br><span class="line">    <span class="keyword">EXCEPTION</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><ul><li>선언부 : 실행부에서 참조할 모든 변수, 상수, CURSOR, EXCEPTION을 선언</li><li>실행부 : BEGIN과 END 사이에 기술되는 영역으로 데이터베이스 데이터를 처리할 SQL문과 PL/SQL 블록을 기술</li><li>예외처리부 : 실행부에서 에러가 발생했을 때 수행될 문장을 기술</li></ul><h3 id="plsql-처리-절차"><a class="markdownIt-Anchor" href="#plsql-처리-절차"></a> PL/SQL 처리 절차</h3><ul><li>PL/SQL로 작성된 Block을 Oracle 서버로 보내면 PL/SQL 엔진이 SQL 문과 Non SQL 문을 구분</li><li>Non SQL 문은 Client 환경에서, SQL문은 서버에서 실행</li><li>따라서 PL/SQL 을 사용하게 되면 서버의 작업 양을 줄이게 되므로 네트워크 부하를 감소시켜 수행성능을 증가</li></ul><h3 id="stored-function"><a class="markdownIt-Anchor" href="#stored-function"></a> Stored Function</h3><ul><li>특정 작업을 수행할 수 있는 이름이 있는 PL/SQL 블록으로 구성이 프로시저와 유사하지만 <u>IN 파라미타만 사용</u></li><li>보통 값을 계산하고 결과값을 반환하기 위해 <u>반환될 값의 데이터 타입을 RETURN 문에 선언</u></li></ul><h3 id="stored-procedure"><a class="markdownIt-Anchor" href="#stored-procedure"></a> Stored Procedure</h3><ul><li>특정 작업을 수행할 수 있는 이름이 있는 PL/SQL 블록으로 <u>매개변수를 받을 수 있고 반복적으로 사용</u>할 수 있는 Object</li><li>보통 연속 실행 또는 구현이 복잡한 트랜잭션을 수행하는 <u>PL/SQL 블록을 DB에 저장</u>하기 위해 생성</li></ul><h3 id="stored-package"><a class="markdownIt-Anchor" href="#stored-package"></a> Stored Package</h3><ul><li>오라클 데이터베이스에 저장되어 있는 서로 관련 있는 PL/SQL프로시저와 함수들의 집합</li><li>선언부와 본문 두 부분으로 구성</li></ul><h3 id="trigger"><a class="markdownIt-Anchor" href="#trigger"></a> Trigger</h3><ul><li>INSERT, UPDATE, DELETE 문이 수행될때 <u>묵시적으로 수행되는 PROCEDURE</u></li><li>Trigger는 TABLE 과는 별도로 DATABASE에 저장됨</li></ul><h3 id="데이터-조작-프로시저-개발"><a class="markdownIt-Anchor" href="#데이터-조작-프로시저-개발"></a> 데이터 조작 프로시저 개발</h3><ol><li>데이터 저장소에 연결</li><li>데이터 저장소를 정의</li><li>데이터 조작 프로시저를 작성</li><li>데이터 검색 프로시저를 작성</li><li>절차형 데이터 조작 프로시저를 작성</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;응용소프트웨어 설계와 물리 데이터저장소 설계에 따라 &lt;u&gt;데이터 저장소에 연결을 수행하
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터조작프로시저작성" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A1%B0%EC%9E%91%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80%EC%9E%91%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-29T12:02:11.000Z</published>
    <updated>2020-05-29T12:02:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="1-물리데이터모델-설계"><a class="markdownIt-Anchor" href="#1-물리데이터모델-설계"></a> 1. 물리데이터모델 설계</h3><ul><li>논리 데이터 모델로부터 물리 데이터 모델로 변환하는 것은 단위 엔터티를 테이블로, 속성을 칼럼으로 UID를 기본키로, 관계를 외래키로 변환 후 칼럼 유형과 길이 정의</li><li>데이터 처리 범위와 빈도 수를 분석하여 반정규화를 고려</li><li>반정규화는 중복테이블을 추가하거나 테이블 조합, 분할, 제거 하는 방법 등을 통해 설계</li></ul><h3 id="2-물리-데이터저장소-구성"><a class="markdownIt-Anchor" href="#2-물리-데이터저장소-구성"></a> 2. 물리 데이터저장소 구성</h3><ul><li>물리 데이터 모델링 완료 후 모델링 결과에 따라 디스크라는 물리 데이터 저장소에 다양한 오브젝트 구성</li><li>테이블, 인덱스, 뷰, 클러스터, 파티션</li><li>오브젝트는 디스크 구성 설계를 통해 구성</li></ul><h3 id="3-orm-프레임워크"><a class="markdownIt-Anchor" href="#3-orm-프레임워크"></a> 3. ORM 프레임워크</h3><ul><li>객체 관계 매핑은 관계형 데이터 베이스와 객체지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법</li><li>ORM 절차<ol><li>클래스를 테이블로 변환</li><li>속성은 칼럼으로 변환</li><li>클래스간 관계는 관계형 테이블 간의 관계로 변환</li></ol></li></ul><h3 id="4-트랜잭션-인터페이스"><a class="markdownIt-Anchor" href="#4-트랜잭션-인터페이스"></a> 4. 트랜잭션 인터페이스</h3><ul><li>물리 데이터 저장소에서 트랜잭션 인터페이스는 전체적인 데이터베이스 트랜잭션의 골격 및 인터페이스를 정의하는 활동</li><li>데이터베이스 트랜잭션 특징<ol><li>원자성</li><li>일관성</li><li>독립성</li><li>영속성</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;1-물리데이터모델-설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 트랜잭션 인터페이스</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</id>
    <published>2020-05-29T11:56:28.000Z</published>
    <updated>2020-05-29T11:56:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="트랜잭션-인터페이스-transaction-interface-개념"><a class="markdownIt-Anchor" href="#트랜잭션-인터페이스-transaction-interface-개념"></a> 트랜잭션 인터페이스 Transaction Interface 개념</h3><ul><li>물리 데이터 저장소에서 트랜잭션 인터페이스는 전체적인 데이터 베이스 <u>트랙잭션의 골격 및 인터페이스를 정의하는 활동</u></li><li>트랜잭션은 데이터베이스 입출력과 관련된 기능적 형태로 정의</li></ul><h3 id="데이터베이스-트랜잭션-특징"><a class="markdownIt-Anchor" href="#데이터베이스-트랜잭션-특징"></a> 데이터베이스 트랜잭션 특징</h3><ol><li>원자성<ul><li>트랜잭션을 구성하는 연산들이 모두 정상적으로 실행되거나 하나도 실행되지 않아야 함</li></ul></li><li>일관성<ul><li>트랙잭션이 그 실행을 성공적으로 완료하면 언제나 일관성 있는 데이터베이스 상태로 변환</li></ul></li><li>독립성<ul><li>둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행 중에 다른 트랜잭션 연산이 끼어들 수 없음</li></ul></li><li>영속성<ul><li>성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영</li></ul></li></ol><h3 id="데이터베이스-트랜잭션-연산자"><a class="markdownIt-Anchor" href="#데이터베이스-트랜잭션-연산자"></a> 데이터베이스 트랜잭션 연산자</h3><ol><li>COMMIT<ul><li>하나의 트랜잭션에 대한 작업이 성공적으로 끝나고 수행결과를 관리자에게 알려주는 연산</li></ul></li><li>ROLLBACK<ul><li>하나의 트랜잭션 처리가 비정상적으로 종료되어 해당 트랜잭션을 재시작 혹은 폐기하는 연산</li></ul></li><li>RECOVERY<ul><li>트랜잭션들을 수행하는 도중에 장애로 인해 손상된 데이터베이스를 손상되기 이전의 정상적인 상태로 복구시키는 연산</li></ul></li></ol><h3 id="트랜잭션-인터페이스-설계"><a class="markdownIt-Anchor" href="#트랜잭션-인터페이스-설계"></a> 트랜잭션 인터페이스 설계</h3><ul><li>데이터 접근 방법 및 인터페이스를 절차적으로 명세</li><li>트랜잭션 인터페이스는 주로 프로그래밍 언어로 구현</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;트랜잭션-인터페이스-transaction-interface-개념&quot;&gt;&lt;a class=&quot;ma
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="트랜잭션인터페이스" scheme="https://hyeonukdev.github.io/tags/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - ORM 프레임워크</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/ORM%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/ORM%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/</id>
    <published>2020-05-29T11:48:54.000Z</published>
    <updated>2020-05-29T11:48:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="orm-object-relationship-mapping-프레임워크의-개념"><a class="markdownIt-Anchor" href="#orm-object-relationship-mapping-프레임워크의-개념"></a> ORM; Object-Relationship Mapping 프레임워크의 개념</h3><ul><li>객체 관련 매핑은 관계형 데이터베이스와 객체지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법</li><li><u>객체지향 언어에서 사용하는 객체를 관계형 데이터베이스로 변환하여 테이블을 구성하는 활용</u></li></ul><h3 id="객체와-테이블-간의-변환-방법"><a class="markdownIt-Anchor" href="#객체와-테이블-간의-변환-방법"></a> 객체와 테이블 간의 변환 방법</h3><ul><li>객체지향 클래스/객체는 관계형데이터베이스에서 테이블로 매피</li><li><u>속성은 칼럼으로 오퍼레이션은 프로시저 혹은 함수로 매핑</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0529_01.png" alt="ORM 매핑" /></li></ul><h3 id="관계와-테이블-간의-변환-방법"><a class="markdownIt-Anchor" href="#관계와-테이블-간의-변환-방법"></a> 관계와 테이블 간의 변환 방법</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0529_02.png" alt="관계 테이블 " /></p><h3 id="orm-절차"><a class="markdownIt-Anchor" href="#orm-절차"></a> ORM 절차</h3><ol><li>클래스를 테이블로 변환<ul><li>클래스의 인스턴스는 테이블의 레코드로 매핑</li></ul></li><li>속성은 칼럼으로 변환<ul><li>클래스 인스턴스의 속성은 테이블의 칼럼으로 매핑</li></ul></li><li>클래스간 관계는 관계형 테이블 간의 관계로 변환<ul><li>클래스 간의 관계는 관계형 데이터베이스의 테이블 간 제약사항으로 변환</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;orm-object-relationship-mapping-프레임워크의-개념&quot;&gt;&lt;a cla
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="ORM프레임워크" scheme="https://hyeonukdev.github.io/tags/ORM%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/29/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-29T11:44:50.000Z</published>
    <updated>2020-05-29T11:44:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="1-자료구조"><a class="markdownIt-Anchor" href="#1-자료구조"></a> 1. 자료구조</h3><ul><li>컴퓨터에서 자료를 효율적으로 표현하고 저장하고 처리할 수 있도록 만들어진 논리적인 틀</li><li>분류<ul><li>선형 구조<ul><li>리스트</li><li>스택</li><li>큐</li><li>데크</li></ul></li><li>비선형 구조<ul><li>트리</li><li>그래프</li></ul></li></ul></li></ul><h3 id="2-논리-데이터모델-개요"><a class="markdownIt-Anchor" href="#2-논리-데이터모델-개요"></a> 2. 논리 데이터모델 개요</h3><ul><li>논리 데이터 모델링은 정확한 업무 분석을 통한 자료의 흐름을 분석하여 현재 사용 중인 양식, 문서, 징표를 중심으로 자료항목을 추출하고 추출된 엔티티와 속성들의 관계를 구조적으로 정의하는 단계</li><li>정규화<ul><li>릴레이션을 관련 있는 속성들로만 구성되도록 릴레이션을 분해하는 과정</li><li>제 1 정규화<ul><li>중복속성제거</li></ul></li><li>제 2 정규화<ul><li>부분종속성제거</li></ul></li><li>제 3 정규화<ul><li>이행종속성제거</li></ul></li></ul></li></ul><h3 id="3-논리-데이터모델-검증"><a class="markdownIt-Anchor" href="#3-논리-데이터모델-검증"></a> 3. 논리 데이터모델 검증</h3><ul><li>논리 데이터저장소 확인</li></ul><ol><li>엔티티 및 속성 확인</li><li>관계 확인</li><li>데이터 흐름 확인</li><li>데이터 접근 권한 확인</li><li>데이터 백업정책 및 분산 구조 확인</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;1-자료구조&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-자료구
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="자료구조" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 물리데이터 모델 설계</title>
    <link href="https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84/"/>
    <id>https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84/</id>
    <published>2020-05-28T03:37:30.000Z</published>
    <updated>2020-05-28T03:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><ul><li>논리데이터저장소 설계를 바탕으로 응용소프트웨어가 사용하는 <u>데이터저장소의 특성을 반영한 물리 데이터 저장소 설계 수행</u></li><li>논리데이터저장소 설계를 바탕으로 <u>목표 시스템의 데이터 특성을 반영하여 최적화된 물리 데이터저장소를 설계</u></li><li>실제 데이터가 저장될 물리적 공간을 구성</li></ul><h3 id="데이터베이스-스키마-schema의-개념"><a class="markdownIt-Anchor" href="#데이터베이스-스키마-schema의-개념"></a> 데이터베이스 스키마 Schema의 개념</h3><ul><li>데이터베이스에서 자료의 구조, 자료의 표현방법, 자료 간의 관계를 형식 언어로 정의한 구조</li></ul><h3 id="데이터베이스-스키마-종류"><a class="markdownIt-Anchor" href="#데이터베이스-스키마-종류"></a> 데이터베이스 스키마 종류</h3><ul><li>외부 스키마<ul><li>프로그래머나 사용자의 입장에서 데이터베이스의 모습으로 조직의 일부분을 정의한 것</li></ul></li><li>개념 스키마<ul><li>모든 응용 시스템과 사용자들이 필요로 하는 데이터를 통합한 조직 전체의 데이터베이스 구조를 논리적으로 정의 한 것</li></ul></li><li>내부 스키마<ul><li>전체 데이터베이스의 물리적 저장 형태를 기술</li></ul></li></ul><h3 id="논리-데이터-모델-물리-데이터-모델-변환-순서"><a class="markdownIt-Anchor" href="#논리-데이터-모델-물리-데이터-모델-변환-순서"></a> 논리 데이터 모델 -&gt; 물리 데이터 모델 변환 순서</h3><ol><li>단위 엔티티를 테이블로 변환<ul><li>논리 모델에서 정의된 엔티티는 물리 모델에서 테이블로 변환</li><li>엔티티는 한글명, 테이블은 영문명 사용하고 명칭을 동일하게</li></ul></li><li>속성을 칼럼으로 변환<ul><li>SQL 예약어 사용은 피하기</li><li>가독성을 위해 명칭은 가능한 짧게</li><li>칼럼명에 복합 단어 사용할 경우 미리 정의된 표준에 의해 명명</li></ul></li><li>UID를 기본키로 변환<ul><li>엔티티의 UID는 기본키로 선언</li><li>Not null, Unique 등의 제약 조건을 추가적으로 정의</li></ul></li><li>관계를 외래키로 변환<ul><li>1:n 관계에서 1 영역에 있는 기본키를 n영역의 외래키로 선언</li><li>외래키 명은 1 영역의 기본키 이름을 사용하나 다른 의미를 가질 경우 변경하여 명명</li><li>순환 관계에서 자신의 기본키는 외래키로 정의</li></ul></li><li>칼럼 유형과 길이 정의<ul><li>정의된 각 칼럼에 대해, <u>적용 DBMS에서 제공하는 데이터 유형 중 적절한 유형 정의</u></li><li>해당 데이터의 최대 길이를 파악하여 길이 설정</li></ul></li><li>데이터 처리 범위와 빈도수를 분석하여 반정규화 고려<ul><li>중복 테이블 추가</li><li>테이블 조합</li><li>테이블 분할<ul><li>수식 분할</li><li>수평 분할</li></ul></li><li>테이블 제거<ul><li>더 이상 엑세스 되지 않는 테이블</li></ul></li><li>칼럼의 중복화</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;논리데이터저장소 설계를 바탕으로 응용소프트웨어가 사용하는 &lt;u&gt;데이터저장소의 특성을 반
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리데이터모델설계" scheme="https://hyeonukdev.github.io/tags/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EC%84%A4%EA%B3%84/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 물리데이터 저장소 구성</title>
    <link href="https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EA%B5%AC%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/28/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EA%B5%AC%EC%84%B1/</id>
    <published>2020-05-28T03:37:30.000Z</published>
    <updated>2020-05-28T03:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><h3 id="delete-constraint"><a class="markdownIt-Anchor" href="#delete-constraint"></a> Delete Constraint</h3><ul><li><u>참조된 기본키의 값이 삭제될 경우</u>의 처리 내용 정의</li><li>Cascade<ul><li>참조한 테이블이 있는 외부키가 일치하는 모든 Row가 삭제</li></ul></li><li>Restricted<ul><li>참조한 테이블에 있는 외부키에 없는 것만 삭제 가능</li></ul></li><li>Nullify<ul><li>참조한 테이블에 정의된 외부키가 일치하는 것을 Null로 수정</li></ul></li></ul><h3 id="update-constraint"><a class="markdownIt-Anchor" href="#update-constraint"></a> Update Constraint</h3><ul><li><u>참조된 기본키의 값이 수정될 경우</u>의 처리 내용 정의</li><li>Cascade<ul><li>참조한 테이블에 있는 외부키와 일치하는 모든 Row가 수정</li></ul></li><li>Restricted<ul><li>참조한 테이블에 있는 외부키에 없는 것만 수정가능</li></ul></li><li>Nullify<ul><li>참조한 테이블에 정의된 외부키와 일치하는 것을 Null로 수정</li></ul></li></ul><h3 id="인덱스-설계"><a class="markdownIt-Anchor" href="#인덱스-설계"></a> 인덱스 설계</h3><h4 id="1-인덱스-적용-기준"><a class="markdownIt-Anchor" href="#1-인덱스-적용-기준"></a> 1. 인덱스 적용 기준</h4><ul><li>인덱스 칼럼의 분포가 10~15% 이내인 경우<br /><code>분포도 = (1/칼럼값의종류) * 100 = (칼럼값의 평균 Row수/테이블의 총Row수) * 100</code></li><li>분포도가 범위 이상이더라도 부분처리를 목적으로 하는 경우</li><li>입출력 장표 등에서 <u>조회 및 출력 조건으로 사용되는 칼럼</u></li><li>인덱스가 자동 생성되는 기본키와 Unique키의 제약조건을 사용할 경우</li></ul><h4 id="2-인덱스-칼럼-선정"><a class="markdownIt-Anchor" href="#2-인덱스-칼럼-선정"></a> 2. 인덱스 칼럼 선정</h4><ul><li>분포도가 좋은 칼럼은 단독적으로 생성하여 활용도 향상</li><li>자주 조합되어 사용되는 칼럼은 결합 인덱스로 생성하여 활용</li><li>결합 인덱스는 구성되는 칼럼 순서 선정에 유의</li><li>가능한 수정이 빈번하지 않은 칼럼 선정</li></ul><h4 id="3-설계시-고려사항"><a class="markdownIt-Anchor" href="#3-설계시-고려사항"></a> 3. 설계시 고려사항</h4><ul><li>새로 추가되는 인덱스가 기존 액세스 경로에 영향을 미칠지 않는지 고려</li><li>지나치게 많은 인덱스는 오버헤드로 작용하므로 유의</li><li>인덱스는 추가적인 저장공간이 필요함으로 고려</li><li>넓은 범위를 인덱스 처리 시 오히려 전체 처리보다 많은 오버헤드를 발생시킬 수 있음</li></ul><h3 id="뷰-설계"><a class="markdownIt-Anchor" href="#뷰-설계"></a> 뷰 설계</h3><h4 id="1-뷰-테이블-개념"><a class="markdownIt-Anchor" href="#1-뷰-테이블-개념"></a> 1. 뷰 테이블 개념</h4><ul><li>가상 테이블을 구성하는 <u>데이터베이스 오브젝트로 별도의 저장 공간은 없지만 </u> 뷰를 통해 SELECT, DELETE, UPDATE를 할 수 있음</li></ul><h4 id="2-뷰-테이블-생성"><a class="markdownIt-Anchor" href="#2-뷰-테이블-생성"></a> 2. 뷰 테이블 생성</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">VIEW</span> EMP_VIEW10</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> EMPNO, ENAME, SAL, COMM,</span><br><span class="line">DEPTNO</span><br><span class="line"><span class="keyword">FROM</span> EMP_COPY</span><br><span class="line"><span class="keyword">WHERE</span> DEPTNO=<span class="number">30</span></span><br></pre></td></tr></table></figure><ul><li>REPLACE : 뷰가 이미 존재하는 경우 재생성</li><li>FORCE : 기본 테이블의 존 여부에 관계 없이 뷰 생성</li><li>NOFORCE : 기본 테이블이 존재할 때만 뷰 생성</li><li>WITH CHECK OPTION : Sub-Query 내의 조건을 만족하는 행만 변경</li><li>WITH READ ONLY : 조회만 가능하게 제약</li></ul><h4 id="3-뷰-설계시-고려사항"><a class="markdownIt-Anchor" href="#3-뷰-설계시-고려사항"></a> 3. 뷰 설계시 고려사항</h4><ul><li>최종적으로는 <u>테이블을 액세스하는 것으로 사용에 따라 수행 속도에 문제 발생 가능성</u></li><li>뷰 내의 SELECT 문의 조건은 가능한 한 <u>최적의 액세스 경로를 사용할 수 있도록 함</u></li><li>그럴 수 없다면 뷰를 사용한 SQL의 WHERE 절에서는 반드시 <u>양호한 액세스 경로가 되도록 해야 함</u></li></ul><h3 id="클러스터-설계"><a class="markdownIt-Anchor" href="#클러스터-설계"></a> 클러스터 설계</h3><h4 id="1-클러스터-개념"><a class="markdownIt-Anchor" href="#1-클러스터-개념"></a> 1. 클러스터 개념</h4><ul><li>클러스터 키 값을 기준으로 같은 값들끼리 레코드가 한 블록에 모이는 저장 구조</li></ul><h4 id="2-클러스터-적용-기준"><a class="markdownIt-Anchor" href="#2-클러스터-적용-기준"></a> 2. 클러스터 적용 기준</h4><ul><li>분포도가 넓을수록 오히려 유리한 기법</li><li>액세스 기법이 아니라 액세스 효율 향상을 위한 물리적 저장 방법</li><li>분포도가 넓은 테이블의 클러스터링은 저장 공간의 절약 가능</li><li>다중 블록 이상의 테이블에 적용</li><li>대량의 범위를 자주 액세스하는 경우 적용</li><li>인덱스를 사용한 처리 부담이 되는 넓은 분포도에 활용</li><li>여러 개의 테이블이 번번히 조인을 일으킬 때 활용</li><li>반복 칼럼이 정규화에 의해 어쩔 수 없이 분할된 경우 활용</li></ul><h4 id="3-클러스터-설계시-고려사항"><a class="markdownIt-Anchor" href="#3-클러스터-설계시-고려사항"></a> 3. 클러스터 설계시 고려사항</h4><ul><li>검색 효율은 높여 주나 입력, 수정, 삭제 시는 <u>부하가 증가함 고려</u></li><li><u>Union, Distinct, Order by, Group by 빈번한 칼럼이면 고려</u></li><li><u>수정이 자주 발생하지 않는 칼럼</u>은 고려 대상</li></ul><h3 id="파티션-설계"><a class="markdownIt-Anchor" href="#파티션-설계"></a> 파티션 설계</h3><h4 id="1-파티션-개념"><a class="markdownIt-Anchor" href="#1-파티션-개념"></a> 1. 파티션 개념</h4><ul><li>데이터베이스를 여러 부분으로 분할 하는 것</li></ul><h4 id="2-파티션-종류"><a class="markdownIt-Anchor" href="#2-파티션-종류"></a> 2. 파티션 종류</h4><ul><li>범위 분할 : 지정한 열의 값을 기준으로 분할</li><li>해시 분할 : 해시 함수에 따라 데이터를 분할</li><li>조합 분할 : 범위 분할에 의해 데이터를 분할한 다음 해시 함수를 적용하여 다시 분할 하는 것</li></ul><h4 id="3-파티션-장점"><a class="markdownIt-Anchor" href="#3-파티션-장점"></a> 3. 파티션 장점</h4><ul><li><u>데이터 액세스 범위를 줄여 성능 향상</u></li><li>전체 데이터의 훼손 가능성이 감소 및 데이터 가용성 향상</li><li>각 분할 영역을 독립적으로 백업하고 복구 가능</li><li>디스크 경합에 대한 감소</li></ul><h4 id="4-파티셔닝-순서"><a class="markdownIt-Anchor" href="#4-파티셔닝-순서"></a> 4. 파티셔닝 순서</h4><ol><li>파티션의 종류 결정</li><li>파티션 키의 선정</li><li>파티션 수의 결정</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;h3 id=&quot;delete-constraint&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리데이터저장소구성" scheme="https://hyeonukdev.github.io/tags/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%EA%B5%AC%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 논리데이터모델 개요</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EC%9A%94/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EC%9A%94/</id>
    <published>2020-05-26T07:45:48.000Z</published>
    <updated>2020-05-26T07:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_09.png" alt="논리데이터모델" /></p><h3 id="시스템-개발-절차"><a class="markdownIt-Anchor" href="#시스템-개발-절차"></a> 시스템 개발 절차</h3><ul><li><u>데이터관점, 프로세스 관점</u> 두 가지로 진행</li><li><u>개념 모델링</u>을 통해 개발 범위 파악</li><li>업무 중심의 분석 단계</li><li>개발하고자 하는 환경을 고려한 설계 단계로 구체화</li><li>개발 단계로 진행</li></ul><h3 id="데이터-모델링-정의"><a class="markdownIt-Anchor" href="#데이터-모델링-정의"></a> 데이터 모델링 정의</h3><ul><li>데이터베이스 설계 방법론</li><li>기업의 정보 구조를 실체와 관계를 중심으로 명확하고 체계적으로 표현하여 문서화하는 기법</li><li>기업의 정보 구조를 실체와 관계를 중심으로 명확하고 체계적으로 표현하여 문서화하는 기법</li></ul><h3 id="데이터-모델링-목적"><a class="markdownIt-Anchor" href="#데이터-모델링-목적"></a> 데이터 모델링 목적</h3><ul><li>연관 조직의 정보요구에 대한 정확한 이해</li><li>사용자, 설계자, 개발자 간에 효율적인 의사소통 수단 제공</li><li>데이터 체계 구축을 통한 고품질 S/W와 유지보수 비용의 감소 효과 기대</li><li>신규 또는 개선 시스템의 개발 기초를 제공</li></ul><h3 id="데이터-모델링-특성"><a class="markdownIt-Anchor" href="#데이터-모델링-특성"></a> 데이터 모델링 특성</h3><ul><li>데이터 중심 분석을 통한 업무 흐름 파악이 용이</li><li>데이터 무결성 보장</li><li>데이터의 공유를 통한 중복을 제거하고 일관성 있는 정보 제공</li></ul><h3 id="데이터-모델링-절차"><a class="markdownIt-Anchor" href="#데이터-모델링-절차"></a> 데이터 모델링 절차</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_10.png" alt="데이터모델링절차" /></p><h3 id="논리-데이터-모델링-정의"><a class="markdownIt-Anchor" href="#논리-데이터-모델링-정의"></a> 논리 데이터 모델링 정의</h3><ul><li>데이터베이스 개발 과정의 전략수립 및 분석 단계에서 실시하며, 데이터 구조에 대한 논리적 정의 단계</li><li>정확한 업무 분석을 통한 자료의 흐름을 분석하여 현재 사용 중인 양식, 문서, 징표를 중심으로 자료항목을 추출하여 추출된 <u>엔티티와 속성들의 관계를 구조적으로 정의하는 단계</u></li></ul><h3 id="논리-데이터-모델의-특성"><a class="markdownIt-Anchor" href="#논리-데이터-모델의-특성"></a> 논리 데이터 모델의 특성</h3><ul><li><u>요구사항을 충분히 수집하지 않으면 다음 단계의 요구사항 변경에 따른 많은 비용이 발생</u></li><li>모든 이해당사자들과 의사소통의 보조자료로서 E-R모델을 활용</li><li>논리적모델은 독립적</li></ul><h3 id="이상-anomaly-현상"><a class="markdownIt-Anchor" href="#이상-anomaly-현상"></a> 이상 Anomaly 현상</h3><ul><li><u>불필요한 데이터 중복으로 인해</u> 릴레이션에 대한 데이터 삽입/수정/삭제 연산을 수행할 때 발생할 수 있는 부작용</li><li><u>정규화를 통해 이상현상을 제거</u></li><li>종류<ul><li>삽입 이상<ul><li>새 데이터를 삽입시 불필요한 데이터도 함께 삽입되는 문제</li></ul></li><li>갱신 이상<ul><li>중복 데이터 중 일부만 변경하여 데이터가 불일치하게 되는 모순의 문제</li></ul></li><li>삭제 이상<ul><li>데이터를 삭제시 꼭 필요한 데이터까지 함께 삭제되는 데이터 손실의 문제</li></ul></li></ul></li></ul><h3 id="정규화-normalization-개념"><a class="markdownIt-Anchor" href="#정규화-normalization-개념"></a> 정규화 Normalization 개념</h3><ul><li>중복성을 최소화하고 정보의 일관성을 보장하기 위한 개념</li><li>릴레이션을 관련 있는 속성들로만 구성되도록 릴레이션을 분해하는 과정<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_11.png" alt="Normalization" /></li></ul><h3 id="정규화-목적"><a class="markdownIt-Anchor" href="#정규화-목적"></a> 정규화 목적</h3><ul><li>데이터 중복 배제로 데이터 관리 편의성 제고 및 자료 저장 공간의 최소화</li><li>데이터 모형 단순화</li><li>데이터 구조의 안정성 및 무결성 유지</li><li>속성의 배열상태 검증</li><li>엔터티와 속성의 누락 여부 검증 수단</li><li>자료검색과 추출의 효율성을 추구</li></ul><h3 id="정규화-특징"><a class="markdownIt-Anchor" href="#정규화-특징"></a> 정규화 특징</h3><ul><li>어떤 관계구조가 바람직한 것인지, 바람직하지 못한 관계를 어떻게 분해하여야 하는지에 관한 구체적인 판단기준을 제공</li><li>정규화된 데이터 모델은 정확성, 일치성, 단순성, 비중복성, 안정성 보장</li></ul><h3 id="정규화-방법"><a class="markdownIt-Anchor" href="#정규화-방법"></a> 정규화 방법</h3><p><a href="https://yaboong.github.io/database/2018/03/09/database-normalization-1/">링크</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터모델개요" scheme="https://hyeonukdev.github.io/tags/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EC%9A%94/"/>
    
  </entry>
  
  <entry>
    <title>데이터입출력구현 - 자료구조</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch05_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%80%EC%9E%A5%EC%86%8C%ED%99%95%EC%9D%B8/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</id>
    <published>2020-05-26T07:21:15.000Z</published>
    <updated>2020-05-26T07:21:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터입출력구현"><a class="markdownIt-Anchor" href="#데이터입출력구현"></a> 데이터입출력구현</h2><ul><li>업무 분석가, 데이터베이스 엔지니어가 작성한 논리 데이터저장소 설계 내역에서 <u>정의된 데이터의 유형을 확인하고 식별</u></li><li>논리 데이터저장소 설계 내역에서 <u>데이터의 논리적 단위와 데이터 간의 관계를 확인</u></li><li>논리 데이터저장소 설계 내역에서 <u>데이터 또는 데이터간의 제약조건과 이들 간의 관계를 식별</u></li></ul><h3 id="자료구조의-개념"><a class="markdownIt-Anchor" href="#자료구조의-개념"></a> 자료구조의 개념</h3><ul><li><p>컴퓨터에서 자료를 효율적으로 표현하고 저장하고 처리할 수 있도록 만들어진 논리적인 틀</p></li><li><p>분류<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_08.png" alt="자료구조" /></p></li><li><p>선형리스트</p></li><li><p>연결리스트</p></li><li><p>스택</p></li><li><p>큐</p></li><li><p>데크</p></li><li><p>트리</p><ul><li>이진트리</li><li>순회</li></ul></li><li><p>그래프<br /><a href="https://www.notion.so/hyeonukdev/Alogorithm-0fe7decd13f344d899ca2e5ba1c4d901">알고리즘스터디</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터입출력구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터입출력구현&quot;&gt;&lt;/a&gt; 데이터입출력구현&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;업무 분석가, 데이터베이스 엔지니어가 작성한 논리 데이터저장소 설계 내역에서 &lt;u&gt;정의
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터입출력구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="자료구조" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-26T06:17:14.000Z</published>
    <updated>2020-05-26T06:17:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="1-ide-도구"><a class="markdownIt-Anchor" href="#1-ide-도구"></a> 1. IDE 도구</h3><ul><li>통합 개발 환경은 코드의 작성 및 편집, 디버깅, 컴파일, 배포 등 프로그램 개발에 관련된 모든 작업을 하나씩 프로그램 안에서 처리하는 환경을 제공하는 소프트웨어</li><li>기능<ol><li>개발 환경 지원</li><li>컴파일 및 디버깅 기능 제공</li><li>외부 연계모듈과 통합 기능 제공</li></ol></li></ul><h3 id="2-협업-도구"><a class="markdownIt-Anchor" href="#2-협업-도구"></a> 2. 협업 도구</h3><ul><li>종류<ul><li>기능에 따라 문서굥유</li><li>소스 공유</li><li>아이디어 공유</li><li>디자인 공유</li><li>마인드 맵핑</li><li>프로제트 관리</li><li>일정관리</li></ul></li><li>기능<ol><li>개발자간 커뮤니케이션</li><li>일정 및 이슈 공유</li><li>개발자간 집단지성 활용</li></ol></li></ul><h3 id="3-형상관리-도구"><a class="markdownIt-Anchor" href="#3-형상관리-도구"></a> 3. 형상관리 도구</h3><ul><li>소프트웨어 개발 과정에서 <u>소프트웨어의 변경 사항을 관리</u>하기 위해 변경을 체계적으로 관리, 추적 및 제어하기 위한 일련의 활동</li><li>절차<ol><li>형상 식별</li><li>변경 제어</li><li>형상 감사</li><li>형상 기록</li></ol></li><li>관리 도구<ul><li>CVS</li><li>SVN</li><li>GIT</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;1-ide-도구&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-ide-도구&quot;&gt;&lt;/a&gt; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 형상관리도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-26T06:04:41.000Z</published>
    <updated>2020-05-26T06:04:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="형상관리-configuration-management"><a class="markdownIt-Anchor" href="#형상관리-configuration-management"></a> 형상관리 Configuration Management</h3><ul><li>소프트웨어 개발 과정에서 <u>소프트웨어의 변경 사항을 관리</u>하기 위해 변경을 체계적으로 관리, 추적 및 제어하기 위한 일련의 활동</li><li>소프트웨어 형상은 항상 변하게 되는데 이때 과거의 형상을 기억하고 있어야 하중에 문제가 되더라고 <u>과거의 형상을 원상 복구 가능</u></li><li>형상관리절차<ol><li>형상 식별</li><li>변경 제어</li><li>형상 감사</li><li>형상 기록</li></ol></li></ul><h3 id="형상관리-수행-절차-및-관리조직"><a class="markdownIt-Anchor" href="#형상관리-수행-절차-및-관리조직"></a> 형상관리 수행 절차 및 관리조직</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_06.png" alt="형상관리 수행 절차" /></p><ul><li>형상 통제 위원회<ul><li>변경 요청에 대한 기술적인 타당성, 부작용, 시스템의 기능 및 형상관리 항목들에 미치는 영향, 수정에 소요되는 기간 및 비용 등을 평가</li></ul></li></ul><h3 id="형상관리의-특징"><a class="markdownIt-Anchor" href="#형상관리의-특징"></a> 형상관리의 특징</h3><ul><li><u>소프트웨어 변경의 원인을 알아내고 제어하며 적절히 변경되고 있는지 확인</u>하여 해당 담당자에게 통보하는 작업</li><li>형상관리는 소프트에어 개발의 전 단계는 물론 유지보수 단계에서도 수행되는 활동</li><li>형상관리는 소프트웨어 개발의 전체 비용을 줄이고, 개발과정의 여러 가지 문제점 발생요인이 최소화 되도록 보증하는 것이 목적</li></ul><h3 id="소프트웨어-형상관리-도구-기능"><a class="markdownIt-Anchor" href="#소프트웨어-형상관리-도구-기능"></a> 소프트웨어 형상관리 도구 기능</h3><ul><li>체크아웃<ul><li>형상관리 도구 Repository로 부터 최신 소프트웨어 형상을 개발자 PC로 다운로드 받는 기능</li></ul></li><li>체크인<ul><li>개발자가 수정한 소스를 형상관리 도구로 업로드하는 기능</li></ul></li><li>커밋<ul><li>개발자가 소스를 형상관리 도구에 업로드 후 최종적으로 업데이트가 되었을 때 형상관리 서버에서 반영되도록 하는 기능</li></ul></li></ul><h3 id="소프트웨어-형상관리-도구개념"><a class="markdownIt-Anchor" href="#소프트웨어-형상관리-도구개념"></a> 소프트웨어 형상관리 도구개념</h3><ul><li>소스 코드나 문서의 버전 관리, 이력 관리, 추적 등 변경사항을 체계적으로 관리할 수 있는 기능을 제공하는 도구</li><li>종류<ul><li>CVS</li><li>SVN</li><li>GIT</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;형상관리-configuration-management&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="형상관리도구" scheme="https://hyeonukdev.github.io/tags/%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
  <entry>
    <title>통합구현 - 현업도구</title>
    <link href="https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%84%EC%97%85%EB%8F%84%EA%B5%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/26/Engineer_Information_Processing/ch06_%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/%ED%98%84%EC%97%85%EB%8F%84%EA%B5%AC/</id>
    <published>2020-05-26T05:59:59.000Z</published>
    <updated>2020-05-26T05:59:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="통합구현"><a class="markdownIt-Anchor" href="#통합구현"></a> 통합구현</h2><h3 id="협업도구의-필요성"><a class="markdownIt-Anchor" href="#협업도구의-필요성"></a> 협업도구의 필요성</h3><ul><li>규모에 따라 소프트웨어 개발 프로젝트는 수명에서 수천 명의 개발자가 참여하기 때문에 그들 간의 협업을 위한 도구 필요</li><li>특히, 통합 규현 관리를 위한 개발자 간 협업도구 필요</li><li>개발자 간에는 전문 분야, 경험, 개인적 목표가 다르기 때문에 다른 의견이 있을 수 있고 다른 개발자와 유대감 형성 및 유대감 지속을 위한 커뮤니케이션 필요</li></ul><h3 id="협업도구의-분류"><a class="markdownIt-Anchor" href="#협업도구의-분류"></a> 협업도구의 분류</h3><ul><li>기능에 따라 문서굥유</li><li>소스 공유</li><li>아이디어 공유</li><li>디자인 공유</li><li>마인드 맵핑</li><li>프로제트 관리</li><li>일정관리<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_05.png" alt="협업도구분류1" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0526_06.png" alt="협업도구분류2" /></li></ul><h3 id="협업도구-기능"><a class="markdownIt-Anchor" href="#협업도구-기능"></a> 협업도구 기능</h3><ol><li>개발자간 커뮤니케이션<ul><li>개발자간 작업 공유, 오류 현상 공유, 의견 공유 등 다양한 의사 소통 제공</li></ul></li><li>일정 및 이슈 공유<ul><li>소스 코드 규현 도중 발생하는 오류 및 이슈에 대한 공유 혹은 프로젝트 일정에 대한 공유 기능</li></ul></li><li>개발자간 집단지성 활용<ul><li>구현아이디어의 공유 혹은 새로운 아이디어를 개발자들 간에 공유함으로써 집단지성 활용 가능</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;통합구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#통합구현&quot;&gt;&lt;/a&gt; 통합구현&lt;/h2&gt;
&lt;h3 id=&quot;협업도구의-필요성&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#협업도구의-필요성&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="통합구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%ED%86%B5%ED%95%A9%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="현업도구" scheme="https://hyeonukdev.github.io/tags/%ED%98%84%EC%97%85%EB%8F%84%EA%B5%AC/"/>
    
  </entry>
  
</feed>
