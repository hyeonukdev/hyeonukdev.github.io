<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-03T07:44:31.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SW개발 방법론 활용 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-03T07:44:31.000Z</published>
    <updated>2020-05-03T07:44:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><h3 id="1-소프트웨어-개발-표준"><a class="markdownIt-Anchor" href="#1-소프트웨어-개발-표준"></a> 1. 소프트웨어 개발 표준</h3><ul><li><u>소프트웨어 개발 단계의 품질 관리</u>에 사용되는 국제 표준</li><li>ISO/IEC 12207<ul><li>국제 표준화 기구에서 제공하는 소프트웨어 생명주기 프로세스 표준</li><li>기본 생명 주기, 지원 생명 주기, 조직 생명 주기 프로세스</li></ul></li><li>CMMI<ul><li>소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도 평가 모델</li><li>성숙도 5단계<ul><li>초기, 관리, 정의, 정량적 관리, 최적화</li></ul></li></ul></li><li>SPICE<ul><li>소프트웨어 프로세스를 평가 및 개선하는 국제 표준</li><li>수행 능력 6단계<ul><li>불완전, 수행, 관리, 확립, 예측, 최적화</li></ul></li></ul></li></ul><h3 id="2-테일러링-기준"><a class="markdownIt-Anchor" href="#2-테일러링-기준"></a> 2. 테일러링 기준</h3><ul><li>소프트웨어 개발 방법론 테일러링은 <u>프로젝트 상황 및 특성에 맞도록 개발 방법론의 절차, 사용기법 등을 수정 및 보완</u>하는 작업</li><li>소프트웨어 개발 방법론 테일러링 고려사항<ul><li>내부적 기준 : 목표환경, 요구사항, 프로젝트 규모, 보유기술</li><li>외부적 기준 : 법적 제약사항, 표준 품질기준</li></ul></li><li>소프트웨어 개발 방법론 테일러링 기법<ul><li>프로젝트 규모와 복잡도, 프로젝트 구성원, 팀내 방법론 지원, 자동화에 따른 테일러링</li></ul></li></ul><h3 id="3-소프트웨어-개발-프레임워크"><a class="markdownIt-Anchor" href="#3-소프트웨어-개발-프레임워크"></a> 3. 소프트웨어 개발 프레임워크</h3><ul><li>소프트웨어 개발에 공통적으로 사용되는 구성 요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러 가지 기능들을 제공해 주는 반제품 형태의 소프트웨어 시스템</li><li>소프트웨어 개발 프레임워크<ul><li>스프링 프레임워크</li><li>전자정부 표준 프레임워크</li><li>스트럿츠 프레임워크</li><li>닷넷 프레임워크</li><li>앵귤러 JS</li><li>장고 프레임워크</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;h3 id=&quot;1-소프트웨어-개발-표준&quot;&gt;&lt;a class=&quot;markdownIt-A
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 소프트웨어 개발 프레임워크</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/</id>
    <published>2020-05-03T07:32:21.000Z</published>
    <updated>2020-05-03T07:32:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><h2 id="소프트웨어-개발-프레임워크"><a class="markdownIt-Anchor" href="#소프트웨어-개발-프레임워크"></a> 소프트웨어 개발 프레임워크</h2><h3 id="소프트웨어-개발-프레임워크의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-프레임워크의-개념"></a> 소프트웨어 개발 프레임워크의 개념</h3><ul><li>소프트웨어 개발에 공통적으로 사용되는 구성 요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러 가지 기능들을 제공해 주는 반제품 형태의 소프트웨어 시스템<ul><li>프레임워크<ul><li>사전적으로 뼈대, 골조를 의미하며 소프트웨어에서는 특정 기능을 수행하기 위해 필요한 클래스나 인터페이스 등을 모아둔 집합체</li></ul></li></ul></li><li>프레임워크의 주요 기능에는 예외 처리, 트랜잭션 처리, 메모리 공유, 데이터 소스 관리, 쿼리 서비스, 로깅 서비스, 인증 서비스 등</li></ul><h3 id="프레임워크-특징"><a class="markdownIt-Anchor" href="#프레임워크-특징"></a> 프레임워크 특징</h3><ul><li>특정 개념들의 <u>추상화</u>를 제공하는 <u>여러 클래스와 컴포넌트로 구성</u></li><li>추상적인 개념들이 문제를 해결하기 위해 같이 작업하는 방법 정의</li><li>컴포넌트들의 <u>재사용이 가능</u></li><li>높은 수준에서 패턴들을 조작</li></ul><h3 id="종류"><a class="markdownIt-Anchor" href="#종류"></a> 종류</h3><h4 id="1-스프링-프레임워크spring-framework"><a class="markdownIt-Anchor" href="#1-스프링-프레임워크spring-framework"></a> 1. 스프링 프레임워크(Spring Framework)</h4><ul><li><u>JAVA 플랫폼을 위한 오픈 소스 경량형 애플리케이션 프레임워크</u></li><li>J2EE에서 제공하는 대부분의 지능을 지원</li><li>DB처리를 위한 JDBC, iBatis, Hibernate, JPA 등 라이브러리와 연동 지원</li><li><u>전자정부 표준 프레임워크</u>의 기반이 되는 기술</li></ul><h4 id="2-전자정부-표준-프레임워크"><a class="markdownIt-Anchor" href="#2-전자정부-표준-프레임워크"></a> 2. 전자정부 표준 프레임워크</h4><ul><li>우리나라의 공공부분 정보화 사업 시 효율적인 <u>정보시스템 구축을 지원하기 위해 필요한 기능 및 아키텍처를 제공하는 프레임워크</u></li><li>개발 프레임워크의 표준 정립으로 응용 소프트웨어의 <u>표준화, 품질 및 재사용성의 향상을 목적</u>으로 함</li><li>오픈 소스 기반의 범용화가 되고 공개된 기술으 활용함으로써 <u>특정 업체의 종속성을 배제하고 사업별 공통 컴포넌트의 중복 개발 방지</u></li></ul><h4 id="3-스트럿츠-프레임워크-struts-framework"><a class="markdownIt-Anchor" href="#3-스트럿츠-프레임워크-struts-framework"></a> 3. 스트럿츠 프레임워크 STRUTS Framework</h4><ul><li>JAVA기반의 JSP만을 위한 프레임워크</li><li>다양한 운영체제에서 활용 가능</li><li>오픈소스이기 때문에 개발에 필요한 부분을 수정하여 사용</li><li>UI기반의 프레임워크</li></ul><h4 id="4-닷넷프레임워크net-framework"><a class="markdownIt-Anchor" href="#4-닷넷프레임워크net-framework"></a> 4. 닷넷프레임워크(.NET Framework)</h4><ul><li>Windows 프로그램 개발 및 실행 환경을 제공하는 프레임워크</li><li>Microsoft 사에서 통합 인터넷 전략을 위해 개발</li><li>코드 실행을 관리하는 CLR(Common Language Runtime)이라는 가상머신 상에서 작동</li><li>메모리 관리, 유형 및 메모리 안전성, 보안, 네트워크 작업 등 여러가지 서비스를 제공</li></ul><h4 id="5-앵귤러-jsangular-js"><a class="markdownIt-Anchor" href="#5-앵귤러-jsangular-js"></a> 5. 앵귤러 JS(Angular JS)</h4><ul><li>자바스크립트 기반의 프레임워크</li><li>앵귤러 JS의 데이터 모델은 단순 자바스크립트 객체로 재사용이 쉬운 정적인 UI컴포넌트로 구성</li><li>코드의 길이를 더욱 단순화</li><li>HTML, CSS 개발자와 자바스크립트 개발자를 명확하게 분리</li></ul><h4 id="6-장고-프레임워크django-framework"><a class="markdownIt-Anchor" href="#6-장고-프레임워크django-framework"></a> 6. 장고 프레임워크(Django Framework)</h4><ul><li>Python으로 작성된 오픈 소스 웹 애플리케이션 프레임워크</li><li>MVC(Model-View-Controller)패턴 기반 프레임워크</li><li>ORM(Object Relational Mapping)기능 지원</li><li>수윈 DB관리를 위해 프로젝트를 생성하면서 관리자 기능을 제공</li><li>쉬운 URL 파싱 기능 지원</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;h2 id=&quot;소프트웨어-개발-프레임워크&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="소프트웨어개발프레임워크" scheme="https://hyeonukdev.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 테일러링 기준</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81%EA%B8%B0%EC%A4%80/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81%EA%B8%B0%EC%A4%80/</id>
    <published>2020-05-03T07:22:00.000Z</published>
    <updated>2020-05-03T07:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><h2 id="테일러링-기준"><a class="markdownIt-Anchor" href="#테일러링-기준"></a> 테일러링 기준</h2><h3 id="소프트웨어-개발-방법론-테일러링의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링의-개념"></a> 소프트웨어 개발 방법론 테일러링의 개념</h3><ul><li>소프트웨어 개발 방법론 테일러링은 <u>프로젝트 상황 및 특성에 맞도록 개발 방법론의 절차, 사용기법 등을 수정 및 보완</u>하는 작업</li></ul><h3 id="소프트웨어-개발-방법론-테일러링-수행절차"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링-수행절차"></a> 소프트웨어 개발 방법론 테일러링 수행절차</h3><ol><li>프로젝트 특징 정의</li><li>표준프로세스 선정 및 검증</li><li>상위 수준의 커스터마이징</li><li>세부 커스터마이징</li><li>테일러링 문서화</li></ol><h3 id="소프트웨어-개발-방법론-테일러링-고려사항"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링-고려사항"></a> 소프트웨어 개발 방법론 테일러링 고려사항</h3><ul><li>내부적 기준<ul><li>목표환경<ul><li>시스템의 개발 환경과 유형이 서로 다른 경우 테일러링 필요</li></ul></li><li>요구사항<ul><li>프로젝트의 생명 주기 활동에서 개발, 운영, 유지보수 등 프로젝트에서 우선적으로 고려할 요구사항이 서로 다른 경우 필요</li></ul></li><li>프로젝트 규모<ul><li>비용, 인력, 개발 기간 등 프로젝트 규모가 서로 다른 경우</li></ul></li><li>보유 기술<ul><li>프로세스, 개발 방법론, 산출물, 인력의 숙련도 등이 다른 경우</li></ul></li></ul></li><li>외부적 기준<ul><li>법적 제약사항<ul><li>프로젝트별로 적용될 IT Compliance가 서로 다른 경우<ul><li>IT Compliance<ul><li>IT분야에서 내/외 부적으로 반드시 지켜야 하는 법칙 규제사항이나 지침</li></ul></li></ul></li></ul></li><li>표준 품질기준<ul><li>금융, 제도, 의료 등 업종별 표준 품질 기준이 서로 다른 경우 테일러링이 필요</li></ul></li></ul></li></ul><h3 id="소프트웨어-개발-방법론-테일러링-기번"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링-기번"></a> 소프트웨어 개발 방법론 테일러링 기번</h3><ul><li>프로젝트 규모와 복잡도에 따른 테일러링<ul><li>프로젝트 규모를 프로젝트 기간, 작업범위, 참여 인원 등에 따라 대/중/소로 구분하고, 프로젝트 업무 난이도에 따라 복잡도를 상/중/하로 구분하는 기법</li></ul></li><li>프로젝트 구성원에 따른 테일러링<ul><li>프로젝트에 참여하는 구성원들의 기술적 숙련도와 방법론의 이해 정도를 확인하여 테일러링 수준을 결정하는 기법</li></ul></li><li>팀내 방법론 지원에 따른 테일러링<ul><li>프로젝트 수행 시 각 팀 별로 방법론 담당 인력을 배정하여 팀의 방법론 교육과 프로젝트 전체의 방법론 운영을 위한 의사소통을 담당하도록 인력을 구성하는 기법</li></ul></li><li>자동화에 따른 테일러링<ul><li>프로젝트 수행 시 작업 부하를 줄이기 위해 중간 단계에서의 산출물을 자동화 도구를 사용하여 산출할 수 있도록 지원하는 기법</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;h2 id=&quot;테일러링-기준&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="테일러링기준" scheme="https://hyeonukdev.github.io/tags/%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81%EA%B8%B0%EC%A4%80/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - SW 개발 표준</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/SW%EA%B0%9C%EB%B0%9C%ED%91%9C%EC%A4%80/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/SW%EA%B0%9C%EB%B0%9C%ED%91%9C%EC%A4%80/</id>
    <published>2020-05-03T06:52:04.000Z</published>
    <updated>2020-05-03T06:52:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><ul><li><u>응용 소프트웨어 개발</u>에 사용할 <b>표준</b>으로 활동 및 절차 수행에 필요한 기법과 표준, 산출물 표준 양식 및 작성 기법, 적용 도구를 정립</li><li><u>테일러링</u>된 적용 개발 방법론에 따른 작성 산출물 유형 확정</li><li><u>소프트웨어 개발 프레임워크</u>의 개념과 종류별 특징을 이해</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>Tailoring 테일러링<ul><li>‘재단, 양복업’ 으로 표준을 기반으로 실제 업무에서 여건에 맞게 수정/보완 하는 것</li></ul></li></ul><h3 id="sw-개발-표준의-개념"><a class="markdownIt-Anchor" href="#sw-개발-표준의-개념"></a> SW 개발 표준의 개념</h3><ul><li><u>소프트웨어 개발 단계의 품질 관리</u>에 사용되는 국제 표준</li><li>대표적인 국제표준<ul><li>ISO/IEC 12207</li><li>CMMI</li><li>SPICE</li></ul></li></ul><h3 id="종류"><a class="markdownIt-Anchor" href="#종류"></a> 종류</h3><h4 id="1-isoiec-12207"><a class="markdownIt-Anchor" href="#1-isoiec-12207"></a> 1. ISO/IEC 12207</h4><ul><li><u>ISO</u>; International Organization for Standardiztaion, <u>국제표준화기구</u>에서 소프트웨어 개발, 운영, 유지보수 등을 체계적으로 관리하기 위한 <u>소프트웨어 생명주기 프로세스 표준을 제공</u></li><li><u>소프트웨어와 관련된 조직과 사람</u>, 소프트웨어 획득자, 공급자, 개발자, 운영자, 유지보수자, 품질보증관리자, 사용자 등의 이해관계자들이 <u>각자의 입장에서 수행해야 할 일을 정의하고 지속적으로 개선시키기 위한 활동</u></li><li><b>기본 생명 주기 프로세스</b><ul><li>획득 프로세스</li><li>공급 프로세스</li><li>개발 프로세스</li><li>운영 프로세스</li><li>유지보수 프로세스</li></ul></li><li><b>지원 생명 주기 프로세스</b><ul><li>문서화 프로세스</li><li>품질보증 프로세스</li><li>형상관리 프로세스</li><li>검증 프로세스</li><li>확인 프로세스</li><li>문제해결 프로세스</li><li>활동 검토 프로세스</li><li>유지보수 프로세스</li></ul></li><li><b>조직 생명 주기 프로세스</b><ul><li>기반구조 프로세스</li><li>관리 프로세스</li><li>개선 프로세스</li><li>훈련 프로세스</li></ul></li></ul><h4 id="2-cmmi-capability-maturity-model-integration"><a class="markdownIt-Anchor" href="#2-cmmi-capability-maturity-model-integration"></a> 2. CMMI; Capability Maturity Model Integration</h4><ul><li>능력 성숙도 모델 통합</li><li><u>소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도 평가 모델</u></li><li>CMMI 성숙도 5단계<table><thead><tr><th>단계</th><th>프로세스</th><th>특징</th></tr></thead><tbody><tr><td>초기</td><td>-</td><td>작업자 능력에 따라 성공 여부 결정</td></tr><tr><td>관리</td><td>규칙화된 프로세스</td><td>특정한 프로젝트 내의 프로세스 정의 및 수행</td></tr><tr><td>정의</td><td>표준화된 프로세스</td><td>조직의 표준 프로세스를 활용하여 업무 수행</td></tr><tr><td>정량적 관리</td><td>예측 가능한 프로세스</td><td>프로젝트를 정량적으로 관리 및 통제</td></tr><tr><td>최적화</td><td>지속적 개선 프로세스</td><td>프로세스 역량 향상을 위해 지속적인 프로세스 개선</td></tr></tbody></table></li></ul><h4 id="3-spice-software-process-improvement-and-capability-determination"><a class="markdownIt-Anchor" href="#3-spice-software-process-improvement-and-capability-determination"></a> 3. SPICE; Software Process Improvement and Capability dEtermination</h4><ul><li>소프트웨어 처리 개선 및 능력 평가 기준</li><li><u>소프트웨어 프로세스를 평가 및 개선하는 국제표준</u></li><li>ISO/IEC 15504</li><li>목적<ul><li>프로세스 개선을 위해 <u>개발 기관이 스스로 평가</u>하는 것</li><li>요구조건의 만족여부를 개발 조직이 스스로 평가하는 것</li><li>계약 체결을 위해 <u>수탁 기관의 프로세스를 평가</u>하는 것</li></ul></li><li>5개의 프로세스 범주와 40개의 세부 프로세스로 구성<ul><li>고객- 공급자 프로세스<ul><li>소프트웨어를 개발하여 고객에게 전달하는 것을 지원</li><li>소프트웨어의 정확한 운용 및 사용을 위한 프로세스로 구성</li><li>인수, 공급, 요구 도출, 운영</li><li>프로세스 수 : 10개</li></ul></li><li>공학 프로세스<ul><li>시스템과 소프트웨어 제품의 명세화, 구현, 유지보수하는 프로세스로 구성</li><li>개발, 소프트웨어 유지보수</li><li>프로세스 수 : 9개</li></ul></li><li>지원 프로세스<ul><li>소프트웨어 생명 주기에 다른 프로세스에 의해 이용되는 프로세스로 구성</li><li>문서화, 형상, 품질 보증, 검증, 확인, 리뷰, 감사, 품질문제해결</li><li>프로세스 수 : 8개</li></ul></li><li>관리 프로세스<ul><li>소프트웨어 생명 주기에서 프로젝트 관리자에 의해 사용되는 프로세스로 구성</li><li>관리, 프로젝트 관리, 품질 및 위험 관리</li><li>프로세스 수 : 4개</li></ul></li><li>조직 프로세스<ul><li>조직의 업무 목적 수립과 조직의 업무 목표 달성을 위한 프로세스로 구성</li><li>조직배치, 개선 활동 프로세스, 인력 관리, 기반 관리, 측정도구, 재사용</li><li>프로세스 수 : 9개</li></ul></li></ul></li><li>프로세스 수행 능력 6개<ul><li>불완전 Incomplete<ul><li>프로세스가 구현되지 않았거나 목적을 달성핮지 못한 단계</li></ul></li><li>수행 Performed<ul><li>프로세스가 수행되고 목적이 달성된 단계</li></ul></li><li>관리 Managed<ul><li>정의된 자원의 한도 내에서 그 프로세스가 작업 산출물을 인도하는 단계</li></ul></li><li>확립 Established<ul><li>소프트웨어 공학 원칙에 기반하여 정의된 프로세스가 수행되는 단계</li></ul></li><li>예측 Predictable<ul><li>프로세스가 목적 달성을 위해 통제되고, 양적인 측정을 통해 일관되게 수행되는 단계</li></ul></li><li>최적화 Optimizing<ul><li>프로세스 수행을 최적화하고, 지속적인 개선을 통해 업무 목적을 만족시키는 단계</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;응용 소프트웨어 개발&lt;/u&gt;에 사용할 &lt;b&gt;표준&lt;/b&gt;으로 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발표준" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%ED%91%9C%EC%A4%80/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-02T08:50:17.000Z</published>
    <updated>2020-05-02T08:50:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="1-소프트웨어-생명주기-모델"><a class="markdownIt-Anchor" href="#1-소프트웨어-생명주기-모델"></a> 1. 소프트웨어 생명주기 모델</h3><ul><li>소프트웨어를 어떻게 <u>개발</u>할 것인가에 대한 추상적 표현으로 <u>순차적 또는 병렬적 단계</u>로 나눈 것</li><li>소프트웨어 개발 생명주기<ul><li>타당성검토 -&gt; 분석 -&gt; 설계 -&gt; 개발 -&gt; 테스트 -&gt; 운영 -&gt; 유지보수 -&gt; 폐기</li></ul></li><li>소프트웨어 생명주기 모델 종류<ul><li>폭포수 모델</li><li>프로토타입 모델</li><li>나선형 모델</li><li>애자일 모델</li></ul></li></ul><h3 id="2-소프트웨어-개발-방법론"><a class="markdownIt-Anchor" href="#2-소프트웨어-개발-방법론"></a> 2. 소프트웨어 개발 방법론</h3><ul><li><u>소프트웨어 개발, 유지보수</u> 등에 필요한 여러 가지 일들의 수행 방법과 이러한 일들을 효율적으로 수행하려는 과정에서 필요한 <u>각종 기법 및 도구를 체계적으로 정리하여 표준화</u>한 것</li><li>개발 방법론의 종류<ul><li>구조적 방법론</li><li>정보공학 방법론</li><li>객체지향 방법론</li><li>컴포넌트 기반 방법론</li><li>애자일 방법론</li><li>제품 계열 방법론</li></ul></li></ul><h3 id="3-요구공학-방법론"><a class="markdownIt-Anchor" href="#3-요구공학-방법론"></a> 3. 요구공학 방법론</h3><ul><li><u>요구사항의 지속적인 중요성 증대</u>와 <u>채계적인 관리</u>의 필요성이 대두되어 시스템의 요구사항을 <u>정의</u>하고, <u>문서화</u>하고, <u>관리</u>하는 프로세스</li><li>요구공학 프로세스<ul><li>도출</li><li>분석</li><li>명세</li><li>확인/검증</li></ul></li></ul><h3 id="4-비용산정-모델"><a class="markdownIt-Anchor" href="#4-비용산정-모델"></a> 4. 비용산정 모델</h3><ul><li>소프트웨어의 <u>개발 규모를 소요되는 인원, 자원, 기간 등으로 확인</u>하여 실행 가능한 계획을 수립하기 위해 <u>필요한 비용을 예측</u>하는 과학적이고 합리적인 활동</li><li>산정기법 종류<ul><li>하향식 산정기법<ul><li>전문가 감정 기법</li><li>델파이 기법</li></ul></li><li>상향식 산정기법<ul><li>LOC 기법</li><li>Effort Per Task 기법</li></ul></li><li>수학적 산정기법<ul><li>COCOMO 모형</li><li>Putnam 모형</li><li>FP 모형</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;1-소프트웨어-생명주기-모델&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 비용 산정 모델</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95%EB%AA%A8%EB%8D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95%EB%AA%A8%EB%8D%B8/</id>
    <published>2020-05-02T08:11:56.000Z</published>
    <updated>2020-05-02T08:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="소프트웨어-비용-산정의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-비용-산정의-개념"></a> 소프트웨어 비용 산정의 개념</h3><ul><li>소프트웨어의 <u>개발 규모를 소요되는 인원, 자원, 기간 등으로 확인</u>하여 실행 가능한 계획을 수립하기 위해 <u>필요한 비용을 예측</u>하는 과학적이고 합리적인 활동</li><li>비용산정을 통해 발주자는 소프트웨어의 합리적인 가격을 확인할 수 있고 개발자는 개발에 필요한 <u>정당한 비용</u> 요구 가능</li><li>산정기법 종류<ul><li>하향식 산정기법</li><li>상향식 산정기법</li></ul></li></ul><h3 id="소프트웨어-비용-결정-요소"><a class="markdownIt-Anchor" href="#소프트웨어-비용-결정-요소"></a> 소프트웨어 비용 결정 요소</h3><ul><li>프로젝트 요소<ul><li>제품 복잡도</li><li>시스템 크기</li><li>요구되는 신뢰도<ul><li>일정기간 내 주어진 조건하에서 프로그램이 필요한 기능을 수행하는 척도</li></ul></li></ul></li><li>자원 요소<ul><li>인적자원</li><li>하드웨어 / 소프트웨어 자원</li></ul></li><li>생산성 요소<ul><li>개발자 능력<ul><li>개발자 전문지식과 경험, 이해도, 창의력</li></ul></li><li>개발 기간</li></ul></li></ul><h3 id="산정기법의-종류"><a class="markdownIt-Anchor" href="#산정기법의-종류"></a> 산정기법의 종류</h3><h4 id="1-하향식-산정기법"><a class="markdownIt-Anchor" href="#1-하향식-산정기법"></a> 1. 하향식 산정기법</h4><ul><li><u>과거의 유사 경험을 바탕</u>으로 회의를 통해 산정하는 <u>비과학적인 기법</u></li><li>종류<ul><li>전문가 감정 기법<ul><li>조직 내 경험이 있는 2명 이상의 전문가에게 비용 산정을 의뢰하는 산정기법으로 개인적이고 주관적</li></ul></li><li>델파이 기법<ul><li>전문가들의 편견이나 분위기에 지배되지 않도록 한 명의 조정자와 여러 전문가의 의견을 종합하여 비용을 산정</li></ul></li></ul></li></ul><h4 id="2-상향식-산정기법"><a class="markdownIt-Anchor" href="#2-상향식-산정기법"></a> 2. 상향식 산정기법</h4><ul><li><u>세부적인 작업 단위별로 비용을 산정한 후 합산</u></li><li>LOC 기법 : Line Of Code<ul><li>각 기능의 원시 코드 라인 수의 비관치, 낙관치, 기대치를 측정하여 예측치 구함</li><li>공식<ul><li>노력 = 개발기간 x 투입인원<br />= LOC/1인당 월평균 코드 라인 수</li><li>개발 비용 = 노력 x 1인당 월평균 인건비</li><li>생산성 = LOC/노력</li></ul></li></ul></li><li>Effort Per Task 기법<ul><li>각 기능을 구현시키는데 필요한 노력을 생명 주기의 각 단계별로 선정하며, LOC보다 더 정확함</li></ul></li></ul><h4 id="3-수학식-산정기법"><a class="markdownIt-Anchor" href="#3-수학식-산정기법"></a> 3. 수학식 산정기법</h4><ul><li><u>경험적 추정 기법 또는 실험적 추정 기법</u>, 개발 비용 산정의 자동화가 목표</li><li>비용을 자동으로 산정하기 위해서 사용되는 공식은 과거 유사한 프로젝트를 기반으로 <u>경험적으로 유도된 것</u></li><li>수학적 산정기법 종류<ul><li>COCOMO 모형</li><li>Putnam 모형</li><li>기능 점수 FP : Function Point</li></ul></li></ul><h5 id="1-cocomo-constructive-cost-model-모형"><a class="markdownIt-Anchor" href="#1-cocomo-constructive-cost-model-모형"></a> 1. COCOMO; COnstructive COst MOdel 모형</h5><ul><li>보헴이 제안한 것으로 원시 프로그램의 규모인 LOC(원시 코드 라인수)에 의한 비용 산정 기법</li><li><u>규모와, 소프트웨어 종류에 따라 조직형, 반분리형, 내장형으로 분류</u><ul><li>Organic Model 조직형<ul><li>5만라인의 소프트웨어로 사무처리용, 업무용, 과학용 응용 소프트웨어에 적합</li><li>노력(MM) = 2.4 X (KDSI)^1.05</li><li>개발기간(TDEV) = 2.5 X (MM)^0.38</li></ul></li><li>Semi-Detached Model 반분리형<ul><li>조직형과 내장형의 중간형</li><li>트랜잭션 처리시스템, 운영체제, DBMS등 30만 라인 이하에 적합</li></ul></li><li>Embedded Model 내장형<ul><li>초대형 규모로 30만 라인 이상</li><li>MM = 3.6 X (KDSI)^1.20</li><li>TDEV = 2.5 X (MM)^0.32</li></ul></li><li>KSDI : Kilo Delivered Source Intruction<ul><li>전체 라인수를 1,000 단위로 묶은 것</li></ul></li></ul></li></ul><h4 id="2-putnam-모형"><a class="markdownIt-Anchor" href="#2-putnam-모형"></a> 2. Putnam 모형</h4><ul><li>소프트웨어 생명 주기의 전 과정 동안에 사용될 <u>노력의 분포를 가정</u>해주는 모형</li><li>시간에 따른 함수로 표현되는 Rayleigh-Norden 곡선의 노력 분포도를 기초로함</li><li><img src="https://leadinganswers.typepad.com/leading_answers/images/pnr_1.jpg" alt="Rayleigh-Norden곡선" /></li><li><u>대형 프로젝트의 노력 분포 산정에 이용되는 기법</u></li><li>개발 기간이 늘어날수록 프로젝트 적용 인원의 노력이 감소함</li><li><img src="https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory2&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F137757344CB3349EB2828A" alt="개발 노력" /></li></ul><h4 id="3-기능-점수-fp-모형"><a class="markdownIt-Anchor" href="#3-기능-점수-fp-모형"></a> 3. 기능 점수 FP 모형</h4><ul><li>알브레히트가 제안한 것으로, 소프트웨어 기능을 증대 시키는 요인(<u>입력, 출력, 질의, 파일, 인터페이스의 개수</u>)별로 <u>단순, 보통, 복잡 가중치 부여</u></li><li>요인별 가중치를 합산하여 총 기능 점수를 산출하며 총 기능 점수와 영향도를 이용하여 기능 점수를 구한 후 이를 이용해서 비용을 산정하는 기법</li><li>기능점수 = 총 기능 점수 x [0.65 + (0.1 x 총 영향도)]</li></ul><h3 id="자동화-추정-도구"><a class="markdownIt-Anchor" href="#자동화-추정-도구"></a> 자동화 추정 도구</h3><ul><li>비용 산정의 자동화를 위해 개발된 도구로는 SLIM 과 ESTIMACS가 있음</li><li>SLIM<ul><li>Payleigh-Norden 곡선과 Putnam 예측 모델을 기초로 하여 개발된 자동화 추정 도구</li></ul></li><li>ESTIMACS<ul><li>다양한 프로젝트와 개인별 요소를 수용하도록 FP모형을 기초로 하여 개발된 자옹화 추정 도구</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-비용-산정의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="비용산정모델" scheme="https://hyeonukdev.github.io/tags/%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95%EB%AA%A8%EB%8D%B8/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 요구공학 방법론</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99%EB%B0%A9%EB%B2%95%EB%A1%A0/</id>
    <published>2020-05-02T07:52:54.000Z</published>
    <updated>2020-05-02T07:52:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="요구공학의-개념"><a class="markdownIt-Anchor" href="#요구공학의-개념"></a> 요구공학의 개념</h3><ul><li>시스템의 요구사항을 <u>정의</u>하고, <u>문서화</u>하고, <u>관리</u>하는 프로세스</li><li><u>요구사항의 지속적인 중요성 증대</u></li><li>요구사항에 관한 <u>체계적인 관리</u>의 필요성 대두</li></ul><h3 id="요구공학의-목적"><a class="markdownIt-Anchor" href="#요구공학의-목적"></a> 요구공학의 목적</h3><ul><li><u>이해관계자 사이에 효과적인 의사소통 수단을 제공</u>하고 요구사항에 대한 <u>공통 이해를 설정</u></li><li>요구사항 손실 방지 및 에러 감지로 불필요한 비용을 절감하고 요구사항 변경 추적을 가능하게 함</li></ul><h3 id="요구공학-프로세스"><a class="markdownIt-Anchor" href="#요구공학-프로세스"></a> 요구공학 프로세스</h3><p><img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F234CEB34588B401809" alt="요구공학프로세스" /></p><ul><li><b>기능</b>은 <b>없음</b></li></ul><h4 id="1-requirement-elicitation-요구사항-도출"><a class="markdownIt-Anchor" href="#1-requirement-elicitation-요구사항-도출"></a> 1. Requirement Elicitation 요구사항 도출</h4><ul><li>소프트웨어 가 해결해야할 <u>문제를 이해하고 요구사항이 어디에 있고, 어떻게 수집할 것</u>인가와 관련</li><li>활용기법<ul><li>인터뷰</li><li>시나리오</li><li>작업분석</li><li>BRP : Business Process Reengineering</li><li>RFP : Request for Proposla</li><li>벤치마킹</li></ul></li></ul><h4 id="2-requirement-aanlysis-요구사항-분석"><a class="markdownIt-Anchor" href="#2-requirement-aanlysis-요구사항-분석"></a> 2. Requirement Aanlysis  요구사항 분석</h4><ul><li><u>요구사항들 간의 상충을 해결하고, 소프트웨어의 범위를 파악하면 소프트웨어가 환경과 어떻게 상호작용하는지 이해</u></li><li>활용기법<ul><li>구조적 분석<ul><li>DFD : Data Flow Diagram</li><li>Data Dictionary</li><li>ERD : Entity Relationship Diagram</li></ul></li><li>Use Case 기반 분석<ul><li>UML</li><li>모델링</li></ul></li></ul></li></ul><h4 id="3-requirement-specification-요구사항-명세"><a class="markdownIt-Anchor" href="#3-requirement-specification-요구사항-명세"></a> 3. Requirement Specification 요구사항 명세</h4><ul><li>체계적으로 검토, 평가, 승인될 수 있는 <u>문서 작성</u></li><li><u>시스템 정의, 시스템 요구사항, 소프트웨어 요구사항 작성</u></li><li>활용기법<ul><li>ER 모델링</li><li>FSM : Finite State Machine, 유한 상태 기계</li><li>SADT : Structered Analysis and Design Technique, 구조화 해석 설계 기법</li></ul></li></ul><h4 id="4-validationverification-요구사항-확인검증"><a class="markdownIt-Anchor" href="#4-validationverification-요구사항-확인검증"></a> 4. Validation/Verification 요구사항 확인/검증</h4><ul><li>분석가가 <u>요구사항을 이해 했는지 확인(Validation)</u></li><li>요구사항 문서가 <u>일관성 있고 완전한지 검증(Verification)</u><ul><li>베이스라인으로 설정하는 활동</li></ul></li><li>이해관계자들이 문서 검토 및 형상 관리 수행</li><li>리소스가 요구사항에 할당되기 전에 문제 파악을 위한 검증 수행</li><li>활용기법<ul><li>검토</li><li>프로토타이핑</li><li>모델 검증</li><li>인수테스트</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;요구공학의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="요구공학방법론" scheme="https://hyeonukdev.github.io/tags/%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - SW개발 방법론</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/</id>
    <published>2020-05-02T07:52:50.000Z</published>
    <updated>2020-05-02T07:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="소프트웨어-개발-방법론의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론의-개념"></a> 소프트웨어 개발 방법론의 개념</h3><ul><li><u>소프트웨어 개발, 유지보수</u> 등에 필요한 여러 가지 일들의 수행 방법과 이러한 일들을 효율적으로 수행하려는 과정에서 필요한 <u>각종 기법 및 도구를 체계적으로 정리하여 표준화</u>한 것</li><li>소프트웨어 개발 방법론의 목적은 <u>소프트웨어 생산성과 품질 향상</u></li><li>개발 방법론의 종류<ul><li>구조적 방법론</li><li>정보공학 방법론</li><li>객체지향 방법론</li><li>컴포넌트 기반 방법론</li><li>애자일 방법론</li><li>제품 계열 방법론</li></ul></li></ul><h4 id="1-구조적-방법론"><a class="markdownIt-Anchor" href="#1-구조적-방법론"></a> 1. 구조적 방법론</h4><ul><li>폭포수 모델과 같이 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 <u>문서화하는 체계적인 분석 이론</u></li><li>프로그램 <u>로직 중심의 방법론</u></li><li>쉬운 이해 및 검증 가능한 <u>프로그램 코드 생성이 목적</u></li></ul><h4 id="2-정보공학-방법론"><a class="markdownIt-Anchor" href="#2-정보공학-방법론"></a> 2. 정보공학 방법론</h4><ul><li>정보시스템 개발에 <u>필요한 관리절차와 작업기법을 체계화한 방법론</u></li><li><u>자료(Data) 중심의 방법론</u></li><li><u>대규모 정보시스템을 구축</u>하는데 적합</li></ul><h4 id="3-객체지향-방법론"><a class="markdownIt-Anchor" href="#3-객체지향-방법론"></a> 3. 객체지향 방법론</h4><ul><li>현실 세계의 개체를 기계의 부품처럼 하나의 객체로 만들어, <u>객체들을 조립해서 필요한 소프트웨어를 구현</u>하는 방법론</li><li>설계 시 <u>자료와 자료에 가해지는 프로세서를 묶어 정의</u>하고 관계를 규명</li><li>객체지향 방법론의 구성 요소에는 클래스, 객체, 메시지</li><li>특징<ul><li>캡슐화</li><li>정보은닉</li><li>추상화</li><li>상속성</li><li>다형성</li></ul></li></ul><h4 id="4-cbd-componet-based-development-컴포넌트-기반-방법"><a class="markdownIt-Anchor" href="#4-cbd-componet-based-development-컴포넌트-기반-방법"></a> 4. CBD; Componet Based Development 컴포넌트 기반 방법</h4><ul><li>기존의 시스템이나 소프트웨어를 구성하는 <u>컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론</u></li><li>컴포넌트의 <b>재사용</b>이 가능하여 시간과 노력을 절감</li><li><u>유지 보수 비용을 최소화하고 생산성 및 품질을 향상</u></li></ul><h4 id="5-agile-애자일-방법론"><a class="markdownIt-Anchor" href="#5-agile-애자일-방법론"></a> 5. Agile 애자일 방법론</h4><ul><li><u>고객의 요구사항 변화에 유연하게 대응</u>할 수 있도록 일정한 주기를 반복하면서 개발 과정을 진행하는 방법론</li><li>소규모 프로젝트, 고도로 숙달된 개발자, 급변하는 요구사항에 적합</li></ul><h4 id="6-제품-계열-방법론"><a class="markdownIt-Anchor" href="#6-제품-계열-방법론"></a> 6. 제품 계열 방법론</h4><ul><li><u>특정한 제품에 적용하고 싶은 <b>공통된 기능</b>을 정의하여 개발</u>하는 방법론</li><li><u>임베디드 소프트웨어</u>를 만드는데 적합<ul><li>입베디드 SW</li><li>디지털TV, 냉장고 등 해당 제품의 특정기능에 맞게 특화되어 제품 자체에 포함된 SW</li></ul></li><li>영역공학<ul><li>영역 분석, 영역 설계, 핵심 자산을 구현하는 영역</li></ul></li><li>응용공학<ul><li>제품 요구 분석, 제품 설게, 제품을 구현하는 영역</li></ul></li><li>영역공학과 응용공학의 연계를 위해 제품의 요구사항, 아키텍처, 조립 생산이 필요</li></ul><h3 id="소프트웨어-개발-방법론-결정"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-결정"></a> 소프트웨어 개발 방법론 결정</h3><ul><li>프로젝트 관리와 재사용 현황을 소프트웨어 개발 방법론에 반영하고, 확정된 소프트웨어 생명 주기와 개발 방법론에 맞춰 소프트웨어 개발 단계, 활동, 작업, 절차 등을 정의하는 것</li></ul><h3 id="소프트웨어-개발-방법론-결정-절차"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-결정-절차"></a> 소프트웨어 개발 방법론 결정 절차</h3><ol><li><u>프로젝트 관리</u>와 <u>재사용 현황</u>을 소프트웨어 개발 방법론에 반영</li><li>개발 단계별 작업 및 절차를 소프트웨어 생명 주기에 맞춰 수립</li><li>결정된 소프트웨어 개발 방법론의 개발 단계별 활동 목적, 작업 내용, 산출물에 대한 매뉴얼 작성</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-개발-방법론의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - SW 생명주기 모델</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0%EB%AA%A8%EB%8D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0%EB%AA%A8%EB%8D%B8/</id>
    <published>2020-05-02T06:44:24.000Z</published>
    <updated>2020-05-02T06:44:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론활용"><a class="markdownIt-Anchor" href="#sw개발방법론활용"></a> SW개발방법론활용</h2><h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><ul><li><u>소프트웨어 개발 생명주기 모델</u>의 개념과 모델 종류별 특징을 이해</li><li>정형화된 <u>개발방법론의 특징</u>을 고려하여 응용 소프트웨어 특성에 맞는 개발방법론을 선정</li><li>소프트웨어 공학기술의 요구사항 분석 기법인 <u>요구 공학 방법론을 이해</u></li><li><u>소프트웨어 비용 산정 모델</u>의 종류와 특징을 이해</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>소프트웨어 개발 생명 주기<ul><li>타당성검토 -&gt; 분석 -&gt; 설계 -&gt; 개발 -&gt; 테스트 -&gt; 운영 -&gt; 유지보수 -&gt; 폐기단계의 생명주기를 가짐</li></ul></li><li>요구공학<ul><li>요구사항을 정의하고, 문서화, 관리하는 프로세스</li></ul></li></ul><h4 id="software-life-cycle-소프트웨어-개발-생명주기-개념"><a class="markdownIt-Anchor" href="#software-life-cycle-소프트웨어-개발-생명주기-개념"></a> Software Life Cycle 소프트웨어 개발 생명주기 개념</h4><ul><li>소프트웨어를 어떻게 <u>개발</u>할 것인가에 대한 추상적 표현으로 <u>순차적 또는 병렬적 단계</u>로 나눈 것</li><li>소프트웨어 생명주기를 표현하는 형태</li><li>소프트웨어 개발 생명주기<ul><li>타당성검토 -&gt; 분석 -&gt; 설계 -&gt; 개발 -&gt; 테스트 -&gt; 운영 -&gt; 유지보수 -&gt; 폐기</li></ul></li><li>개발자는 <u>문제의 유형이나 개발 방법 등에 따라 특정 모델을 선택</u></li><li>소프트웨어 생명주기 모델 종류<ul><li>폭포수 모델</li><li>프로토타입 모델</li><li>나선형 모델</li><li>애자일 모델</li></ul></li></ul><h4 id="1-waterfall-model-폭포수-모델"><a class="markdownIt-Anchor" href="#1-waterfall-model-폭포수-모델"></a> 1. Waterfall Model 폭포수 모델</h4><ul><li><u>각 단계를 확실히 완료</u>한 후 그 결과를 검토하고 <u>승인 과정</u>을 거친 후 다음 단계를 진행하는 개발 방법론</li><li><u>고전적 라이프 사이클 패러다임</u>이라고 하며, 개발 과정의 앞 단계가 완료되어야만 다음 단계로 넘어갈 수 있는 <u>선형 순차적 모형</u></li><li><img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F99D62F3359ADDCFE28" alt="폭포수모델" /></li></ul><h4 id="2-prototype-model-프로토타입-모델"><a class="markdownIt-Anchor" href="#2-prototype-model-프로토타입-모델"></a> 2. Prototype Model 프로토타입 모델</h4><ul><li><u>사용자 요구사항을 정확히 파악</u>하기 위해 실제 개발될 <u>소프트웨어에 대한 프로토타입을 만들어 최종 결과물을 예측</u>하는 모형</li><li>시제품은 발주자나 개발자 모두에게 공동의 참조 모델을 제공</li><li>최종 결과물이 만들어지기 전에 의뢰자가 최종 결과물의 일부 또는 모형을 볼 수 있음</li><li><u>추후 구현 단계에성의 구현의 골격이 됨</u></li><li>소프트웨어 개발이 완료된 시점에서 오류가 발견되는 <u>폭포수 모형의 단점을 보완</u>하기 위한 모형</li><li><img src="https://lh3.googleusercontent.com/proxy/WJTb4WBSlrTj-hjGqXL9ezCJ8GnC4OzB0Cv9wEaTcJMHXXikKcHPng6yw6EOoUAcxIMtOqn50_5KUPMa1ptWSR_p36Z3rSnyn8wbq4YuYe7ERzsQBw" alt="프로토타입모델" /></li></ul><h4 id="3-spiral-model-나선형-모델"><a class="markdownIt-Anchor" href="#3-spiral-model-나선형-모델"></a> 3. Spiral Model 나선형 모델</h4><ul><li>보헴이 제안한 것으로, <u>폭포수 모형과 프로토타입 모형의 장점에 <b>위험 분석 기능</b>을 추가</u>한 모형</li><li>나선을 따라 돌 듯이 여러 번의 소프트웨어 개발 과정을 거쳐 점진적으로 완벽하게 소프트웨어를 개발하는 것으로 <u>점진적 모형</u>이라고도 함</li><li>개발 순서<ul><li>계획 및 정의 -&gt; 위험 분석 -&gt; 공학적 개발 -&gt; 고객평가</li></ul></li><li>소프트웨어를 개발하면서 발생할 수 있는 <u>위험을 관리하고 최소화하는 것이 목적</u></li><li>비용이 많이 들고 시간이 오래 걸리는 <b>대규모</b> <u>시스템 구축에 적합함</u></li></ul><h4 id="4-agile-model-애자일-모델"><a class="markdownIt-Anchor" href="#4-agile-model-애자일-모델"></a> 4. Agile Model 애자일 모델</h4><ul><li>애자일은 ‘민첩한’, '기민한’이라는 의미</li><li>스프린트 또는 이터레이션이라고 불리는 <u><b>짧은 개발 주기를 반복</b>하며 개발과정 진행</u></li><li><u>각 개발주기마다 만들어지는 결과물</u>에 대한 <b>고객의 평가와 요구를</b> 적극적으로 수용</li><li><u><b>소규모 프로젝트</b>, 고도로 숙달된 개발자, 급변하는 요구사항에 적합</u></li><li><img src="https://post-phinf.pstatic.net/MjAxODEwMDJfMTQg/MDAxNTM4NDQ5NzM1MTM5.BpLR3vJkFRD5OBMWcyXG1qlE0pMsRhafMIV8MssiY1gg.vuCWTel5XbZTtId_F-Lp3Rh_I2Ckw6DRsoX9shdGtDIg.PNG/%EC%95%A0%EC%9E%90%EC%9D%BC%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4.png?type=w1200" alt="애자일모델" /></li><li>애자일 개발 핵심 4가지<ol><li>프로세스와 도구보다 <u>개인과 그들의 협업</u>에 더 가치를 둔다.</li><li>포괄적인 문서화보다 <u>제대로 작동</u>하는 소프트웨어에 더 가치를 둔다.</li><li>계약 협상보다 <u>고객과의 협력</u>에 더 가치를 둔다.</li><li>계획에 따르기보다 <u>변화에 대응</u>하는 것에 더 가치를 둔다.</li></ol></li><li>개발 모형<ul><li>SCRUM<ul><li>매일 정해진 시간에 정해진 장소에서 짧은 시간의 개발을 하는 팀을 위한 프로젝트 관리 중심의 방법론</li><li>30일 마다 동작 가능한 제품을 제공하는 스프린트(Sprint)를 중심으로 한다.</li><li>Backlog : 제품과 프로젝트에 대한 요구사항</li><li>Sprint : 30일 단위 반복(Iteration)의 짧은 개발기간으로 분리하여 반복적 수행</li><li>스크럼미팅 : 매일15분 정도 미팅으로 오늘과 내일의 해야 할 일 계획 수립</li><li>스크럼마스터 : 프로젝트 리더, 스크럼 수행 시 문제 인식 및 해결하고자 노력</li></ul></li><li>XP : eXtreme Programming<ul><li>의사소통 개선과 즉각적인 피드백에 의한 단순한 코딩으로 SW품질을 높이기 위한 방법론</li><li>1~3주 반복(Iteration)</li><li>5가지 갗치<ul><li>용기</li><li>단순성</li><li>의사소통</li><li>피드백</li><li>존경</li></ul></li></ul></li><li>Kanban</li><li>Lean<ul><li>도요타 생산시스템을 재정립한 경영 방법론인 Lean 시스템의 품질기법을 소프트웨어 개발에 적용한 개발 방법론</li><li>낭비요소 제거를 통한 프로세스 향상이 목적</li><li>7가지 원칙<ul><li>낭비제거</li><li>품질 내재화</li><li>지식 창출</li><li>늦은 확정</li><li>빠른 인도</li><li>사람 존중</li><li>전체 최적화</li></ul></li></ul></li><li>Crystal</li><li>ASD : Adaptive Software Development</li><li>FDD : Feature Driven Development</li><li>DSDM : Dynamic System Development Method</li><li>DAD : Disciplined Agile Delivery</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론활용&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론활용&quot;&gt;&lt;/a&gt; SW개발방법론활용&lt;/h2&gt;
&lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-01T13:20:18.000Z</published>
    <updated>2020-05-01T13:20:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db구축관리"><a class="markdownIt-Anchor" href="#db구축관리"></a> DB구축관리</h2><h3 id="1-it신기술-및-데이터베이스-기술-트렌드-정보"><a class="markdownIt-Anchor" href="#1-it신기술-및-데이터베이스-기술-트렌드-정보"></a> 1. IT신기술 및 데이터베이스 기술 트렌드 정보</h3><ul><li>빅데이터</li><li>브로드 데이터</li><li>디지털 아카이빙</li><li>메타 데이터</li><li>데이터 다이어트</li><li>하둡</li><li>타조</li></ul><h3 id="2-데이터베이스-관리기능"><a class="markdownIt-Anchor" href="#2-데이터베이스-관리기능"></a> 2. 데이터베이스 관리기능</h3><ul><li>회복<ul><li>트랜잭션들을 수행하는 도중에 <u>장애가 발생하여</u> 데이터베이스가 손상되었을 때 <u>손상되기 이전의 정상 상태로 복구</u>하는 작업</li></ul></li><li>병행제어<ul><li><u>동시에 여러 개의 트랜잭션을 병행 수행할 때, 동시에 실행되는 트랜잭션들이 데이터베이스의 일관성을 파괴하지 않도록 트랜잭션 간의 상호작용을 제어하는 것</u></li></ul></li></ul><h3 id="3-데이터베이스-표준화"><a class="markdownIt-Anchor" href="#3-데이터베이스-표준화"></a> 3. 데이터베이스 표준화</h3><ul><li>시스템을 구성하는 데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것</li><li>데이터베이스 표준화 구성요소<ul><li>데이터 표준</li><li>데이터 관리조직</li><li>데이터 표준화 절차</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - DB 표준화</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%ED%91%9C%EC%A4%80%ED%99%94/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%ED%91%9C%EC%A4%80%ED%99%94/</id>
    <published>2020-05-01T13:04:38.000Z</published>
    <updated>2020-05-01T13:04:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db표준화"><a class="markdownIt-Anchor" href="#db표준화"></a> DB표준화</h2><h3 id="데이터-표준화의-개념"><a class="markdownIt-Anchor" href="#데이터-표준화의-개념"></a> 데이터 표준화의 개념</h3><ul><li>시스템을 구성하는 <u>데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것</u></li><li>데이터 표준화 작업은 데이터의 정확한 의미를 파악할 수 잇게 할 뿐 만아니라 데이터에 대한 상반된 시각을 조정하는 역할을 수행</li></ul><h3 id="데이터-표준화의-대상"><a class="markdownIt-Anchor" href="#데이터-표준화의-대상"></a> 데이터 표준화의 대상</h3><ul><li>데이터 명칭<ul><li>데이터를 유일하게 구분할 수 있는 유일성, 의미 전달의 충분성, ㄱ리고 업무적 보편성을 갖는 이름으로 정의</li></ul></li><li>데이터 정의<ul><li>데이터를 제3자의 입장에서도 쉽게 이해할 수 있도록 해당 데이터가 의미하는 범위 및 자격 요건을 규정</li></ul></li><li>데이터 형식<ul><li>업무 규칙 및 사용 목적과 유사한 데이터에 대해 일관되게 데이터 형식을 정의함으로써 데이터 입력 오류, 통제 위험 등을 최소화</li></ul></li><li>데이터 규칙<ul><li>기본 값, 허용 값, 허용 범위 등과 같이 발생할 수 있는 데이터 값을 사전에 지정함으로써 데이터의 정합성 및 완전성을 향상</li></ul></li></ul><h3 id="데이터-표준화의-기대효과"><a class="markdownIt-Anchor" href="#데이터-표준화의-기대효과"></a> 데이터 표준화의 기대효과</h3><ul><li>동일한 데이터에 대해 동일한 명칭을 지정하면서 <u>명확한 의사소통 가능</u></li><li>표준화된 데이터를 사용하면 필요한 데이터의 의미나 위치 등을 쉽게 파악 가능</li><li>데이터 표준에 따라 데이터 형식 및 규칙을 적용하면 <u>입력 오류를 방지하고 잘못된 데이터로 인한 의사 결정의 오류를 줄여 데이터 품질을 향상</u></li><li>데이터 표준에 따라 데이터를 전사적으로 관리하면 시스템 간 데이터 공유 시 데이터 변환이나 정제 작업을 수행하지 않아도 됨</li><li>향후 <u>데이터 유지보수 및 운영의 효율성, 관리 비용 절감 가능</u></li></ul><h3 id="데이터-표준"><a class="markdownIt-Anchor" href="#데이터-표준"></a> 데이터 표준</h3><ul><li>데이터 모델이나 데이터베이스에서 정의할 수 있는 모든 <u>오브젝트를 대상</u>으로 데이터 표준화를 수행하는 것이 <u>이상적이나 주로 관리해야될 필요성이 있는 오브젝트만</u>을 대상으로 데이터 표준화</li><li>데이터 표준의 종류<ul><li>표준 단어<ul><li>업무에서 사용하고 일정한 의미를 갖고 있는 최소 단위의 단어를 의미</li></ul></li><li>표준 도메인<ul><li>문자형, 숫자형, 날짜형, 시간형과 같이 칼럼을 성질에 따라 그룹핑한 개념</li></ul></li><li>표준 코드<ul><li>선택할 수 있는 값을 정형화하기 위해 기준에 맞게 이미 정의된 코드 값</li></ul></li><li>표준 용어<ul><li>단어, 도메인, 코드 표준이 정의되면 이를 바탕으로 표준 용어를 구성</li></ul></li></ul></li></ul><h3 id="데이터-관리-조직"><a class="markdownIt-Anchor" href="#데이터-관리-조직"></a> 데이터 관리 조직</h3><ul><li>전사적으로 수립된 데이터 표준 원칙, 데이터 표준, 데이터 표준 준수 여부 관리 등을 위해서 데이터관리자 역할이 요구됨</li></ul><h3 id="데이터-표준화-절차"><a class="markdownIt-Anchor" href="#데이터-표준화-절차"></a> 데이터 표준화 절차</h3><ol><li>데이터 표준화 요구사항 수집<ul><li>데이터표준화와 관련된 요구사항 수집</li><li>시스템별 데이터 표준 수집</li><li>표준화 현황 진단</li></ul></li><li>데이터 표준 정의<ul><li>표준화 원칙 정의</li><li>표준 용아, 표준 단어, 표준 도메인, 표준 코드 등을 데이터 표준 정의</li></ul></li><li>데이터 표준 확정<ul><li>데이터 표준 검토, 확정, 공표</li></ul></li><li>데이터 표준 관리<ul><li>데이터 표준 적용, 준수, 검사 등 데이터 표준 관리절차 수립</li><li>데이터 표준 이행</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db표준화&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB표준화" scheme="https://hyeonukdev.github.io/tags/DB%ED%91%9C%EC%A4%80%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - DB 관리 기능</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A6%AC%EA%B8%B0%EB%8A%A5/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A6%AC%EA%B8%B0%EB%8A%A5/</id>
    <published>2020-05-01T12:51:25.000Z</published>
    <updated>2020-05-01T12:51:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db구축관리"><a class="markdownIt-Anchor" href="#db구축관리"></a> DB구축관리</h2><h3 id="db관리기능"><a class="markdownIt-Anchor" href="#db관리기능"></a> DB관리기능</h3><h3 id="회복"><a class="markdownIt-Anchor" href="#회복"></a> 회복</h3><h4 id="1-recovery-회복의-개념"><a class="markdownIt-Anchor" href="#1-recovery-회복의-개념"></a> 1. Recovery 회복의 개념</h4><ul><li>트랜잭션들을 수행하는 도중에 <u>장애가 발생하여</u> 데이터베이스가 손상되었을 때 <u>손상되기 이전의 정상 상태로 복구</u>하는 작업<ul><li>트랜잭션<ul><li>데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산</li></ul></li></ul></li></ul><h4 id="2-장애의-유형"><a class="markdownIt-Anchor" href="#2-장애의-유형"></a> 2. 장애의 유형</h4><ul><li>트랜잭션 장애<ul><li>입력 데이터 오류, 불명확한 데이터, 시스템 자원 요구의 과다등 트랜잭션 내부의 비정상적인 상황으로 인하여 프로그램 실행이 중지되는 현상</li></ul></li><li>시스템 장애<ul><li>데이터베이스에 손상을 입히지는 않으나 하드웨어 오동작, 소프트웨어의 손상, 교착 상태 등에 의해 모든 트랜잭션의 연속적인 수행에 장애를 주는 현상</li></ul></li><li>미디어 장애<ul><li>저장장치인 디스크 블록의 손상이나 디스크 헤드의 충돌 등에 의해 데이터베이스의 일부 또는 전부가 물리적으로 손상된 상태</li></ul></li></ul><h4 id="3-recovery-management-회복-관리기"><a class="markdownIt-Anchor" href="#3-recovery-management-회복-관리기"></a> 3. Recovery Management 회복 관리기</h4><ul><li>회복관리기는 DBMS의 구성요소</li><li><u>트랜잭션 실행이 성공적으로 완료되지 못하면</u> 트랜잭션이 데이터베이스에 생성했던 <u>모든 변화를 취소(Undo)</u>시키고 <u>트랜잭션 수행 이전의 원래 상태로 복구</u>하는 역할</li><li>메모리 덤프, 로그를 이용하여 회복을 수행</li></ul><h3 id="병행제어"><a class="markdownIt-Anchor" href="#병행제어"></a> 병행제어</h3><h4 id="1-concurrency-control-병행제어의-개념"><a class="markdownIt-Anchor" href="#1-concurrency-control-병행제어의-개념"></a> 1. Concurrency Control 병행제어의 개념</h4><ul><li><u>동시에 여러 개의 트랜잭션을 병행 수행할 때, 동시에 실행되는 트랜잭션들이 데이터베이스의 일관성을 파괴하지 않도록 트랜잭션 간의 상호작용을 제어하는 것</u></li></ul><h4 id="2-병행제어의-목적"><a class="markdownIt-Anchor" href="#2-병행제어의-목적"></a> 2. 병행제어의 목적</h4><ul><li>데이터베이스의 공유를 최대화</li><li>시스템의 활용도를 최대화</li><li>데이터베이스의 일관성을 <b>유지</b></li><li>사용자에 대한 응답 시간을 최소화</li></ul><h4 id="3-병행수행의-문제점"><a class="markdownIt-Anchor" href="#3-병행수행의-문제점"></a> 3. 병행수행의 문제점</h4><ul><li>병행제어 기법에 의한 제어없이 <u>트랜잭션들이 데이터베이스에 동시에 접근하도록 허용하는 경우 발생하는 문제점</u><table><thead><tr><th>문제점</th><th>설명</th></tr></thead><tbody><tr><td>갱신분실</td><td>두 개 이상의 트랜잭션이 같은 자료를 공유하여 갱신할 때 갱신 결과의 일부가 없어지는 현상</td></tr><tr><td>비완료 의존성</td><td>하나의 트랜잭션 수행이 실패한 후 회복되기 전에 다른 트랜잭션이 실패한 갱신 결과를 참조하는 현상</td></tr><tr><td>모순성</td><td>두 개의 트랜잭션이 병행수행 될 때 원치않는 자료를 이용함으로써 발생하는 문제</td></tr><tr><td>연쇄 복귀</td><td>병행수행되던 트랜잭션들 중 어느 하나에 문제가 생겨 Rollback하는 경우 다른 트랜잭션도 함께 Rollback되는 현상</td></tr></tbody></table></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB관리기능" scheme="https://hyeonukdev.github.io/tags/DB%EA%B4%80%EB%A6%AC%EA%B8%B0%EB%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - DB 관련 신기술</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/</id>
    <published>2020-05-01T08:34:12.000Z</published>
    <updated>2020-05-01T08:34:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db구축관리"><a class="markdownIt-Anchor" href="#db구축관리"></a> DB구축관리</h2><ul><li><u>데이터베이스와 관련된 IT신기술의 종류</u>와 특징을 이해</li><li>데이터베이스 관리 기능으로 <u>회복과 병행제어</u>의 개념 이해</li><li><u>데이터베이스 표준화의 개념과 구성요소를 이해</u></li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><pre><code>- 데이터 표준화    - 시스템을 구성하는 데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것</code></pre><h3 id="db-관련-신기술"><a class="markdownIt-Anchor" href="#db-관련-신기술"></a> DB 관련 신기술</h3><h4 id="1-big-data-빅데이터"><a class="markdownIt-Anchor" href="#1-big-data-빅데이터"></a> 1. Big Data 빅데이터</h4><ul><li>기존의 관리 방법이나 분석체계로는 처리하기 어려운 <u>막대한 양의 정형 또는 비정형 데이터의 집합</u>으로 스마트 단말기의 빠른 확산, 소셜 네트워크 서비스의 활성화, 사물 네트워크의 확대로 데이터 폭발이 가속화됨</li><li>3가지 특징<ul><li>Volume 데이터의 양</li><li>Velocity 데이터 생성 속도</li><li>Variety 형탱의 다양성</li></ul></li></ul><h4 id="2-broad-data-브로드-데이터"><a class="markdownIt-Anchor" href="#2-broad-data-브로드-데이터"></a> 2. Broad Data 브로드 데이터</h4><ul><li><u>다양한 채널에서 소비자의 상호 작용</u>을 통해 생성된 기업 마케팅에 있어 효율적이고 다양한 데이터이며, 이전에 사용하지 않거나 알지 못했던 새로운 데이터나 기존 데이터에 가치가 더해진 데이터</li><li>다양한 정보를 뜻하는 것으로 소비자의 SNS 활동이나 위치 정보 등이 이에 속함</li></ul><h4 id="3-digital-archiving"><a class="markdownIt-Anchor" href="#3-digital-archiving"></a> 3. Digital Archiving</h4><ul><li>늘어나는 정보 자원의 효율적인 관리와 이용을 위해 <u>디지털 정보 자원을 장기적으로 보존하기 위한 작업</u></li><li>아날로그 콘텐츠는 <u>디지털로 변환한 후 압축해서 저장</u>하고, 디지털 콘텐츠도 체계적으로 분류하고 <u>메타 데이터를 만들어 DB화</u> 하는 작업</li></ul><h4 id="4-meta-data-메타-데이터"><a class="markdownIt-Anchor" href="#4-meta-data-메타-데이터"></a> 4. Meta Data 메타 데이터</h4><ul><li>일련의 <u>데이터를 정리하고 설명해주는 데이터</u></li><li>메타 데이터는 여러 용도로 사용되나 주로 <u>빠르게 검색하거나 내용을 간략화하고 체계적으로</u>하기 위해 많이 사용</li></ul><h4 id="5-data-diet-데이터-다이어트"><a class="markdownIt-Anchor" href="#5-data-diet-데이터-다이어트"></a> 5. Data Diet 데이터 다이어트</h4><ul><li>데이터를 삭제하는 것이 아니라 <u>압축</u>하고, 중복된 정보는 <u>중복을 배재하고</u> 새로운 기준에 따라 나누어 저장하는 작업</li><li>인터넷과 이동통신 이용이 늘면서 각 기관/기업의 데이터베이스에 쌓인 방대한 정보를 효율적으로 관리하기 위해 대두된 방안으로 같은 단어가 포함된 데이터들을 한 곳에 모다 두되 필요할 때 제대로 찾아내는 체계를 갖추는 것이 필요</li></ul><h4 id="6-hadoop-하둡"><a class="markdownIt-Anchor" href="#6-hadoop-하둡"></a> 6. Hadoop 하둡</h4><ul><li>오픈 소스를 기반으로 한 <u>분산 컴퓨팅 플랫폼</u></li></ul><h4 id="7-tajo-타조"><a class="markdownIt-Anchor" href="#7-tajo-타조"></a> 7. Tajo 타조</h4><ul><li>오픈 소스 기반 분산 컴퓨팅 플랫폼인 아파치 하둡 기반의 분산 데이터 웨어하우스 프로젝트로 우리나라가 주도하여 개발<ul><li>데이터웨어하우스<ul><li>자료와 창고의 합성어로기업의 의사결정과정에 효과적으로 사용할 수 있또록 에러시스템에 분산되어 있는 데이터를 주체별로 통합축적해 놓은 데이터베이스</li></ul></li></ul></li><li>대규모 데이터 처리와 실시간 상호 분석 모두 사용 가능</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB관련신기술" scheme="https://hyeonukdev.github.io/tags/DB%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    
  </entry>
  
  <entry>
    <title>HW구축관리 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-01T08:29:57.000Z</published>
    <updated>2020-05-01T08:29:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="hw구축관리"><a class="markdownIt-Anchor" href="#hw구축관리"></a> HW구축관리</h2><h3 id="1-it-신기술-및-서버장비-트렌드-정보"><a class="markdownIt-Anchor" href="#1-it-신기술-및-서버장비-트렌드-정보"></a> 1. IT 신기술 및 서버장비 트렌드 정보</h3><ul><li>하드웨어 관련 신기술<ul><li>3D 프린팅</li><li>엠디스크</li><li>멤리스트</li><li>네트워크 가상화</li><li>앤 스크린</li><li>RAID</li><li>서버 가상화</li></ul></li></ul><h3 id="2-서버장비-운영"><a class="markdownIt-Anchor" href="#2-서버장비-운영"></a> 2. 서버장비 운영</h3><ul><li>서버 장비 운영 요소<ul><li>서버 장비 뿐만 아니라 스토리지, 운영체제, 고가용성 장비, 보안 솔루션등 정보 시스템 운영에 필요한 모든 것들을 포함</li></ul></li><li>저방 장치<ul><li>DAS</li><li>NAS</li><li>SAN</li></ul></li><li>Secure OS<ul><li>기존의 운영체제에 내재된 보안 취약점을 해소하기 위해 보안 기능을 갖춘 커널을 추가한 운영체제</li></ul></li><li>High Availability<ul><li>안정적인 서비스 운영을 위해 장애 발생시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메커니즘</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;hw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="HW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>HW구축관리 - 서버장비 운영</title>
    <link href="https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%EC%84%9C%EB%B2%84%EC%9E%A5%EB%B9%84%EC%9A%B4%EC%98%81/"/>
    <id>https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%EC%84%9C%EB%B2%84%EC%9E%A5%EB%B9%84%EC%9A%B4%EC%98%81/</id>
    <published>2020-04-30T13:19:45.000Z</published>
    <updated>2020-04-30T13:19:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="hw구축관리"><a class="markdownIt-Anchor" href="#hw구축관리"></a> HW구축관리</h2><h3 id="서버장비-운영-요소"><a class="markdownIt-Anchor" href="#서버장비-운영-요소"></a> 서버장비 운영 요소</h3><h4 id="1-서버-장비-운영-요소의-개념"><a class="markdownIt-Anchor" href="#1-서버-장비-운영-요소의-개념"></a> 1. 서버 장비 운영 요소의 개념</h4><ul><li>정보처리시스템에 필요한 서버 장비 뿐만 아니라 데이터 저장 장치인 스토리지, 운영체제, 고가용성 장비, 보안 솔루션 등 정보 시스템 운영의 시작부터 끝까지 필요한 모든 것</li></ul><h4 id="2-서버-소프트웨어-유형"><a class="markdownIt-Anchor" href="#2-서버-소프트웨어-유형"></a> 2. 서버 소프트웨어 유형</h4><table><thead><tr><th>서버 SW 유형</th><th>주요 기능</th><th>비고</th></tr></thead><tbody><tr><td>운영체제(OS)</td><td>시스템에 대한 계정/성능/장애/구성/보안 관리 를 담당</td><td>Windwo Server, Unix, LINUX</td></tr><tr><td>DBMS</td><td>Data를 효과적이고, 효율적으로 관리하기 위한 관리 시스템</td><td>Oracle, MySQL, DB2</td></tr><tr><td>보안 솔루션</td><td>기밀성, 무결성, 가용성 등</td><td>백신ISW, IDS, IPS, Firewall</td></tr><tr><td>WEB 운영</td><td>시스템 자원을 효율적으로 이용하기 위한 가상화 솔루션</td><td>Apache, WAS, JEJUS</td></tr></tbody></table><h4 id="3-저장장치스토리지-시스템"><a class="markdownIt-Anchor" href="#3-저장장치스토리지-시스템"></a> 3. 저장장치(스토리지 시스템)</h4><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0501_01.png" alt="스토리지시스템" /></p><h3 id="secure-os"><a class="markdownIt-Anchor" href="#secure-os"></a> Secure OS</h3><h4 id="1-secure-os-개념"><a class="markdownIt-Anchor" href="#1-secure-os-개념"></a> 1. Secure OS 개념</h4><ul><li>기존의 운영체제에 내재된 보안 취약점을 해소하기 위해 <u>보안 기능을 갖춘 커널을 추가</u>하여 외부의 침입으로 부터 시스템 자원을 보호하는 운영체제</li><li>보안 커널은 보안 기능을 갖춘 커널을 의미하며, TCB 기반으로 참조 모니터의 개념을 구현하고 집행</li><li><u>보안 커널의 보호 대상</u>은 주기억장치와 보조기억장치, 저장 데이터, 하드웨어 장치, 자료 구조, 명령어, 각종 보호 매커니즘</li><li>보호방법<ul><li>논리적분리<ul><li>프로세스 논리적 구역지정</li></ul></li><li>물리적분리<ul><li>특정장비만 사용토록 제한</li></ul></li><li>암호적분리<ul><li>내부 정보 암호화</li></ul></li><li>시간적분리<ul><li>프로세스 동시실행 방지</li></ul></li><li>구현복잡도<ul><li>암호적 &gt; 논리적 &gt; 시간적 &gt; 물리적</li></ul></li></ul></li><li>참조모니터 3가지 특징<ul><li>Isolation 격리성</li><li>Verifiability 검증가능성</li><li>Completeness 완전성</li></ul></li></ul><h4 id="2-secure-os-보안-기능"><a class="markdownIt-Anchor" href="#2-secure-os-보안-기능"></a> 2. Secure OS 보안 기능</h4><table><thead><tr><th>구분</th><th>설명</th></tr></thead><tbody><tr><td>식별 및 인증</td><td>각 접근 주체에 대한 안전하고 고유한 식별 인증 기능</td></tr><tr><td>임의적 접근 통제</td><td>소속 그룹 또는 개인에 따라 부여된 권한에 따라 접근 통제</td></tr><tr><td><u>DAC 또는 신분기반정책</u></td><td></td></tr><tr><td>강제적 접근 통제</td><td>접속 단말 및 접속방법, 권한, 요청 객체의 특성 등 여러보안 속성이 고려된 규칙에 따라 강제적으로 접근 통제</td></tr><tr><td><u>MAC 또는 규칙기반 정책</u></td><td></td></tr><tr><td>객체재사용보호</td><td>메모리에 기존 데이터가 남아있지 않도록 초기화하는 기능</td></tr><tr><td>완전한 조정</td><td>우회할 수 없도록 모든 접근 경로를 완전하게 통제하는 기능</td></tr><tr><td>신뢰 경로</td><td>비밀번호 변경 및 권한 설정 등과 같은 보안 작업을 위한 안전한 경로를 제공하는 기능</td></tr><tr><td>감사 및 감사기록 축소</td><td>모든 보안 관련 사건 및 작업을 기록한 후 보호하는 기능</td></tr></tbody></table><h3 id="3-고가용성"><a class="markdownIt-Anchor" href="#3-고가용성"></a> 3. 고가용성</h3><h4 id="1-high-availability-고가용성의-개념"><a class="markdownIt-Anchor" href="#1-high-availability-고가용성의-개념"></a> 1. High Availability 고가용성의 개념</h4><ul><li><u>긴 시간동안 안정적인 서비스 운영을 위해 장애 발생시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메커니즘</u></li><li>가용성을 극대화 하는 방법<ul><li>클러스터<ul><li>두 대 이상의 서버를 하나의 서버처럼 운영하는 기술</li></ul></li><li>이중화<ul><li>시스템 오류로 데이터베이스 서비스중단이나 물리적 손상발생시 이를 복구하기 위해 동일한 데이터베이스를 복제하여 관리하는 것</li></ul></li></ul></li></ul><h4 id="2-고가용성의-필요성"><a class="markdownIt-Anchor" href="#2-고가용성의-필요성"></a> 2. 고가용성의 필요성</h4><ul><li>서비스 다운 타임을 최소화함으로써 가용성을 극대화</li><li>고가용성으로 기업의 비즈니스 연속성을 확보</li><li>기업의 신뢰도 및 경쟁력 향상</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;hw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="HW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버장비운영" scheme="https://hyeonukdev.github.io/tags/%EC%84%9C%EB%B2%84%EC%9E%A5%EB%B9%84%EC%9A%B4%EC%98%81/"/>
    
  </entry>
  
  <entry>
    <title>HW구축관리 - HW 관련 신기술</title>
    <link href="https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    <id>https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/</id>
    <published>2020-04-30T12:49:13.000Z</published>
    <updated>2020-04-30T12:49:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="hw구축관리"><a class="markdownIt-Anchor" href="#hw구축관리"></a> HW구축관리</h2><ul><li>IT 신기술 및 서버장비 트랜드 정보</li><li>서버장비 운영(Secure-OS, 운영체제, NAS, DAS, SAN, 고가용성)</li></ul><h3 id="용어-사전"><a class="markdownIt-Anchor" href="#용어-사전"></a> 용어 사전</h3><ul><li>Secure-OS<ul><li>기존의 운영체제에 내재된 보안 취약점을 해소하기 위해 보안 기능을 갖춘 커널을 추가하여 외부의 침입으로 시스테 자원을 보호하는 운영체제</li></ul></li><li>고가용성 High Availability<ul><li>긴 시간 동안 안정적인 서비스 운영을 위해 장애 발생시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메카니즘</li></ul></li></ul><h3 id="hw-관련-신기술"><a class="markdownIt-Anchor" href="#hw-관련-신기술"></a> HW 관련 신기술</h3><h4 id="1-three-dimension-printing-3d-프린팅"><a class="markdownIt-Anchor" href="#1-three-dimension-printing-3d-프린팅"></a> 1. Three Dimension Printing 3D 프린팅</h4><ul><li>대상을 평면으로 출력하는 것이 아니라 아주 얇은 두께로 한층 한층 적층시켜 <u>손으로 만질 수 있는 실제 물체로 만들어내는 것</u></li></ul><h4 id="2-4k-ultra-high-definition-4k-해상도"><a class="markdownIt-Anchor" href="#2-4k-ultra-high-definition-4k-해상도"></a> 2. 4K Ultra High Definition 4K 해상도</h4><ul><li>가로 해상도가 4 Kilo Pixel로 차세대 고화질 해상도를 지칭하는 용어</li><li>가로 픽셀수 3,840 * 세로 픽셀수 2,160</li></ul><h4 id="3-m-disc-milennial-disc-엠디스크"><a class="markdownIt-Anchor" href="#3-m-disc-milennial-disc-엠디스크"></a> 3. M-DISC, Milennial DISC 엠디스크</h4><ul><li><u>한 번의 기록만으로 자료를 영구 보관할 수 있는 광 저장장치</u></li><li>디스크 표면의 무기물층에 <u>레이저</u>를 이용해 자료를 조작해서 기록하므로 빛, 열, 습기 등의 <u>외부요인에 영향을 받지 않음</u></li></ul><h4 id="4-memristor-멤리스트"><a class="markdownIt-Anchor" href="#4-memristor-멤리스트"></a> 4. Memristor 멤리스트</h4><ul><li><u>메모리와 레지스터의 합성어로</u> 전류의 방향과 양 등 기존의 경험을 모두 기억하는 특별한 소자</li><li>전원 공급이 끊어졌을 때도 직전에 통과한 전류의 방향과 양을 기억하기 때문에 <u>다시 전원이 공급되면 기존의 상태로 그대로 복원됨</u></li></ul><h4 id="5-mems-micro-electro-mechanical-system-멤스"><a class="markdownIt-Anchor" href="#5-mems-micro-electro-mechanical-system-멤스"></a> 5. MEMS; Micro-Electro Mechanical System 멤스</h4><ul><li><u>초정밀 반도체 제조 기술을 바탕</u>으로 센서, 액추에이터등 기계구조를 다양한 기술로 미세 가공하여 전기기계적 동작을 할 수 있도록 한 <u>초미세 장치</u></li></ul><h4 id="6-network-virtualization-네트워크-가상화"><a class="markdownIt-Anchor" href="#6-network-virtualization-네트워크-가상화"></a> 6. Network Virtualization 네트워크 가상화</h4><ul><li>라우터, 방화벽, 스위치 같은 <u>물리적 네트워크 자원들을 마치 하나의 자원처럼 사용하는 기술로 단일한 네트워크를 여러 개의 가상 네트워크로 구성</u>할 수 있으며, 서로 영향을 주지 않고 네트워크 자원에 액세스하며 일관성 있는 관리 및 보안 정책 유지 가능</li></ul><h4 id="7-n-screen-앤-스크린"><a class="markdownIt-Anchor" href="#7-n-screen-앤-스크린"></a> 7. N-Screen 앤 스크린</h4><ul><li>N개의 서로 다른 단말기에 동일한 콘텐츠를 자유롭게 이용할 수 있는 서비스</li><li>PC, TV, 휴대폰에서 동일한 콘텐츠를 끊기 없이 이용할 수 있음</li></ul><h4 id="8-phablet-패블릿"><a class="markdownIt-Anchor" href="#8-phablet-패블릿"></a> 8. Phablet 패블릿</h4><ul><li><u>폰과 태블릿의 합성어</u>로 태블릿 기능을 포함한 <b>5인치</b> 이상의 대화면 스마트폰</li></ul><h4 id="9-raid-redundant-array-of-inexpensive-disk"><a class="markdownIt-Anchor" href="#9-raid-redundant-array-of-inexpensive-disk"></a> 9. RAID; Redundant Array of Inexpensive Disk</h4><ul><li><u>여러 개의 하드디스크로 디스크 배열을 구성하여 파일을 구성하고 있는 데이터 블록들을 서로 다른 디스크들에 분산 저장</u>할 경우 그 블록들을 여러 디스크에서 동시에 읽거나 쓸 수 있으므로 디스크의 속도가 매우 향상됨</li></ul><h4 id="10-server-virtualization-서버-가상화"><a class="markdownIt-Anchor" href="#10-server-virtualization-서버-가상화"></a> 10. Server Virtualization 서버 가상화</h4><ul><li>CPU, 메모리, 하드디스크 등 서버의 물리적인 자원들을 논리적으로 통합하여 마치 하나의 서버를 통해 서비스를 받는 것처럼 느껴지게 하는 기술</li></ul><h4 id="11-thin-client-pc-신-클라이언트-pc"><a class="markdownIt-Anchor" href="#11-thin-client-pc-신-클라이언트-pc"></a> 11. Thin Client PC 신 클라이언트 PC</h4><ul><li><u>서버 기반 컴퓨팅과 관련</u>되어 신 클라이언트PC는 <u>하드디스크나 주변 장치 없이 기본적인 메모리만 갖추고 서버와 네트워크로 운용되는 개인용 컴퓨터</u></li></ul><h4 id="12-trustzone-technology-트러스트존-기술"><a class="markdownIt-Anchor" href="#12-trustzone-technology-트러스트존-기술"></a> 12. TrustZone Technology 트러스트존 기술</h4><ul><li>ARM에서 개발한 기술로 하나의 프로세서 내에 일반 애플리케이션을 처리하는 일반구역과 보안이 필요한 애플리케이션으로 처리하는 <u>보안 구역으로 분할</u>하여 관리하는 하드웨어 기반의 보안 기술</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;hw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="HW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="HW관련신기술" scheme="https://hyeonukdev.github.io/tags/HW%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    
  </entry>
  
  <entry>
    <title>SW구축관리 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-04-30T12:38:13.000Z</published>
    <updated>2020-04-30T12:38:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="sw구축관리"><a class="markdownIt-Anchor" href="#sw구축관리"></a> SW구축관리</h2><h3 id="1-it신기술-및-sw개발-트렌드-정보"><a class="markdownIt-Anchor" href="#1-it신기술-및-sw개발-트렌드-정보"></a> 1. IT신기술 및 SW개발 트렌드 정보</h3><ul><li>인공지능</li><li>증강현실</li><li>블록체인</li><li>딥러닝</li><li>전문가 시스템</li><li>그레이웨이</li><li>매시업</li><li>시맨틱 웹</li><li>서비스 지향 아키텍처</li></ul><h3 id="2-sw개발보안-정책"><a class="markdownIt-Anchor" href="#2-sw개발보안-정책"></a> 2. SW개발보안 정책</h3><ul><li>SW개발 생명주기의 각 단계에서 요구되는 보안활동을 수행해 안전한 소프트웨어를 개발하는 것이 목적</li><li>SW개발 보안 관련 기관<ul><li>행정안전부, 한국인터넷진흥원, 발주기관</li><li>사업자, 감리법인</li></ul></li><li>SW개발 역할별 보안활동<ul><li>프로젝트 관리자</li><li>요구사항 분석가</li><li>아키텍트</li><li>설계자</li><li>구현개발자</li><li>테스트분석가</li><li>보안감시자</li></ul></li><li>SW개발보안 관련 법령 및 규정<ul><li>개인정보 보호법</li><li>정보통신망 이용촉진 및 정보보호 등에 관한 법률</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;sw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW구축관리 - SW개발보안 정책</title>
    <link href="https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B0%9C%EB%B0%9C%EB%B3%B4%EC%95%88%EC%A0%95%EC%B1%85/"/>
    <id>https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B0%9C%EB%B0%9C%EB%B3%B4%EC%95%88%EC%A0%95%EC%B1%85/</id>
    <published>2020-04-30T12:11:43.000Z</published>
    <updated>2020-04-30T12:11:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="sw구축관리"><a class="markdownIt-Anchor" href="#sw구축관리"></a> SW구축관리</h2><h3 id="sw개발보안-정책의-개념"><a class="markdownIt-Anchor" href="#sw개발보안-정책의-개념"></a> SW개발보안 정책의 개념</h3><ul><li><u>소프트웨어 개발과정에서발생할수 있는 보안취약점을 최소화</u>하여 보안위협으로 부터 <u>안전한 소프트웨어를 개발하기 위한 일련의 보안활동</u></li><li>SW개발 생명주기SDLC의 <u>각 단계에서 요구되는 보안활동을 수행</u>해 안전한 소프트웨어를 개발하는 것이 목적</li></ul><h3 id="sw-보안-취약점이-발생하는-경우"><a class="markdownIt-Anchor" href="#sw-보안-취약점이-발생하는-경우"></a> SW 보안 취약점이 발생하는 경우</h3><ul><li>보안 요구사항이 정의되지 않은 경우</li><li>소프트웨어 설계 시 논리적 오류가 포함된 경우</li><li>기술 취약점을 갖고 있는 코딩 규칙을 적용한 경우</li><li>소프트웨어 배치가 적절하지 않은 경우</li><li>보안 취약점 발견 시 적절하게 대응하지 못한 경우</li></ul><h3 id="sw개발-보완-관련-기관"><a class="markdownIt-Anchor" href="#sw개발-보완-관련-기관"></a> SW개발 보완 관련 기관</h3><ul><li>소프트웨어 개발 보안 관련 활동 주체<ul><li>정책기관인 행정안전부</li><li>발주기관인 행정기관</li><li>전문기관인 인터넷진흥원</li><li>개발기관인 사업자</li><li>보안약점진단인 감리법인</li></ul></li></ul><h3 id="sw개발-역할별-보안활동"><a class="markdownIt-Anchor" href="#sw개발-역할별-보안활동"></a> SW개발 역할별 보안활동</h3><ul><li>프로젝트 관리자 PM<ul><li>응용프로그램에 대한 <u>보안 전략</u>을 구성원들에게 설명하고 <u>프로젝트 일정 및 보안위험의 상관관계</u>등과 같은 보안 영향을 이해시키고 <u>조직의 상태를 모니터링</u></li></ul></li><li>요구사항 분석가 RM<ul><li><u>아키텍트가 고려해야 할 보안 관련 비지니스 요구사항을 설명</u>하고 프로젝트 팀이 고려해야할 <u>구조에 존재하는 보안 요구사항</u>과 유즈케이스에 대한 보안 고려사항을 기반으로 오용 사례를 정의</li></ul></li><li>아키텍트 Architect<ul><li>보안 오류가 발생하지 않도록 <u>보안 기술 문제를 충분히 이해</u>하고 시스템 사용되는 <u>모든 리소스 정의 및 각 리소스별로 적절한 보안 요구사항 적용</u></li></ul></li><li>설계자 Designer<ul><li><u>특정 기술이 보안요구사항을 만족하는지 확인</u>하고 애플리케이션 보안노력에 대한 품질 측정을 지원, 많은 비용이 필요한 수정 요구사항을 최소화하기 위한 방법을 제공, 타사의 소프트웨어 통합시 발생가능한 <u>보안 위험을 이해하며 식별된 보안위협에 적절히 대응</u></li></ul></li><li>구현개발자 Implementer<ul><li>구조화된 소프트웨어 개발 환경에서 프로그램을 원활히 구현할 수 있도록 <u>시큐어 코딩 표준을 준수하여 개발하며</u> 제3자가 소프트웨어 안전 여부를 쉽게 판단할 수 있도록 <b>문서화</b><ul><li>시큐어 코딩<ul><li>개발하고 있는 소프트웨어의보안상 취약점을 사전에 보완하면서 프로그래밍하는것</li></ul></li></ul></li></ul></li><li>테스트분석가 Test Analyst<ul><li>소프트웨어 <u>개발 요구사항과 구현 결과를 반복적으로 확인</u>하며 테스트 그룹은 반드시 보안전문가일 필요는 없지만보안 위험에 대한 학습이나 툴 사용법을 숙지함</li></ul></li></ul><h3 id="sw개발-역할별-보안활동-2"><a class="markdownIt-Anchor" href="#sw개발-역할별-보안활동-2"></a> SW개발 역할별 보안활동</h3><ul><li>보안 감시자 Security Auditor<ul><li>프로젝트 전체단계에서 활동하며, 소프트웨어 개발 프로젝트의 현재 상태의 보안을 보장하고 요구사항 검토시 요구사항의 적합성과 완전성을 확인하고, <u>설계단계에서는 보안 문제</u>로 이어질 수 있는 사항이 있는지 확인하며, <u>구현단계에서는 보안 문제</u>가 있는지 확인</li></ul></li></ul><h3 id="sw개발보안-관련-법령"><a class="markdownIt-Anchor" href="#sw개발보안-관련-법령"></a> SW개발보안 관련 법령</h3><ul><li>개인정보보호법</li><li>정보통신망 이용촉진 및 정보보호 등에 관한 법률</li><li>신용정보의 이용 및 보호에 관한 법률</li><li>표준 개인정보 보호 지침</li><li>개인정보의 안전성 확보 조치 기준</li><li>개인정보 영향평가에 관한 고시</li></ul><h3 id="it기술-관련-규정"><a class="markdownIt-Anchor" href="#it기술-관련-규정"></a> IT기술 관련 규정</h3><ul><li>RFID 프라이버시 보호 가이드라인</li><li>위치정보의 관리적, 기술적 보호조치 권고 해설서</li><li>바이오정보 보호 가이드라인</li><li>뉴미디어 서비스 개인정보 보호 가이드라인</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;sw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발보안정책" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%EB%B3%B4%EC%95%88%EC%A0%95%EC%B1%85/"/>
    
  </entry>
  
  <entry>
    <title>SW구축관리 - SW 관련 신기술</title>
    <link href="https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    <id>https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/SW%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/</id>
    <published>2020-04-30T04:08:58.000Z</published>
    <updated>2020-04-30T04:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="sw구축관리"><a class="markdownIt-Anchor" href="#sw구축관리"></a> SW구축관리</h2><ul><li><u>소프트웨어와 관련된 IT 신기술의 종류와 특징</u>을 이해</li><li><u>소프트웨어 개발 보안의 개념과 보안 관련 기관</u> 및 소프트웨어 개발 프로젝트 <u>참여자별 보안 활동 역할</u> 이해</li><li><u>소프트웨어 개발 보안 활동 관련 법령 및 규정</u>의 종류 이해</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>SW개발보안 정책<ul><li>소프트웨어 개발 과정에서 발생할 수 있는 보안 취약점을 최소화하여 보안 위협으로부터 안전한 소프트웨어를 개발하기 위한 일련의 보안활동</li></ul></li></ul><h3 id="sw-관련-신기술"><a class="markdownIt-Anchor" href="#sw-관련-신기술"></a> SW 관련 신기술</h3><h4 id="1-ai-artificial-intelligence-인공지능"><a class="markdownIt-Anchor" href="#1-ai-artificial-intelligence-인공지능"></a> 1. AI; Artificial Intelligence 인공지능</h4><ul><li><u>컴퓨터 스스로 인간의 두뇌와 같이 추론, 학습, 판단 등 인간 지능적인 작업을 수행하는 시스템</u></li><li>인공지능의 응용분야에는 신경망, 퍼지, 패턴 인식, 전문가 시스템, 자연어 인식, 이미지 처리, 컴퓨터 시각, 로봇 공학 등<ul><li>Fuzzy 퍼지<ul><li>인간의 말, 의미, 사고, 측정 등에 본질적으로 포함되어 있는 애매 모호함을 수학적으로 다루는 학문</li></ul></li></ul></li></ul><h4 id="2-ar-augmented-reality-증강현실"><a class="markdownIt-Anchor" href="#2-ar-augmented-reality-증강현실"></a> 2. AR; Augmented Reality 증강현실</h4><ul><li>가상현실이 이미지, 주변 배경, 객체 모두를 가상의 이미지로 만들어 보여 주는 반면, <u>증강 현실은 현실에 기반하여 정보를 추가 제공</u>하는 기술</li></ul><h4 id="3-blockchain-블록체인-과-distributed-ledgers-분산-장부"><a class="markdownIt-Anchor" href="#3-blockchain-블록체인-과-distributed-ledgers-분산-장부"></a> 3. Blockchain 블록체인 과 Distributed Ledgers 분산 장부</h4><ul><li>P2P 네트워크를 이용하여 <u>온라인 금융 거래 정보를 온라인 네트워크 참여자의 디지털 장빙 분산 저장</u>하는 기술</li><li>기존 금융 회사들이 사용하고 있는 <u>중앙 집중형 서버에 거래 정보를 저장할 필요가 없어 관리 비용이 절감</u>되고, 분산 저장으로 인해 <u>해킹이 어려워짐에 따라 보안 및 거래 안정성이 향상됨</u></li></ul><h4 id="4-cc-common-criteria-공통-평가-기준"><a class="markdownIt-Anchor" href="#4-cc-common-criteria-공통-평가-기준"></a> 4. CC; Common Criteria 공통 평가 기준</h4><ul><li>ISO 15408 표준으로 채택된 <u>정보 보호 제품 평가기준</u></li><li>정보화 순기능 역할을 보장하기 위해 <u>정보화 제품의 정보보호기능과 이에 대한 사용 환경 등급을 정한 기준</u></li></ul><h4 id="5-cep-complex-event-processing-복잡-이벤트-처리"><a class="markdownIt-Anchor" href="#5-cep-complex-event-processing-복잡-이벤트-처리"></a> 5. CEP; Complex Event Processing 복잡 이벤트 처리</h4><ul><li><u>실시간으로 발생하는 많은 사건들 중 의미가 있는 것만을 추출</u>할 수 있도록 <u>사건 발생 조건을 정의하는 데이터 처리 방법</u></li><li>금융, 통신, 전력, 물류, 국방 등에서 대용량 데이터 스트림에 대한 요구에 실시간으로 대응하기 위하여 개발된 기술이며 미들웨어에 접속시키면 기업이 독자적인 실시간 응용 애플리케이션 개발 가능<ul><li>미들웨어<ul><li>운영체제와 해당 운영체제에 의해 실행되는 응용 프로그램 사이에서 운영체제가 제공하는 서비스 이외에 추가적인 서비스를 제공하는 소프트웨어</li></ul></li></ul></li></ul><h4 id="6-deep-learning-딥-러닝"><a class="markdownIt-Anchor" href="#6-deep-learning-딥-러닝"></a> 6. Deep Learning 딥 러닝</h4><ul><li>인간의 두뇌를 모델로 만들어진 <u>인공신경망을 기반으로 하는 기계 학습 기술</u></li><li>많은 데이터를 이용한 컴퓨터가 마치 사람처럼 스스로 학습할 수 있어 특정 업무를 수행할 때 정형화된 데이터를 입력 받지 않고 <u>스스로 필요한 데이터를 수집,분석하여 고속으로 처리 가능</u></li></ul><h4 id="7-digital-twin-디지털-트윈"><a class="markdownIt-Anchor" href="#7-digital-twin-디지털-트윈"></a> 7. Digital Twin 디지털 트윈</h4><ul><li><u>현실 속의 사물을 소프트웨어로 가상화한 모델로</u> 자동차, 항공, 에너지, 국방, 헬스케어 등 여러 분야에서 활용</li><li>현실 속의 사물을 대신해 다양한 상황을 모의 실험하기 위한 용도</li></ul><h4 id="8-expert-system-전문가-시스템"><a class="markdownIt-Anchor" href="#8-expert-system-전문가-시스템"></a> 8. Expert System 전문가 시스템</h4><ul><li><u>의료 진단 등과 같이 특정 분야의 전문가가 수행하는 고도의 업무를 지원하기 위한 컴퓨터 응용 프로그램</u></li><li><u>인간의 지적 활동과 경험</u>을 통해서 축적된 전문가의 지식과 <u>전문가에 의해 정의된 추론 규칙을 활용</u>하여 결정하거나 문제르 해결</li><li>지식 베이스(Knowledge Base)라는 데이터베이스 + 추론을 실행하는 추론 엔진(Inference Engine)</li></ul><h4 id="9-grayware-그레이웨이"><a class="markdownIt-Anchor" href="#9-grayware-그레이웨이"></a> 9. Grayware 그레이웨이</h4><ul><li>소프트웨어를 제공하는 입장에서는 악의적이지 않은 유용한 소프트웨어라고 주장할 수 있지만 사용자 입장에서는 <u>유용할 수도 있고 악의적일 수도 있는</u> 애드웨어, 스파이웨어, 기타 악성코드나 악성 공유웨어를 뜻함</li></ul><h4 id="10-hash-해시"><a class="markdownIt-Anchor" href="#10-hash-해시"></a> 10. Hash 해시</h4><ul><li>임의의 길이의 입력 데이터나 메시지를 <u>고정된 길이의 값이나 키로 변환하는 것</u></li><li>데이터의 암호화가 아닌 <u>무결성 검증을 위한 방법</u>으로 대칭, 비대칭 암호화 기법과 함께 사용되어 전자화폐, 전자서명 등 다양한 방면에서 활용되고 있음</li></ul><h4 id="11-mashup-매시업"><a class="markdownIt-Anchor" href="#11-mashup-매시업"></a> 11. Mashup 매시업</h4><ul><li><u>웹에서 제공하는 정보 및 서비스를 이용하여 새로운 소프트웨어나 서비스, 데이터베이스 등을 만드는 기술</u></li><li>다수의 정보원이 제공하는 콘텐츠를 조합하여 하나의 서비스로 제공하는 웹 사이트 또는 어플리케이션</li></ul><h4 id="12-ogsa-open-grid-service-architecture-오픈-그리드-서비스-아키텍처"><a class="markdownIt-Anchor" href="#12-ogsa-open-grid-service-architecture-오픈-그리드-서비스-아키텍처"></a> 12. OGSA; Open Grid Service Architecture 오픈 그리드 서비스 아키텍처</h4><ul><li><u>애플리케이션 공유를 위한 웹 서비스를 그리드 상에서 제공하기 위해 만든 개방형 표준</u></li></ul><h4 id="13-pet-privacy-enhancing-technology-개인정보-강화-기술"><a class="markdownIt-Anchor" href="#13-pet-privacy-enhancing-technology-개인정보-강화-기술"></a> 13. PET; Privacy Enhancing Technology 개인정보 강화 기술</h4><ul><li>심각한 위험으로 대두되고 있는 <u>개인정보 침해 위험을 관리하기 위한 핵심 기술</u></li><li>암호화, 익명화 등 개인정보를 보호하는 기술에서 사용자가 직접 개인정보를 통제하기 위한 기술까지 <u>다양한 사용자 프라이버시 보호 기술을 통칭함</u></li></ul><h4 id="14-pia-privacy-impact-assessment-개인정보-영향평가-제도"><a class="markdownIt-Anchor" href="#14-pia-privacy-impact-assessment-개인정보-영향평가-제도"></a> 14. PIA; Privacy Impact Assessment 개인정보 영향평가 제도</h4><ul><li>개인정보를 활용하는 새로운 정보시스템의 도입 및 기존 정보시스템의 중요한 변경 시 시스템의 구축/운영이 기업의 고객은 물론 국민의 사생활에 및리 영향에 대해 미리 조사/분석/평가하는 제도</li></ul><h4 id="15-qkd-quantum-key-distribution-양자-암호키-분배"><a class="markdownIt-Anchor" href="#15-qkd-quantum-key-distribution-양자-암호키-분배"></a> 15. QKD; Quantum Key Distribution 양자 암호키 분배</h4><ul><li><u>양자 통신을위해 비밀키를 분배/관리하는 기술</u><ul><li>양자<ul><li>물리학에서 상호 작용과 관련된 모든물리적 독립계의 최소단위</li></ul></li></ul></li></ul><h4 id="16-ria-rich-internet-application-리치-인터넷-어플리케이션"><a class="markdownIt-Anchor" href="#16-ria-rich-internet-application-리치-인터넷-어플리케이션"></a> 16. RIA; Rich Internet Application 리치 인터넷 어플리케이션</h4><ul><li>플래시 애니메이션 기술과 웹 서버 애플리케이션 기술을 통합하여 기존 HTML보다 <u>역동적이고 인트랙티브한 웹페이지를 제공하는 신개념의 플래시 웹페이지 제작 기술</u></li></ul><h4 id="17-semantic-web-시맨틱-웹"><a class="markdownIt-Anchor" href="#17-semantic-web-시맨틱-웹"></a> 17. Semantic Web 시맨틱 웹</h4><ul><li><u>컴퓨터가 사람을 대신하여 정보를 읽고 이해하고 가공하여 새로운 정보를 만들어 낼 수 있는 '의미론적인 웹</u>이라는 의미를 가진 차세대 지능형 웹</li></ul><h4 id="18-soa-service-oriented-architecture-서비스-지향아키텍처"><a class="markdownIt-Anchor" href="#18-soa-service-oriented-architecture-서비스-지향아키텍처"></a> 18. SOA; Service Oriented Architecture 서비스 지향아키텍처</h4><ul><li><u>정보시스템을 공유와 재사용이 가능한 서비스 단위나 컴포넌트 중심으로 구축하는 정보기술 아키텍처</u></li></ul><h4 id="19-software-escrow-소프트웨어-에스크로"><a class="markdownIt-Anchor" href="#19-software-escrow-소프트웨어-에스크로"></a> 19. Software Escrow 소프트웨어 에스크로</h4><ul><li>소프트웨어 개발자의지식재산권을 보호하고 사용자는 저렴한비용으로 소프트웨어를 안정적으로 사용 및 유지보수 받을 수 있도록 <u>소스 프로그램과 기술 정보 등을 제3의 기관에 보관하는 것</u></li></ul><h4 id="20-vaporware-증발품"><a class="markdownIt-Anchor" href="#20-vaporware-증발품"></a> 20. Vaporware 증발품</h4><ul><li>판매 계획 또는 배포 계획은 발표되었으나 실제로 고객에게 판매되거나 배포되지 않고 있는 소프트웨어</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;sw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW관련신기술" scheme="https://hyeonukdev.github.io/tags/SW%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    
  </entry>
  
  <entry>
    <title>네트워크구축관리 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/04/30/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-04-30T03:58:52.000Z</published>
    <updated>2020-04-30T03:58:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="네트워크구축관리"><a class="markdownIt-Anchor" href="#네트워크구축관리"></a> 네트워크구축관리</h2><h3 id="1-it-신기술-및-네트워크-장비-트렌드-정보"><a class="markdownIt-Anchor" href="#1-it-신기술-및-네트워크-장비-트렌드-정보"></a> 1. IT 신기술 및 네트워크 장비 트렌드 정보</h3><pre><code>- Ad-hoc Network 애드 혹 네트워크- Cloud Computing 클라우드 컴퓨팅- IoT; Internet of Things 사물 인터넷- NDN; Named Data Networking- NFC; Near Field Communication 근거리 무선 통신- PICONET 피코넷- USN; Ubiquitous Sensor Network 유비쿼터스 센서 네트워크</code></pre><h3 id="2-네트워크-장비라우터-백본-스위치"><a class="markdownIt-Anchor" href="#2-네트워크-장비라우터-백본-스위치"></a> 2. 네트워크 장비(라우터, 백본 스위치)</h3><pre><code>- 네트워크 토폴리지(Topology) 종류    - 성형, 버스형, 링형, 트리형, 망형- 네트워크 분류    - LAN, MAN, WAN, VAN- 스위치의 분류    - L2, L3, L4, L7 스위치- Hierarchical 3 Layer 모델    - 액세스 계층, 디스트리뷰션 계층, 코어 계층</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;네트워크구축관리&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="네트워크구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
</feed>
