<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-21T08:18:14.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-21T08:18:14.000Z</published>
    <updated>2020-05-21T08:18:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="1-애플리케이션-통합-테스트-수행"><a class="markdownIt-Anchor" href="#1-애플리케이션-통합-테스트-수행"></a> 1. 애플리케이션 통합 테스트 수행</h3><ul><li>통합 테스트에 대한 개념 이해, 통합 테스트 수행 방법</li><li>테스트 자동화 도구와 개념 유형</li></ul><h3 id="2-애플리케이션-테스트-결과-분석"><a class="markdownIt-Anchor" href="#2-애플리케이션-테스트-결과-분석"></a> 2. 애플리케이션 테스트 결과 분석</h3><ul><li>소프트웨어 결함관련 용어, 테스트 완료 조건</li><li>테스트 결함 관리 개념과 결함 관리 도구</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;1-애플리케이션-통합-테스트-수행&quot;&gt;&lt;a class=&quot;m
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션 테스트 결과 분석</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC%EB%B6%84%EC%84%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC%EB%B6%84%EC%84%9D/</id>
    <published>2020-05-21T08:06:45.000Z</published>
    <updated>2020-05-21T08:06:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="소프트웨어-결함"><a class="markdownIt-Anchor" href="#소프트웨어-결함"></a> 소프트웨어 결함</h3><ul><li>용어</li></ul><ol><li>에러 Error / 오류<ul><li>결함 Defect 의 원인</li><li>사람에 의해 생성된 실수</li></ul></li><li>결함 / 결점 / 버그 Bug<ul><li>에러 또는 오류가 원인</li><li>소프트웨어 제품에 포함되어 있는 결함</li><li>제거하지 않을 시 제품 실패 또는 문제가 발생</li></ul></li><li>실패 / 문제<ul><li>소프트웨어 제품에 포함된 결함이 실행 될 때 발생</li></ul></li></ol><h3 id="테스트-완료-조건"><a class="markdownIt-Anchor" href="#테스트-완료-조건"></a> 테스트 완료 조건</h3><ul><li>단위 테스트, 통합 테스트, 시스템 테스트, 인수 테스트 등 각 단계별 테스트를 언제 어떤 상황에서 종료할 것인지 결정</li><li>완료 조건은 일정, 비용ㅇ, 조직등에 제약이 있으므로 최적의 완료조건을 계획</li></ul><h3 id="테스트-결함-관리"><a class="markdownIt-Anchor" href="#테스트-결함-관리"></a> 테스트 결함 관리</h3><ul><li>각 단계별 테스트 수행 후 발생한 결함의 재발 방지를 위해, 유사 결함 발견시 처리 시간 단축을 위해 <u>결함을 추적하고 관리하는 활동</u></li></ul><h3 id="결함-추적-관리-활동"><a class="markdownIt-Anchor" href="#결함-추적-관리-활동"></a> 결함 추적 관리 활동</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_05.png" alt="결함 추적 관리 활동" /></p><h3 id="결함-관리-도구-유형"><a class="markdownIt-Anchor" href="#결함-관리-도구-유형"></a> 결함 관리 도구 유형</h3><ul><li>오픈소스<ul><li>Bugzilla</li><li>Trac</li><li>Mantis</li></ul></li><li>상용도구<ul><li>QC</li><li>Clear Quest</li><li>JIRA</li></ul></li></ul><h3 id="결함-관리-도구-도입-시-고려사항"><a class="markdownIt-Anchor" href="#결함-관리-도구-도입-시-고려사항"></a> 결함 관리 도구 도입 시 고려사항</h3><ul><li>웹 클라이언트 지원을 하는지 확인이 필요</li><li>윈도우, 유닉스 환경 등 이기종 플랫폼의 웹 서버를 지원하는지 확인</li><li>프로세스 및 워크플로우 변경이 가능 해야함</li><li>결함 간에 연관 관계 정보를 제공</li><li>결함 등록 및 상태 변경 시 담당자에게 이벤트 통보 기능 필요</li><li>각종 레포트, 차트, 쿼리 구성 및 저장이 가능</li><li>결함 상태 변경에 대한 추적 기능</li><li>다국어 지원이 가능</li><li>다중 프로젝트 지원이 가능</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-결함&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트결과분석" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B2%B0%EA%B3%BC%EB%B6%84%EC%84%9D/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션 통합 테스트 수행</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%88%98%ED%96%89/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%88%98%ED%96%89/</id>
    <published>2020-05-21T04:56:06.000Z</published>
    <updated>2020-05-21T04:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><ul><li>개발자 통합 테스트 계획에 따라 <u>통합 모듈 및 인터페이스가 요구 사항을 충족하는지</u>에 대한 테스트를 수행</li><li>개발자 통합 테스트 수행 결과 발견된 <u>결함에 대한 추이 분석</u>을 통하여 잔존 결함을 추정</li><li>테스트의 충분석 여부를 검증하고 발견된 결함에 대한 개선 조치사항을 작성</li></ul><h3 id="통합-테스트의-개념"><a class="markdownIt-Anchor" href="#통합-테스트의-개념"></a> 통합 테스트의 개념</h3><ul><li>소프트웨어 각 <u>모듈 간의 인터페이스 관련 오류 및 결함</u>을 찾아내기 위한 체계적인 테스트 기법</li></ul><h3 id="통합-테스트-수행-방법의-분류"><a class="markdownIt-Anchor" href="#통합-테스트-수행-방법의-분류"></a> 통합 테스트 수행 방법의 분류</h3><ul><li>일반적으로 점증적인 방법과 비점증적인 방식으로 나뉨</li><li>비점증적 방법<ul><li>모든 컴포넌트를 사전에 통합하여 전체 프로그램을 한꺼번에 테스트</li></ul></li><li>점증적 방법<ul><li>상향식 통합</li><li>하향식 통합</li></ul></li></ul><h4 id="하향식-통합-top-down"><a class="markdownIt-Anchor" href="#하향식-통합-top-down"></a> 하향식 통합 Top Down</h4><ul><li>메인 제어 모듈로부터 아래 방향으로 제어의 경로를 따라 이동하면서 하향식으로 통합하면서 테스트를 진행</li><li>메인 제어 모듈은 작성된 프로그램을 사용하고, 아직 작성되지 않은 하위 제어 모듈 및 모든 <u>하위 컴포넌트를 대신하여 더미 모듈인 스텁을 개발</u></li><li><u>깊이 우선 방식 또는 너비 우선 방식</u>에 따라 하위 모듈인 스텁이 한 번에 하나씩 실제 모듈로 대체<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_02.png" alt="하향식 통합" /></li></ul><h4 id="상향식-통합-bottom-up"><a class="markdownIt-Anchor" href="#상향식-통합-bottom-up"></a> 상향식 통합 Bottom Up</h4><ul><li>애플리케이션 구조에서 최하위 레벨의 모듈 또는 컴포넌트로부터 위쪽 방향으로 제어의 경로를 따라 이동하면서 구축과 테스트 시작</li><li>최하위 레벨의 모듈 또는 컴포넌트들이 하위 모듈의 기능을 수행하는 클러스터로 결합</li><li><u>상위의 모듈</u>에서 데이터의 입력과 출력을 확인하기 위한 더미 모듈 인 드라이버를 작성</li><li>각 통합된 클러스터 단위를 테스트</li><li>테스트가 완료되면 각 클러스터들은 프로그램의 위쪽으로 결합되며, 드라이버는 실제 모듈 또는 컴포넌트로 대체<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_03.png" alt="상향식 통합" /></li></ul><h4 id="회귀-테스팅-regression-testing"><a class="markdownIt-Anchor" href="#회귀-테스팅-regression-testing"></a> 회귀 테스팅 Regression Testing</h4><ul><li>통합 테스트 과정에서 오류를 제거하거나 <u>수정한 프로그램이 새로운 형태의 오작동이나 오류</u>를 일으킬 수 있음</li><li>회귀 테스트는 모듈이나 컴포넌트의 <u>변화로 인해 의도하지 않은 오류가 생기지 않았음을 보증하기 위해 반복 테스트</u>하는 것</li><li>회귀 테스트 케이스 선정 방법<ul><li>모든 애플리케이션의 기능을 수행할 테스트 케이스의 대표적인 샘플을 도출</li><li><u>변경에 의한 영향도가 가장 높은</u> 애플리케이션 기능에 집중한 추가적인 테스트 케이스를 도출</li><li><u>실제 수정이 발생한 모듈</u> 또는 컴포넌트에서부터 시행하는 테스트 케이스를 도출</li></ul></li></ul><h3 id="테스트-자동화의-개념"><a class="markdownIt-Anchor" href="#테스트-자동화의-개념"></a> 테스트 자동화의 개념</h3><ul><li>테스트 도구를 활용하여 반복적인 테스트 작업을 <u>스크립트 형태로 구현</u></li><li>테스트 시간 단축과 인력 투입 비용을 최소하</li><li>운영중인 시스템의 모니터링 또는 UI가 없는 서비스의 경우에도 정밀한 테스트 수행</li></ul><h3 id="테스트-자동화의-장점과-단점"><a class="markdownIt-Anchor" href="#테스트-자동화의-장점과-단점"></a> 테스트 자동화의 장점과 단점</h3><ul><li>장점<ul><li>반복되는 테스트 데이터 재입력 작업의 자동화</li><li>사용자 요구 기능의 일관성 검증에 유리</li><li>테스트 결과 값에 대한 객관적인 평가 기준 제공</li><li>테스트 결과의 통계 작업과 그래프 등 다양한 표시 형태 제공</li><li>UI가 없는 서비스의 경우에도 정밀한 테스트 가능</li></ul></li><li>단점<ul><li>도구 도입 후 도구 사용 방법에 대한 교육 및 학습이 필요</li><li>도구를 프로세스 단계별로 적용하기 위한 시간, 비용, 노력이 필요</li><li>사용 도구의 경우 고가, 유지 관리 비용이 높아 추가 투자 필요</li></ul></li></ul><h3 id="정적-분석-도구-static-analysis-tools"><a class="markdownIt-Anchor" href="#정적-분석-도구-static-analysis-tools"></a> 정적 분석 도구 Static Analysis Tools</h3><ul><li>프로그램을 실제로 실행해 보지 않고 분석하는 방법</li><li>대부분의 경우 소스 코드에 대한 코딩 표준, 코딩 스타일, 코드 복잡도 및 남은 결함을 발견하기 위해 사용</li><li>테스트를 수행하는 사람이 작성된 소스 코드에 대한 이해를 기반한 자동화된 도구 활용한 분석 수행</li></ul><h3 id="테스트-실행-도구-test-execution-tools"><a class="markdownIt-Anchor" href="#테스트-실행-도구-test-execution-tools"></a> 테스트 실행 도구 Test Execution Tools</h3><ul><li>테스트를 위해 작성된 스크립트를 실행</li><li>데이터 주도 접근<ul><li>테스트 데이터를 스프레드 시트에 저장하고, 이 데이터를 읽고 실행할 수 있도록 함</li><li>다양한 테스트 데이터를 이용하여 동일한 테스트 케이스르 반복 실행</li><li>스크립트 언어에 익숙하지 않은 테스터도 미리 작성된 스크립트에 테스트 데이터만 추가하여 쉽게 테스트를 수행</li></ul></li><li>키워드 주도 접근 방식<ul><li>스프레드시트에 테스트를 수행할 동작을 나타내는 키워드와 테스트 데이터를 저장</li><li>키워드를 이용하여 테스트 수행 동작을 정의</li><li>테스트 대상 애플리케이션의 특성에 맞추어 키워드에 대해 테일러링을 수행</li></ul></li></ul><h3 id="성능-테스트-도구-performance-test-tools"><a class="markdownIt-Anchor" href="#성능-테스트-도구-performance-test-tools"></a> 성능 테스트 도구 Performance Test Tools</h3><ul><li>애플리케이션의 처리량, 응답 시간, 경과 시간, 자원 사용률에 대해 가상의 사용자를 생성하고 테스트를 수행함으로써 성능 목표를 달성하였는지를 확인하는 도구</li></ul><h3 id="테스트-통제-도구-test-control-tools"><a class="markdownIt-Anchor" href="#테스트-통제-도구-test-control-tools"></a> 테스트 통제 도구 Test Control Tools</h3><ul><li>테스트 계획 및 관리를 위한 <u>테스트 관리 도구</u></li><li>테스트 수행에 필요한 데이터와 도구를 관리하는 <u>형상 관리 도구</u></li><li>테스트에서 발생한 결함에 대해 관리하거나 협업을 지원하기 위한 <u>결함 추적/관리 도구</u></li><li>조직의 요구사항에 최적화된 형태의 정보를 생성, 관리하기 위하여 &lt;u트스프레드시트 등 다른 도구들과 연계하여 사용</u></li></ul><h3 id="테스트-장치-test-harness"><a class="markdownIt-Anchor" href="#테스트-장치-test-harness"></a> 테스트 장치 Test Harness</h3><ul><li>애플리케이션 컴포넌트 및 모듈을 테스트하는 환경의 일부분으로, 테스트를 지원하기 위한 코드와 데이터를 말하며, 단위 또는 모듈 테스트에 사용하기 위해 코드 개발자가 작성</li><li>구성요소<ul><li>테스트 드라이버<ul><li>상향식 테스트에 필요</li></ul></li><li>테스트 스텁<ul><li>하향식 테스트에 필요</li></ul></li><li>테스트 슈트<ul><li>대상 모듈, 테스트 케이스 집합</li></ul></li><li>테스트 케이스<ul><li>입력 값, 실행조건, 기대 결과</li></ul></li><li>테스트 스크립트<ul><li>자동화된 스크립트 실행 절차</li></ul></li><li>목 Mock 오브젝트<ul><li>행위를 조건부로 사전에 입력</li></ul></li></ul></li></ul><h3 id="테스트-자동화-도구"><a class="markdownIt-Anchor" href="#테스트-자동화-도구"></a> 테스트 자동화 도구</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_04.png" alt="자동화도구" /></p><h3 id="소프트웨어-테스트-관리-지원-도구"><a class="markdownIt-Anchor" href="#소프트웨어-테스트-관리-지원-도구"></a> 소프트웨어 테스트 관리 지원 도구</h3><ul><li>실행된 테스트와 테스트 활동 관리를 지원하며 테스트 실행 도구나 결함 추적 도구, 요구사항 관리 도구와의 인터페이스 역할</li><li>결함이 발견, 분배, 수정, 확인, 종료되는 결함의 생명주기 관리</li><li>테스트 진행 상황에 대한 리포트 생성, 발견된 결함의 정량적인 분석을 지원</li><li>오픈 소스<ul><li>결함관리<ul><li>Mantis, Bugzilla</li></ul></li><li>테스트 케이스 관리 도구<ul><li>Testlink</li></ul></li><li>형상 관리 도구<ul><li>CVS, SVN, Git, Bazar</li></ul></li><li>커뮤니케이션 도구<ul><li>MediaWiki, Dokuwiki</li></ul></li><li>통합프로젝트 지원 도구<ul><li>Trac, nForge, Gforge</li></ul></li></ul></li><li>상용 소스<ul><li>버그 추적<ul><li>JIRA, TPMS, Test Director</li></ul></li><li>형상 관리<ul><li>Visual Sourcesafe, IBM, Clear Case</li></ul></li><li>커뮤니케이션<ul><li>Confluence</li></ul></li></ul></li></ul><h3 id="소프트웨어-정적-분석-지원-도구"><a class="markdownIt-Anchor" href="#소프트웨어-정적-분석-지원-도구"></a> 소프트웨어 정적 분석 지원 도구</h3><ul><li>리뷰 프로세스에 관한 정보를 저장, 리뷰 코멘트를 저장</li><li>정적 분석 도구는 동적 테스트를 하기 전에 결함을 발견할 수 있도록 지원</li><li>코딩 표준을 지킬 것을 강제하고 구조와 의존 관계를 분석</li><li>소스 코드의 복잡도를 측정</li><li>오픈소스<ul><li>PMD</li><li>Valgrind</li><li>Find Bugs</li><li>CPPCheck</li><li>Corbetrua</li></ul></li><li>상용 소스<ul><li>Coverity</li><li>IBM Rtional Software</li><li>PloySpace</li></ul></li></ul><h3 id="소프트웨어-테스트-실행-및-로깅-지원-도구"><a class="markdownIt-Anchor" href="#소프트웨어-테스트-실행-및-로깅-지원-도구"></a> 소프트웨어 테스트 실행 및 로깅 지원 도구</h3><ul><li>스크립트 언어의 도움으로 저장된 입력 값과 예상 결과를 이용하여 테스트를 실행하고 결과와 비교</li><li>테스트 대상이 실행되는 환경을 시뮬레이션, 테스트 Harness 도구</li><li>오픈 소스<ul><li>테스트 프레임워크<ul><li>xUnit, TestNG, FIT</li><li>Jmock, Easymock, Googlemock</li></ul></li><li>지속적인 통합<ul><li>CruiseControl, hudson, jenkinson</li></ul></li><li>빌드자동화<ul><li>Ant, Maven, Make</li></ul></li><li>실행자동화<ul><li>STAF/STAX, Selenium</li></ul></li></ul></li><li>상용 소스<ul><li>WinRunner</li><li>Jtest</li><li>CodeScroll</li></ul></li></ul><h3 id="소프트웨어-성능-및-모니터링-도구"><a class="markdownIt-Anchor" href="#소프트웨어-성능-및-모니터링-도구"></a> 소프트웨어 성능 및 모니터링 도구</h3><ul><li>소프트웨어가 실행도중에만 발생하는 시간 의존성과 메모리 누수와 같은 결함 발견에 활용</li><li>소프트웨어 성능/부하/스트레스를 테슽</li><li>특정 시스템 리소스의 사용량을 지속적으로 분석하고 확인</li><li>오픈 소스<ul><li>Jmeter</li><li>OpenSTA</li><li>allomon</li></ul></li><li>상용 소스<ul><li>E-load</li><li>LoadRunner</li><li>Webload</li><li>Robot</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;개발자 통합 테스트 계획에 따라 &lt;u&gt;통합 모듈 및 인
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션통합테스트수행" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%86%B5%ED%95%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%88%98%ED%96%89/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-21T04:31:06.000Z</published>
    <updated>2020-05-21T04:31:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="1-애플리케이션-테스트-케이스-작성"><a class="markdownIt-Anchor" href="#1-애플리케이션-테스트-케이스-작성"></a> 1. 애플리케이션 테스트 케이스 작성</h3><ul><li>테스트에 대한 기본 개념 및 테스트의 기법을 파악하고 테스트 케이스 작성 기법</li><li>소프트웨어 테스트 기법 분류에서는 소프트웨어 내부 구조 참조 여부에 따른 분류, 테스트 설계의 근원에 따른 분류</li><li>테스트 케이스 작성 방법</li></ul><h3 id="2-애플리케이션-테스트-시나리오-작성"><a class="markdownIt-Anchor" href="#2-애플리케이션-테스트-시나리오-작성"></a> 2. 애플리케이션 테스트 시나리오 작성</h3><ul><li>테스트 시나리오 개념 및 작성시 유의사항</li><li>테스트 환경구축의 개념 및 유의사항</li><li>소프트웨어 테스트 관련 국제표준에 의한 테스트 지식 체계</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;1-애플리케이션-테스트-케이스-작성&quot;&gt;&lt;a class=&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션테스트시나리오작성</title>
    <link href="https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4%EC%9E%91%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/21/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4%EC%9E%91%EC%84%B1/</id>
    <published>2020-05-21T03:50:39.000Z</published>
    <updated>2020-05-21T03:50:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><h3 id="테스트-시나리오-개념"><a class="markdownIt-Anchor" href="#테스트-시나리오-개념"></a> 테스트 시나리오 개념</h3><ul><li>테스트 수행을 위한 여러 테스트 케이스의 집합</li><li>테스트 케이스의 동작 순서를 기술한 문서이며 테스트를 위한 절차를 명세한 문서</li></ul><h3 id="테스트-시나리오-작성시-유의사항"><a class="markdownIt-Anchor" href="#테스트-시나리오-작성시-유의사항"></a> 테스트 시나리오 작성시 유의사항</h3><ul><li>테스트 항목을 하나의 시나리오에 모두 작성하지 않고, <u>시스템별, 모듈별, 항목별 테스트 시나리오를 분리하여 작성 </u></li><li><u>고객의 요구사항과 설계 문서 등을 토대로 작성</u></li><li>테스트 항목<ul><li>식별자 번호</li><li>순서 번호</li><li>테스트 데이터</li><li>테스트 케이스</li><li>예상 결과</li><li>확인</li></ul></li></ul><h3 id="테스트-환경-구축의-개념"><a class="markdownIt-Anchor" href="#테스트-환경-구축의-개념"></a> 테스트 환경 구축의 개념</h3><ul><li>개발된 응용 소프트웨어가 실제 운영 시스템에서 정상적으로 작동하는지 테스트 할 수 있또록 하기 위하여 실제 운영 시스템과 동일 또는 유사한 사양의 하드웨어, 소프트웨어, 네트워크 등의 시설을 구축하는 활동</li></ul><h3 id="테스트-환경-구축시-유의점"><a class="markdownIt-Anchor" href="#테스트-환경-구축시-유의점"></a> 테스트 환경 구축시 유의점</h3><ol><li>테스트 환경의 분리<ul><li>개발을 위한 환경과 테스를 위한 환경이 물리적으로 분리되는 것이 좋음</li></ul></li><li>가상 머신 기반의 서버나 클라우드 환경의 이용<ul><li>별도의 테스트가 어려울시 가상머신 서버나 클라우드 환경을 이용하여 일시적 테스트하는 것도 좋음</li></ul></li><li>네트워크 분할과 공유디스크 관리<ul><li>물리적 환경 분리가 불가능하면 VLAN과 같은 소프트웨어를 이용하여 논리적으로 분할</li></ul></li><li>연동 시스템의 테스트 환경<ul><li>다른 시스텤과 연동을 위한 시스템의 경우 연동 시스템에 대한 테스트 환경이 별도 구성</li></ul></li></ol><h3 id="소프퉤어-테스트-관련-국제표준"><a class="markdownIt-Anchor" href="#소프퉤어-테스트-관련-국제표준"></a> 소프퉤어 테스트 관련 국제표준</h3><ul><li>IS0/IEC 29119<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0521_01.png" alt="테스트 지식 체계 IS0 29119" /></li></ul><h3 id="테스트-지식-체계-개념"><a class="markdownIt-Anchor" href="#테스트-지식-체계-개념"></a> 테스트 지식 체계 개념</h3><ul><li>전체 시리즈에 대한 가이드를 제공해 주는 부분</li><li>소프트웨어 테스팅 개념</li><li>조직과 프로젝트 관점에서의 소프트웨어 테스팅</li><li>소프트웨어 생명 주기 모델에서의 일반적인 테스팅 프로세스</li><li>위험 기반 테스팅</li><li>테스트 서브 프로세스</li></ul><h3 id="테스트-프로세스"><a class="markdownIt-Anchor" href="#테스트-프로세스"></a> 테스트 프로세스</h3><ul><li>조직, 테스트 관리, 동적 테스트의 3가지 수준의 다계층 프로세스 모델을 설명</li><li>다계층 프로세스 모델</li><li>조직의 테스트 프로세스</li><li>테스트 관리 프로세스</li><li>동적 테스트 프로세스</li></ul><h3 id="테스트-문서화"><a class="markdownIt-Anchor" href="#테스트-문서화"></a> 테스트 문서화</h3><ul><li>테스트 프로세스 단계별 산출문의 견본제시 및 작성방법 설명</li><li>조직의 테스트 프로세스 문서</li><li>테스트 관리 프로세스 문서</li><li>동적 테스트 프로세스 문서</li></ul><h3 id="키워드-주도-테스팅"><a class="markdownIt-Anchor" href="#키워드-주도-테스팅"></a> 키워드 주도 테스팅</h3><ul><li>사전 정의된 키워드의 모음으로 테스트 케이스를 만드는 것</li><li>테스트 단계에서 자연어 대신 키워드를 사용함으로써 테스트 케이스는 이해하기 쉽고 유지보수가 용이</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;h3 id=&quot;테스트-시나리오-개념&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트시나리오작성" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4%EC%9E%91%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>애플리케이션테스트케이스설계 - 애플리케이션테스트케이스작성</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%9E%91%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch08_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B4%80%EB%A6%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%9E%91%EC%84%B1/</id>
    <published>2020-05-20T13:41:35.000Z</published>
    <updated>2020-05-20T13:41:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="애플리케이션테스트케이스설계"><a class="markdownIt-Anchor" href="#애플리케이션테스트케이스설계"></a> 애플리케이션테스트케이스설계</h2><ul><li>개발하고자 하는 응용 소프트웨어의 특성을 반영한 <u>테스트 방식, 대상과 범위를 결정하여 테스트 케이스를 작성</u></li><li><u>테스트 방식, 대상과 범위가 적용된 시나리오를 정의</u></li><li><u>테스트 데이터, 테스트 시작 및 종료 조건 등을 준비</u></li></ul><h3 id="소프트웨어-테스트의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-테스트의-개념"></a> 소프트웨어 테스트의 개념</h3><ul><li>구현된 응용 애플리케이션이나 시스템이 사용자가 요구하는 기능의 동작과 성능, 사용성, 안정성 등을 만족하는지 확인하기 위하여 <u>소프트웨어의 결함을 찾아내는 행동</u></li></ul><h3 id="소프트웨어-테스트의-필요성"><a class="markdownIt-Anchor" href="#소프트웨어-테스트의-필요성"></a> 소프트웨어 테스트의 필요성</h3><ul><li>오류 발견 관점<ul><li>프로그램에 잠재된 오류를 발견하고 이를 수정하여 올바른 프로그램을 개발하는 활동</li></ul></li><li>오류 예방 관점<ul><li>프로그램 실행 전에 코드 리뷰, 동료 검토, 인스펙션 등을 통해 <u>오류를 사전에 발견</u>하는 예방 차원의 활동</li></ul></li><li>품질 향상 관점<ul><li>사용자의 요구사항 및 기대 수준을 만족하도록 반복적인 테스트를 거쳐 <u>제품의 신뢰도를 향상</u>하는 품질보증활동</li></ul></li></ul><h3 id="소프트웨어-테스트의-기본-원칙"><a class="markdownIt-Anchor" href="#소프트웨어-테스트의-기본-원칙"></a> 소프트웨어 테스트의 기본 원칙</h3><ul><li>테스팅은 <u>결함이 존재함을 밝히는 활동</u></li><li>완벽한 테스팅은 <b>불가능</b></li><li>개발 초기에 시작</li><li><u>결함 집중</u></li><li><u>살충제 패러독스</u><ul><li>주기적으로 테스트 케이스를 리뷰하고 개선</li></ul></li><li>테스팅은 정황에 의존식<ul><li>테스트 대상에 따라 테스트를 다르게 수행</li></ul></li><li>오류-부재의 궤변<ul><li>사용자 요구사항을 만족하지 못하는 결함을 찾고 수정하는 것은 무의미</li></ul></li></ul><h3 id="소프트웨어-테스트의-프로세스"><a class="markdownIt-Anchor" href="#소프트웨어-테스트의-프로세스"></a> 소프트웨어 테스트의 프로세스</h3><ul><li>테스트 프로세스 유형은 테스트 계획 수립 단계와 수행 단계, 결과 보고 단계에 따라 테스트 프로세스 유형이 다름<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_10.png" alt="테스트 프로세스" /></li></ul><h3 id="소프트웨어-테스트-산출물"><a class="markdownIt-Anchor" href="#소프트웨어-테스트-산출물"></a> 소프트웨어 테스트 산출물</h3><ul><li>테스트 계획서<ul><li>목적과 범위 정의</li><li>대상 시스템 구조 파악</li><li>테스트 수행 절차</li><li>테스트 일정</li><li>조직의 역할 및 책임 정의</li><li>종료 조건 정의</li></ul></li><li><b>테스트 케이스</b><ul><li>설계 산출물</li><li>명세서<ul><li>입력값</li><li>실행 조건</li><li>기대 결과</li></ul></li></ul></li><li><b>테스트 시나리오</b><ul><li>테스트 케이스의 집합</li><li>절차를 명세한 문서</li></ul></li><li>테스트 결과서<ul><li>테스트 프로세스를 리뷰</li><li>테스트 결과물 평가하고 리포팅하는 문서</li></ul></li></ul><h3 id="소프트웨어테스트-분류"><a class="markdownIt-Anchor" href="#소프트웨어테스트-분류"></a> 소프트웨어테스트 분류</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_11.png" alt="소프트웨어테스트 분류" /></p><h4 id="정적-테스트-프로그램-실행-없이-테스트"><a class="markdownIt-Anchor" href="#정적-테스트-프로그램-실행-없이-테스트"></a> 정적 테스트 : 프로그램 실행 없이 테스트</h4><ul><li><u>코드를 실행하지 않고</u> 여러 참가자가 모여 소프트웨어 개발 중에 생성되는 모든 명세나 코드를 검토</li><li>정적 테스트<ul><li>기술적 검토기법<ul><li>개별 검토</li><li>동료 검토</li><li>검토 회의</li></ul></li><li>관리적 검토기법<ul><li>검사</li><li>감사</li></ul></li></ul></li></ul><h4 id="동적-테스트-테스트-데이터를-이용해-프로그램-실행-테스트"><a class="markdownIt-Anchor" href="#동적-테스트-테스트-데이터를-이용해-프로그램-실행-테스트"></a> 동적 테스트 : 테스트 데이터를 이용해 프로그램 실행 테스트</h4><ul><li>명세 기반 테스트(블랙박스 테스트)<ul><li><u>코드를 열어 오류를 찾지 않고 입력값에 대한 예상값을 정해 놓고 그대로 결과가 나오는지 확인</u></li><li>방법<ul><li>신택스</li><li>동등분할</li><li>경계값분석</li><li>원인-결과 그래프</li><li>의사결정 테이블</li><li>페어와이즈</li></ul></li></ul></li><li>구조 기반 테스트(화이트박스 테스트)<ul><li><u>프로그램을 보면서 내부 논리 흐름에 따라 테스트 케이스를 작성하고 확인</u></li><li>방법<ul><li>구문 기반</li><li>결정 기반</li><li>조건 기반</li><li>조건결정 기반</li><li>변경조건 결정 기반</li><li>멀티 조건 기반 커버리지 테스트</li></ul></li></ul></li></ul><h3 id="테스트-케이스-개념"><a class="markdownIt-Anchor" href="#테스트-케이스-개념"></a> 테스트 케이스 개념</h3><ul><li>명세 기반 테스트 설계 산출물</li><li><u>특정한 요구사항을 준수하는지 확인하기 위해 설계된 입력 값, 실행 조건, 기대 결과로 구성된 테스트 항목의 명세서</u></li></ul><h3 id="테스트-케이스-작성-절차"><a class="markdownIt-Anchor" href="#테스트-케이스-작성-절차"></a> 테스트 케이스 작성 절차</h3><ol><li>테스트 계획 검토 및 자료 확보<ul><li>시스템 요구사항</li><li>기능 명세서 검토</li></ul></li><li>위험평가 및 우선순위 결정<ul><li>상대적 중요성과 테스트의 초점 결정</li></ul></li><li>테스트 요구사항 정의<ul><li>시스템 요구사항</li><li>테스트 대상 재검토</li><li>테스트 할 특성, 조건, 기능</li></ul></li><li>테스트 구조 설계 및 테스트 방법 결정<ul><li>테스트 절차, 장비, 도구, 문서화 방법</li></ul></li><li>테스트 케이스 정의<ul><li>테스트 케이스<ul><li>입력 값</li><li>실행 조건</li><li>예상 결과</li></ul></li></ul></li><li>테스트 케이스 타당성 확인 및 유지보수<ul><li>유용성 검토</li></ul></li></ol><h3 id="테스트-오라클의-개념"><a class="markdownIt-Anchor" href="#테스트-오라클의-개념"></a> 테스트 오라클의 개념</h3><ul><li><u>테스트의 결과가 참인지 거짓인지를 판단</u>하기 위해서 사전에 정의된 참 값을 입력하여 비교하는 기법</li></ul><h3 id="유형"><a class="markdownIt-Anchor" href="#유형"></a> 유형</h3><ul><li>참 오라클<ul><li>모든 입력 값에 대하여 기대하는 결과를 생성</li></ul></li><li>샘플링 오라클<ul><li>특정한 몇 개의 입력 값에 대해서</li></ul></li><li>휴리스틱 오라클<ul><li>특정 입력 값에 대해 올바른 결과를 제공하고 나머지 값들에 대해 추정으로 처리</li></ul></li><li>일관성 검사<ul><li>애플리케이션 변경이 있을 때, 수행 전과 후의 결과 값이 동일한지 확인</li></ul></li></ul><h3 id="v모델과-테스트-단계"><a class="markdownIt-Anchor" href="#v모델과-테스트-단계"></a> V모델과 테스트 단계</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_12.png" alt="V모델과 테스트 단계" /></p><h3 id="테스트-단계별-기능-검증-사항"><a class="markdownIt-Anchor" href="#테스트-단계별-기능-검증-사항"></a> 테스트 단계별 기능 검증 사항</h3><ol><li>단위 테스트<ul><li>프로그램의 기본 단위인 모듈(함수, 서브루틴, 컴포넌트)의 기능 수행 여부를 판정하고 내부에 논리적 오류 검출</li></ul></li><li>통합 테스트<ul><li>모듈 간의 인터페이스 연계를 검증</li><li>모듈 간의 인터페이스 오류를 확인</li><li><u>상호 작용 및 연계 동작 여부 판정하는 방안 파악</u></li></ul></li><li>시스템 테스트<ul><li><u>시스템 전체가 정상적으로 동작하는지 기능적, 비기능적 명세를 확인</u></li></ul></li><li>인수 테스트<ul><li>사용자가 요구분석 명세서에 명시된 사항을 모두 충족하는지 판정</li><li>시스템이 예상대로 동작하고 있는지 점검</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;애플리케이션테스트케이스설계&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#애플리케이션테스트케이스설계&quot;&gt;&lt;/a&gt; 애플리케이션테스트케이스설계&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;개발하고자 하는 응용 소프트웨어의 특성을 반영한 &lt;u&gt;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스설계" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="애플리케이션테스트케이스작성" scheme="https://hyeonukdev.github.io/tags/%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EC%9E%91%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-20T06:08:00.000Z</published>
    <updated>2020-05-20T06:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><h3 id="1-인터페이스-구현-검증"><a class="markdownIt-Anchor" href="#1-인터페이스-구현-검증"></a> 1. 인터페이스 구현 검증</h3><ul><li>인터페이스 구현 검증 도구, 감시도구</li><li>인터페이스 구현 검증에 필요한 설계 산출물<ol><li>인터페이스 명세서</li><li>인터페이스 단위 및 통합 테스트 설계서</li></ol></li></ul><h3 id="2-인터페이스-오류-처리-확인-및-보고서-작성"><a class="markdownIt-Anchor" href="#2-인터페이스-오류-처리-확인-및-보고서-작성"></a> 2. 인터페이스 오류 처리 확인 및 보고서 작성</h3><ul><li>인터페이스 오류 처리 방법<ol><li>사용자 화면에서 오류를 발생</li><li>인터페이스 오류 로그 생성</li><li>인터페이스 관련 테이블에 오류 사항 기록</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;h3 id=&quot;1-인터페이스-구현-검증&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 오류처리 확인 및 보고서 작성</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/%EC%98%A4%EB%A5%98%EC%B2%98%EB%A6%AC%ED%99%95%EC%9D%B8%EB%B0%8F%EB%B3%B4%EA%B3%A0%EC%84%9C%EC%9E%91%EC%84%B1/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/%EC%98%A4%EB%A5%98%EC%B2%98%EB%A6%AC%ED%99%95%EC%9D%B8%EB%B0%8F%EB%B3%B4%EA%B3%A0%EC%84%9C%EC%9E%91%EC%84%B1/</id>
    <published>2020-05-20T05:38:42.000Z</published>
    <updated>2020-05-20T05:38:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><h3 id="사용자-화면에서-오류를-발생"><a class="markdownIt-Anchor" href="#사용자-화면에서-오류를-발생"></a> 사용자 화면에서 오류를 발생</h3><ul><li>사용자 화면에서 인터페이스 오류를 인지하는 방법은 <u>가장 직관적으로 오류를 인지할 수 있음</u></li><li>인터페이스 오류가 발생하였을 경우 <u>알람 형태로 화면에 표시</u></li><li>주로 즉시적으로 데이터가 인터페이스 되는 경우에 사용</li></ul><h3 id="인터페이스-오류-로그-생성"><a class="markdownIt-Anchor" href="#인터페이스-오류-로그-생성"></a> 인터페이스 오류 로그 생성</h3><ul><li>시스템 운영 로그에 인터페이스 오류 시 관련 에러 로그 생성</li><li>인터페이스 오류의 자세한 내역을 알기 위해서 사용되며, 시스템 관리자나 운영자가 오류 로그를 확인</li></ul><h3 id="인터페이스-관련-테이블에-오류-사항-기록"><a class="markdownIt-Anchor" href="#인터페이스-관련-테이블에-오류-사항-기록"></a> 인터페이스 관련 테이블에 오류 사항 기록</h3><ul><li>테이블을 통한 인터페이스 기능을 구현할 경우나 인터페이스 트랜잭션 기록을 별도로 보관하는 경우 테이블로 오류 사항 기록</li><li>장점은 이력을 직관적으로 보기 쉬워 운영자가 관리하기 편함</li></ul><h3 id="인터페이스-오류-처리-보고서-작성-및-보고"><a class="markdownIt-Anchor" href="#인터페이스-오류-처리-보고서-작성-및-보고"></a> 인터페이스 오류 처리 보고서 작성 및 보고</h3><ul><li><u>인터페이스 오류 발생시 상황인지 및 조치사항을 시간경과에 따라 작성</u></li><li>조직과 상황에 따른 <u>보고서 양식을 사용</u></li><li>인터페이스에 대한 오류 보고는 조치가 완료된 후에 보고하면이미 시기가 늦은 경우가 많음</li><li>시기에 따라 조직에서 정의한 프로세스에 의하여 보고</li></ul><h3 id="인터페이스-오류-처리-보고-시기에-따른-보고서-특징"><a class="markdownIt-Anchor" href="#인터페이스-오류-처리-보고-시기에-따른-보고서-특징"></a> 인터페이스 오류 처리 보고 시기에 따른 보고서 특징</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_09.png" alt="보고서 특징" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;h3 id=&quot;사용자-화면에서-오류를-발생&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="오류처리확인및보고서작성" scheme="https://hyeonukdev.github.io/tags/%EC%98%A4%EB%A5%98%EC%B2%98%EB%A6%AC%ED%99%95%EC%9D%B8%EB%B0%8F%EB%B3%B4%EA%B3%A0%EC%84%9C%EC%9E%91%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 인터페이스 구현 검증</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/</id>
    <published>2020-05-20T05:12:51.000Z</published>
    <updated>2020-05-20T05:12:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><ul><li>구현된 인터페이스 명세서를 참조하여 <u>구현 검증에 필요한 검시 및 도구를 준비</u></li><li>인터페이스 구현 검증을 위한 외부 시스템과의 연계 모듈 상태 확인</li><li>인터페이스 오류처리 사항을 확인하고 보고서를 작성</li></ul><h3 id="인터페이스-구현-검증-도구"><a class="markdownIt-Anchor" href="#인터페이스-구현-검증-도구"></a> 인터페이스 구현 검증 도구</h3><ul><li>인터페이스 단위 기능 및 시나리오에 기반한 통합 테스트 필요</li><li>테스트 자동화 도구를 이용하여 단위 및 통합 테스트의 효율성 제고<ul><li>도구<ul><li>xUnit</li><li>STAF</li><li>FitNesse</li><li>NTAF</li><li>Selenium</li><li>watir</li></ul></li></ul></li></ul><h3 id="인터페이스-감시-도구"><a class="markdownIt-Anchor" href="#인터페이스-감시-도구"></a> 인터페이스 감시 도구</h3><ul><li>인터페이스의 동작이 잘 진행되는지 확인하기 위해서는 <u>애플리케이션 모니터링툴 APM; Application Performance Management</u>을 사용하여 <u>동작 상태를 감시</u></li><li>데이터베이스, 웹 애플리케이션의 <u>트랜잭션과 변수 값, 호출 함수, 로그, 시스템 부하등 종합적인 정보를 조회하고 분석</u></li></ul><h3 id="인터페이스-명세서"><a class="markdownIt-Anchor" href="#인터페이스-명세서"></a> 인터페이스 명세서</h3><ul><li>인터페이스 명세서에 정의된 데이터 전송주기, 전송량, 전송 포맷대로 수신 시스템에 데이터가 전송되었는지 확인</li></ul><h3 id="인터페이스-단위-및-통합-테스트-설계서"><a class="markdownIt-Anchor" href="#인터페이스-단위-및-통합-테스트-설계서"></a> 인터페이스 단위 및 통합 테스트 설계서</h3><ul><li>인터페이스 단위 및 통합 테스트 설계서를 활용하여 구현 검증 설계</li></ul><h3 id="인터페이스-명세서-기반-구현-검증-기법"><a class="markdownIt-Anchor" href="#인터페이스-명세서-기반-구현-검증-기법"></a> 인터페이스 명세서 기반 구현 검증 기법</h3><ul><li>구현된 인터페이스 명세서의 세부 기능을 참조하여 구현 검증 및 감시에 필요한 기능을 분석<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_07.png" alt="기능에 맞는 요건" /></li></ul><h3 id="인터페이스-테스트-설계서-기반-구현-검증-기법"><a class="markdownIt-Anchor" href="#인터페이스-테스트-설계서-기반-구현-검증-기법"></a> 인터페이스 테스트 설계서 기반 구현 검증 기법</h3><ul><li>인터페이스 구현 검증을 위하여 외부 시스템과 연계 모듈 상태 확인<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_08.png" alt="연계 모듈 상태" /></li></ul><h3 id="인터페이스-테스트-결과-검증-방법"><a class="markdownIt-Anchor" href="#인터페이스-테스트-결과-검증-방법"></a> 인터페이스 테스트 결과 검증 방법</h3><ul><li>운영DB테이블의 건수를 카운트 하는 방법</li><li>실제 테이블이나 파일을 열어서 데이터를 확인하는 방법</li><li>파일 생성 위치의 파일 생성 여부와 파일 크기를 확인하는 방법</li><li>연계서버에서 제공하는 모니터링 화면의 내용을 확인하는 방법</li><li>시스템에 기록하는 로그를 확인하는 방법</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;구현된 인터페이스 명세서를 참조하여 &lt;u&gt;구현 검증에 필요한 검시 및 도구를 준비
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스구현검증" scheme="https://hyeonukdev.github.io/tags/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84%EA%B2%80%EC%A6%9D/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-20T05:01:41.000Z</published>
    <updated>2020-05-20T05:01:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><h3 id="1-인터페이스-보안"><a class="markdownIt-Anchor" href="#1-인터페이스-보안"></a> 1. 인터페이스 보안</h3><ul><li>인터페이스 보안 취약점에 대한 시큐어 코딩 항목</li><li>인터페이스 보안 기능 적용<ul><li>네트워크 구간</li><li>애플리케이션</li><li>데이터베이스</li></ul></li><li>데이터베이스 암호화 알고리즘<ul><li>대칭키</li><li>해시</li><li>비대칭키</li></ul></li></ul><h3 id="2-소프트웨어-연계-테스트"><a class="markdownIt-Anchor" href="#2-소프트웨어-연계-테스트"></a> 2. 소프트웨어 연계 테스트</h3><ul><li>내/외부 연계 모듈 구현에서 소프트웨어 연계 테스트는 송신 시스템과 수신 시스템 간에 연계 테스트를 의미</li><li>소프트웨어 연계 단위 테스트</li><li>소프트웨어 연계 단위 테스트 케이스 작성</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;h3 id=&quot;1-인터페이스-보안&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 소프트웨어 연계 테스트</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%EA%B5%AC%ED%98%84/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%97%B0%EA%B3%84%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%EA%B5%AC%ED%98%84/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%97%B0%EA%B3%84%ED%85%8C%EC%8A%A4%ED%8A%B8/</id>
    <published>2020-05-20T04:23:07.000Z</published>
    <updated>2020-05-20T04:23:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><h3 id="소프트웨어-연계-테스트"><a class="markdownIt-Anchor" href="#소프트웨어-연계-테스트"></a> 소프트웨어 연계 테스트</h3><ul><li>내/외부 연계 모듈 구현에서 소프트웨어 연계 테스트는 송신 시스템과 수신 시스템 간에 연계 테스트를 의미</li><li>송신 시스템에서 중계 시스템을 거쳐서 수신 시스템까지 연계하였을 경우 <u>데이터의 정합성 및 데이터 전송 여부를 테스트 </u></li></ul><h3 id="소프트웨어-연계-테스트-구간"><a class="markdownIt-Anchor" href="#소프트웨어-연계-테스트-구간"></a> 소프트웨어 연계 테스트 구간</h3><ul><li>소프트웨어 연계 테스트 구간은 송신 시스템에서 연계 서버 또는 중계 서버를 거치고 수신 시스템까지 데이터가 저달되는지 테스트</li></ul><h3 id="소프트웨어-연계-단위-테스트"><a class="markdownIt-Anchor" href="#소프트웨어-연계-단위-테스트"></a> 소프트웨어 연계 단위 테스트</h3><ul><li>소프트웨어 연계 단위 테스트는 <u>연계 자체</u>만을 테스트</li><li>송신 시스템에서 연계 데이터를 추출 및 생성하고 이를 연계 테이블로 생성</li><li>연계 서버 또는 중계 서버가 있는 경우 연계 테이블 간 송수신</li><li>연계 서버 또는 중계 서버에서는 수신된 연계 테이블 생성</li><li>수신 시스템에서는 연계 테이블에서 연계 데이터를 수신 시스템으로 로드</li></ul><h3 id="소프트웨어-연계-통합-테스트"><a class="markdownIt-Anchor" href="#소프트웨어-연계-통합-테스트"></a> 소프트웨어 연계 통합 테스트</h3><ul><li>비즈니스 프로세서 흐름에 맞춰 <u>연계 데이터 생성, 전송, 저장까지 보다 큰 통합 기능 테스트</u>의 일부로서 연계 통합 테스트를 수행</li><li>인위적인 조작없이 비즈니스 프로세스 흐름에 맞춰 연계기능 점검</li><li>최종적으로 수신 시스템의 운영 DB에 반영된 데이터 검색 및 활용<br /><img src="/imgaes/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_06.png" alt="소프트웨어 연계 통합 테스트" /></li></ul><h3 id="소프트웨어-연계-테스트-케이스-작성-방법"><a class="markdownIt-Anchor" href="#소프트웨어-연계-테스트-케이스-작성-방법"></a> 소프트웨어 연계 테스트 케이스 작성 방법</h3><ul><li><u>송/수신 시스템에서 확인해야 할 사항을 각각 도출</u></li><li>송/수신 시스템 각각에서 단순 <u>개별 데이터의 유효 값을 체크하는 경우의 수와 데이터 간의 연관관계를 체크</u>하는 경우의 수로 식별하여 작성</li><li>단순 개별 데이터의 유효 값은 코드일 경우, 코드 테이블에 등록된 값의 여부 또는 유효 데이터 타입, 길이, 필수 입력 등의 체크 의미</li><li>데이터 간의 연관 관계 체크는 연계 서버 또는 중계 서버를 통하여 연관 관계가 주어진 규칙대로 데이터 변환을 시켜 주는지 점검</li></ul><h3 id="송신용-연계-응용-프로그램의-단위-테스트-케이스-작성"><a class="markdownIt-Anchor" href="#송신용-연계-응용-프로그램의-단위-테스트-케이스-작성"></a> 송신용 연계 응용 프로그램의 단위 테스트 케이스 작성</h3><ul><li>송신 시스템에서 연계 데이터 추출이 제대로 되었는지, 연계 데이터가 수신 시스템에 맞게 코드 변환이 되었는지를 테스트</li></ul><h3 id="연계-통합-테스트-케이스-작성"><a class="markdownIt-Anchor" href="#연계-통합-테스트-케이스-작성"></a> 연계 통합 테스트 케이스 작성</h3><ul><li>송신용 연계 응용프로그램과 수신용 연계 응용프로그램의 기능 위주 결함을 확인하는 통합 테스트 케이스로 작성</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-연계-테스트&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hre
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="소프트웨어연계테스트" scheme="https://hyeonukdev.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%97%B0%EA%B3%84%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 인터페이스 보안</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B3%B4%EC%95%88/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B3%B4%EC%95%88/</id>
    <published>2020-05-19T15:44:55.000Z</published>
    <updated>2020-05-19T15:44:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><ul><li>개발하고자 하는 응요소프트웨어와 연계 대상 모듈 간의 세부 설계서를 확인하여<ul><li><u>일관되고 정형화된 인터페이스 기능 구현을 정의</u></li><li><u>공통적인 인터페이스 구현</u></li></ul></li><li>실패 시 <u>예외 처리 방안을 정의</u></li><li><u>인터페이스 보안 기능 적용</u></li></ul><h3 id="sniffing-스니핑"><a class="markdownIt-Anchor" href="#sniffing-스니핑"></a> Sniffing 스니핑</h3><ul><li>데이터 통신 내역을 중간에서 감청하여 기밀성을 훼손할 수 있는 방법</li><li>주로 <u>패킷 분석기 같은 툴</u>을 통해서 진행</li></ul><h3 id="secure-coding-시큐어-코딩"><a class="markdownIt-Anchor" href="#secure-coding-시큐어-코딩"></a> Secure Coding 시큐어 코딩</h3><ul><li>대표적인 엡 애플리케이션의 보안 취약점 발표 사례인 OWASP; Open Web Application Security Project 참고 KISA에서 SW보안 약점 가이드 발표</li><li>항목<ul><li>입력 데이터 검증 및 표현</li><li>API 이용</li><li>보안 특성</li><li>시간 및 상태</li><li>에러 처리</li><li>코드 품질</li><li>캡슐화</li></ul></li></ul><h3 id="네트워크-구간-보안-기능-적용"><a class="markdownIt-Anchor" href="#네트워크-구간-보안-기능-적용"></a> 네트워크 구간 보안 기능 적용</h3><ul><li>인터페이스 송수신 간 중간자에 의한 데이터 탈취 위/변조를 막기 위해서는 <u>네트워크 트래픽에 대한 암호화 필요</u></li><li>아키텍처에 따라 다양한 방식으로 보안 기능 적용<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_04.png" alt="네트워크 구간 보안 기능 적용" /></li></ul><h3 id="애플리케이션-보안-기능-적용"><a class="markdownIt-Anchor" href="#애플리케이션-보안-기능-적용"></a> 애플리케이션 보안 기능 적용</h3><ul><li>애플리케이션 구현 <u>코드상에 보안 취약점을 보안</u>하는 방향으로 애플리케이션 보안 기능을 적용</li><li>고려사항<ul><li>비인가자 접근 권한 관리</li><li>악의적 코드 삽입 금지</li><li>악의적 시도 시 에러 처리</li></ul></li></ul><h3 id="데이터베이스에-보안-기능-적용"><a class="markdownIt-Anchor" href="#데이터베이스에-보안-기능-적용"></a> 데이터베이스에 보안 기능 적용</h3><ul><li><u>접근 권한 및 동작 개체의 보안 취약점을 보안</u>하기 위해 보안 기능을 적용</li><li>민감 데이터는 데이터 자체의 보안 방안도 고려</li><li>고려사항<ul><li>데이터베이스 접근 권한</li><li>악의적 코드 삽입 금지</li><li>민감 데이터 관리</li><li>악의적 시도시 에러 처리</li></ul></li></ul><h3 id="데이터베이스-암호화-알고리즘"><a class="markdownIt-Anchor" href="#데이터베이스-암호화-알고리즘"></a> 데이터베이스 암호화 알고리즘</h3><ul><li>대칭 키</li><li>해시</li><li>비대칭 키 알고리즘</li></ul><h3 id="데이터베이스-암호화-기법"><a class="markdownIt-Anchor" href="#데이터베이스-암호화-기법"></a> 데이터베이스 암호화 기법</h3><ul><li>애플리케이션에서 암호화를 수행하는 <u>API방식</u>과 데이터베이스에서 아ㅁ호활르 수행하는 <u>Plug-in방식</u>, 이 둘을 혼합한 <u>Hybrid방식</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_05.png" alt="데이터베이스 암호화 기법" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;개발하고자 하는 응요소프트웨어와 연계 대상 모듈 간의 세부 설계서를 확인하여
&lt;u
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스보안" scheme="https://hyeonukdev.github.io/tags/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%B3%B4%EC%95%88/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-19T15:34:21.000Z</published>
    <updated>2020-05-19T15:34:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><h3 id="1-인터페이스-기능-확인"><a class="markdownIt-Anchor" href="#1-인터페이스-기능-확인"></a> 1. 인터페이스 기능 확인</h3><ul><li>인터페이스 기능 확인 방법</li></ul><ol><li>인터페이스 목록과 인터페이스 명세서를 포함한 <u>인터페이스 설계서</u>를 통한 인터페이스 기능 확인</li><li>시스템의 <u>정적/동적 모형</u>을 통한 인터페이스 기능 확인</li><li>인터페이스 되는 <u>데이터명세 정의</u>를 통한 인터페이스 기능 확인</li></ol><ul><li>내부, 외부 모듈 연계 방법<ul><li>EAI</li><li>ESB</li></ul></li></ul><h3 id="2-데이터-표준-확인"><a class="markdownIt-Anchor" href="#2-데이터-표준-확인"></a> 2. 데이터 표준 확인</h3><ul><li>인터페이스를 위해 <u>인터페이스가 되어야 할 범위의 데이터들의 형식과 표준을 정의 한 것</u></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;h3 id=&quot;1-인터페이스-기능-확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 데이터표준확인</title>
    <link href="https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%91%9C%EC%A4%80%ED%99%95%EC%9D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/20/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%91%9C%EC%A4%80%ED%99%95%EC%9D%B8/</id>
    <published>2020-05-19T15:30:57.000Z</published>
    <updated>2020-05-19T15:30:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><h3 id="인터페이스-데이터-표준-개념"><a class="markdownIt-Anchor" href="#인터페이스-데이터-표준-개념"></a> 인터페이스 데이터 표준 개념</h3><ul><li>인터페이스를 위해 <u>인터페이스가 되어야 할 범위의 데이터들의 형식과 표준을 정의 한 것</u></li><li><u>인터페이스 데이터 형태의 동일 여부에</u> 따라 기존에 있었던 데이터 중 공통의 영역을 추출하여 정의하는 경우도 있고 인터페이스를 위해 한 쪽의 데이터를 변환하는 경우도 있음</li></ul><h3 id="인터페이스-데이터-표준-확인"><a class="markdownIt-Anchor" href="#인터페이스-데이터-표준-확인"></a> 인터페이스 데이터 표준 확인</h3><ul><li>인터페이스 구현 전에 개발자는 인터페이스 데이터 표준을 확인</li><li>인터페이스 구현 시 데이터 표준을 준수하여 구현</li><li>Json, DB, XML 등 다양한 형태로 인터페이스 모듈의 표현이 가능<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_03.png" alt="인터페이스 데이터 표준" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;h3 id=&quot;인터페이스-데이터-표준-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터표준확인" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%91%9C%EC%A4%80%ED%99%95%EC%9D%B8/"/>
    
  </entry>
  
  <entry>
    <title>인터페이스설계확인 - 인터페이스기능확인</title>
    <link href="https://hyeonukdev.github.io/2020/05/19/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%ED%99%95%EC%9D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/19/Engineer_Information_Processing/ch09_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B5%AC%ED%98%84/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%ED%99%95%EC%9D%B8/</id>
    <published>2020-05-19T14:45:24.000Z</published>
    <updated>2020-05-19T14:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="인터페이스설계확인"><a class="markdownIt-Anchor" href="#인터페이스설계확인"></a> 인터페이스설계확인</h2><ul><li><u>인터페이스 설계서를 기반으로 외부 및 내부 모듈 간 공통적</u>으로 제공되는 기능과 각 데이터의 인터페이스를 확인</li><li>개발하고자 하는 응용소프트웨어와 관련된 <u>외부 및 내부 모듈 간의 연계가 필요한 인터페이스 기능을 식별</u></li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ol><li>EAI; Enterprise Application Integrtion</li></ol><ul><li>기업에서 운영된느 서로 다른 플랫폼 및 애플리케이션들 간의 정보 전달, 연계, 통합을 가능하게 해주는 솔루션</li></ul><ol start="2"><li>ESB; Enterprise Service Bus</li></ol><ul><li>애플리케이션보다는 서비스 중심으로 통합을 지향하는 아키텍처</li></ul><h3 id="인터페이스-기능-개념"><a class="markdownIt-Anchor" href="#인터페이스-기능-개념"></a> 인터페이스 기능 개념</h3><ul><li>내부와 외부 모듈 간 연계 기능</li></ul><h3 id="인터페이스-기능-확인-방법"><a class="markdownIt-Anchor" href="#인터페이스-기능-확인-방법"></a> 인터페이스 기능 확인 방법</h3><ol><li>인터페이스 목록과 인터페이스 명세서를 포함한 <u>인터페이스 설계서</u>를 통한 인터페이스 기능 확인</li><li>시스템의 <u>정적/동적 모형</u>을 통한 인터페이스 기능 확인</li><li>인터페이스 되는 <u>데이터명세 정의</u>를 통한 인터페이스 기능 확인</li></ol><h3 id="인터페이스-설계서-개념"><a class="markdownIt-Anchor" href="#인터페이스-설계서-개념"></a> 인터페이스 설계서 개념</h3><ul><li>이기종 시스템 또는 컴포넌트 간 데이터 교환 및 처리를 위한 목적으로 인터페이스 현황을 한눈에 확인하기 위하여 시스템이 갖는 <u>인터페이스 목록과 각 인터페이스의 상세 데이터 명세와 각 기능의 세부 정보를 정의한 인터페이스 정의서로 구성</u></li></ul><h3 id="시스템-인터페이스-목록-개념"><a class="markdownIt-Anchor" href="#시스템-인터페이스-목록-개념"></a> 시스템 인터페이스 목록 개념</h3><ul><li>연계 업무와 연계에 참여하는 송수신 시스템의 정보, 연계방식과 통신 유형 등에 대한 정보를 포함</li></ul><h3 id="시스템-인터페이스-명세서-개념"><a class="markdownIt-Anchor" href="#시스템-인터페이스-명세서-개념"></a> 시스템 인터페이스 명세서 개념</h3><ul><li>데이터 송신 시스템과 수신 시스템 간의 데이터 저장소와 속성 등의 상세 내역을 포함</li></ul><h3 id="상세-기능별-인터페이스-정의서-개념"><a class="markdownIt-Anchor" href="#상세-기능별-인터페이스-정의서-개념"></a> 상세 기능별 인터페이스 정의서 개념</h3><ul><li>인터페이스를 각 세부 기능의 개요, 세부 기능이 동작하기 전에 필요한 <u>사전 조건, 사후 조건 및 인터페이스 파라미터, 호출 이후 결과를 확인하기 위한 반환 값</u>등을 정의한 문서</li></ul><h3 id="정적동적-모형을-통한-인터페이스-기능-확인"><a class="markdownIt-Anchor" href="#정적동적-모형을-통한-인터페이스-기능-확인"></a> 정적/동적 모형을 통한 인터페이스 기능 확인</h3><ul><li>시스템을 구성하는 <u>주요 구성 요소 간 트랜잭션</u>을 보여 주고, 이를 통해 시스템에서 인터페이스는 어디에 속하고 어떤 트랜잭션이 인터페이스를 통해 상호 교환되는지 확인</li></ul><h3 id="데이터-명세-정의를-통한-인터페이스-기능-확인"><a class="markdownIt-Anchor" href="#데이터-명세-정의를-통한-인터페이스-기능-확인"></a> 데이터 명세 정의를 통한 인터페이스 기능 확인</h3><ul><li>제공 시비스 목록과 이에 대한 인터페이스 방식 및 명세, 리턴 형태까지 정의를 상세화하여 <u>개발 수준에서 인터페이스 기능 확인</u></li></ul><h3 id="내부-외부-모듈-연계-방법"><a class="markdownIt-Anchor" href="#내부-외부-모듈-연계-방법"></a> 내부, 외부 모듈 연계 방법</h3><h4 id="1-eai의-개념"><a class="markdownIt-Anchor" href="#1-eai의-개념"></a> 1. EAI의 개념</h4><ul><li>기업에서 운영된느 서로 다른 플랫폼 및 애플리케이션들 간의 정보 전달, 연계, 통합을 가능하게 해주는 솔루션</li><li>EAI를 사용함으로써 각 비즈니스 간 통합 및 연계성을 증대 시켜 효율성을 높여 줄 수 있으며 각 시스템 간의 확정성을 높여줌</li></ul><h4 id="2-eai의-구축-유형"><a class="markdownIt-Anchor" href="#2-eai의-구축-유형"></a> 2. EAI의 구축 유형</h4><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_01.png" alt="EAI 구축 유형" /></p><h4 id="3-esb의-개념"><a class="markdownIt-Anchor" href="#3-esb의-개념"></a> 3. ESB의 개념</h4><ul><li>애플리케이션보다는 서비스 중심으로 통합을 지향하는 아키텍처</li><li>웹 서비스 중심으로 표준화된 데이터, 버스를 통해 이기종 애플리케이션을 유연하게 통합하는 핵심 플랫폼<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0520_02.png" alt="ESB 구성" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;인터페이스설계확인&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#인터페이스설계확인&quot;&gt;&lt;/a&gt; 인터페이스설계확인&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;인터페이스 설계서를 기반으로 외부 및 내부 모듈 간 공통적&lt;/u&gt;으로 제공되
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스설계확인" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84%ED%99%95%EC%9D%B8/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="인터페이스기능확인" scheme="https://hyeonukdev.github.io/tags/%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EA%B8%B0%EB%8A%A5%ED%99%95%EC%9D%B8/"/>
    
  </entry>
  
  <entry>
    <title>절차형SQL - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-18T14:59:39.000Z</published>
    <updated>2020-05-18T14:59:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="절차형sql"><a class="markdownIt-Anchor" href="#절차형sql"></a> 절차형SQL</h2><h3 id="1-dml"><a class="markdownIt-Anchor" href="#1-dml"></a> 1. DML</h3><ul><li>데이터를 조작하는 명령어이며, 여기서 조작은 데이터 관점에서 생명 주기를 제어하는 것을 의미</li><li>종류<ul><li>INSERT</li><li>UPDATE</li><li>DELETE</li><li>SELECT</li></ul></li></ul><h3 id="2-dcl"><a class="markdownIt-Anchor" href="#2-dcl"></a> 2. DCL</h3><ul><li>무결성, 보안 및 권한 제어, 회복을 위해 데이터베이스에 접근을 제어하는 SQL 명령어</li><li>종류<ul><li>GRANT</li><li>REVOKE</li><li>COMMIT</li><li>ROLLBACK</li></ul></li></ul><h3 id="3-집계썽-sql-작성"><a class="markdownIt-Anchor" href="#3-집계썽-sql-작성"></a> 3. 집계썽 SQL 작성</h3><ul><li>단일행을 기반으로 산출하지 않고 <u>복수 행을 그룹별로 모아 놓고 그룹당 단일 계산 결과를 반환</u></li><li>GROUP BY 구문을 활용하여 복수 행을 그룹핑</li><li>SELECT, HAVING, ORDER BY 등의 구문에 활용</li><li>종류<ul><li>집계함수<ul><li>COUNT</li><li>SUM</li><li>AVG</li><li>MAX</li><li>MIN</li></ul></li><li>그룹함수<ul><li>ROLLUP</li><li>CUBE</li><li>GROUPING SETS</li></ul></li><li>윈도우 함수<ul><li>순위 함수</li><li>그룹 내 비율 함수</li><li>행 순서 함수</li></ul></li></ul></li></ul><h3 id="4-오류-처리"><a class="markdownIt-Anchor" href="#4-오류-처리"></a> 4. 오류 처리</h3><ul><li>프로그램 코드 상의 구문 오류 또는 프로그램 실행시 상황에 따라 발생하는 오류를 처리하는 과정</li><li>방법<ol><li>오류 복구</li><li>오류 회피</li><li>오류 전환</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;절차형sql&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#절차형sql&quot;&gt;&lt;/a&gt; 절차형SQL&lt;/h2&gt;
&lt;h3 id=&quot;1-dml&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-dml&quot;&gt;&lt;/a&gt; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="절차형SQL" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%88%EC%B0%A8%ED%98%95SQL/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>절차형SQL - 오류처리</title>
    <link href="https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/%EC%98%A4%EB%A5%98%EC%B2%98%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/%EC%98%A4%EB%A5%98%EC%B2%98%EB%A6%AC/</id>
    <published>2020-05-18T14:57:35.000Z</published>
    <updated>2020-05-18T14:57:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="절차형sql"><a class="markdownIt-Anchor" href="#절차형sql"></a> 절차형SQL</h2><h3 id="오류처리의-개념"><a class="markdownIt-Anchor" href="#오류처리의-개념"></a> 오류처리의 개념</h3><ul><li>프로그램 코드 상의 구문 오류 또는 프로그램 실행시 상황에 따라 발생하는 오류를 처리하는 과정</li></ul><h3 id="오류-처리-방법"><a class="markdownIt-Anchor" href="#오류-처리-방법"></a> 오류 처리 방법</h3><ol><li>오류 복구<ul><li>예외상황을 파악하고 문제를 해결하여 정상상태로 돌려 놓는것</li></ul></li><li>오류 회피<ul><li>예외 처리를 자신을 호출한 쪽으로 던져 버림</li></ul></li><li>오류 전환<ul><li>예외를 메소드 밖으로 던지지만 예외 회피와 달리 적절한 예외로 전환해서 던짐</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;절차형sql&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#절차형sql&quot;&gt;&lt;/a&gt; 절차형SQL&lt;/h2&gt;
&lt;h3 id=&quot;오류처리의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#오류처리의-개념&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="절차형SQL" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%88%EC%B0%A8%ED%98%95SQL/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="오류처리" scheme="https://hyeonukdev.github.io/tags/%EC%98%A4%EB%A5%98%EC%B2%98%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>절차형SQL - 집계성DCL작성</title>
    <link href="https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/%EC%A7%91%EA%B3%84%EC%84%B1SQL/"/>
    <id>https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/%EC%A7%91%EA%B3%84%EC%84%B1SQL/</id>
    <published>2020-05-18T14:41:34.000Z</published>
    <updated>2020-05-18T14:41:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="절차형sql"><a class="markdownIt-Anchor" href="#절차형sql"></a> 절차형SQL</h2><h3 id="데이터-분석-함수의-정의"><a class="markdownIt-Anchor" href="#데이터-분석-함수의-정의"></a> 데이터 분석 함수의 정의</h3><ul><li>관계형 데이터베이스에서는 단일행 기준의 처리가 주로 이루어지나 <u>총합, 평균 등의 데이터 분석은 복수 행 기준의 데이터를 모아서 처리</u></li><li>다중행 처리를 목적으로 하는 <u>다중 행 함수가 존재</u></li></ul><h3 id="데이터-분석-함수의-특성"><a class="markdownIt-Anchor" href="#데이터-분석-함수의-특성"></a> 데이터 분석 함수의 특성</h3><ul><li>단일행을 기반으로 산출하지 않고 <u>복수 행을 그룹별로 모아 놓고 그룹당 단일 계산 결과를 반환</u></li><li><u>GROUP BY 구문을 활용하여 복수행을 그룹핑</u></li></ul><h3 id="데이터-분석-함수의-유형"><a class="markdownIt-Anchor" href="#데이터-분석-함수의-유형"></a> 데이터 분석 함수의 유형</h3><ul><li>데이터 튜플 간의 상호 연관 및 계산 분석을 위한 세 가지<ol><li>집계 함수</li><li>그룹 함수</li><li>윈도우 함수</li></ol></li><li>집계 함수는 명령어도 상대적으로 단순하며 이를 기본으로 하여 그룹 함수나 윈도우 함수에도 적용</li><li><u>집계 함수는 그룹 함수의 한 부분</u></li></ul><h3 id="집계-함수의-구문"><a class="markdownIt-Anchor" href="#집계-함수의-구문"></a> 집계 함수의 구문</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0518_09.png" alt="집계함수의 구문" /></p><ul><li>GROUP BY 구문 뒤에 <u>테이블을 구분하는 컬럼을 기재하여 그룹화</u></li><li>HAVING 구문은 WHERE 조건으로 지정된 데이터 집합으로 부터 <u>그룹화 된 집합에 대한 조건 선택 시에 사용</u></li></ul><h3 id="집계함수의-분류"><a class="markdownIt-Anchor" href="#집계함수의-분류"></a> 집계함수의 분류</h3><ul><li>COUNT(입력값)<ul><li>복수 행의 줄 수</li></ul></li><li>SUM(입력값)<ul><li>복수 행의 해당 컬럼 간의 합계</li></ul></li><li>AVG(입력값)<ul><li>복수 행의 해당 컬럼 간의 평균</li></ul></li><li>MAX(입력값)<ul><li>복수 행의 해당 컬럼 간의 최댓값</li></ul></li><li>MIN(입력값)<ul><li>복수 행의 해당 컬럼 간의 최솟값</li></ul></li><li>STDDEV(입력값)<ul><li>복수 행의 해당 컬럼 간의 표준편차</li></ul></li><li>VARIAN(입력값)<ul><li>복수 행의 해당 컬럼 간의 분산</li></ul></li></ul><h3 id="그룹-함수의-개념"><a class="markdownIt-Anchor" href="#그룹-함수의-개념"></a> 그룹 함수의 개념</h3><ul><li><u>소계 및 총계</u>등을 구하기 위해서 집계 함수만 사용한다면 레벨별 집계를 위한 각 단계별 데이터 질의어를 UNION ALL 등으로 결합하고 표시하는 단계 필요</li><li><u>단일 DQL만으로도 원하는 작업 가능</u></li><li>정렬이 필요한 경우 <u>ORDER BY</u>절에 정렬 컬럼 명시</li></ul><h3 id="그룹-함수의-종류"><a class="markdownIt-Anchor" href="#그룹-함수의-종류"></a> 그룹 함수의 종류</h3><ol><li>ROLLUP<ul><li><u>소계 등 중간 집계 값을 산출 위한 칼럼을 ROLLUP 뒤 기재</u></li><li>지정 칼럼의 수 보다 하나 더 큰 레벨의 중간 집계 값이 생성</li><li>SELECT 뒤에 포함되는 칼럼이 GROUP BY 또는 ROLLUP 뒤에 기재되어야 한다는 점 숙지<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0518_10.png" alt="ROLLUP" /></li></ul></li><li>CUBE<ul><li><u>결합 가능한 모든 값에 대해 다차원 집계를 생성</u>하며, 가능한 한 소집계만을 생성하는 ROLLUP과 구별</li><li>내부적으로 대상 컬럼의 순서를 변경하여 또 한 번의 쿼리를 수행</li><li><u>지정 컬럼의 순서가 바뀌어도 결과는 같음</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0518_11.png" alt="CUBE" /></li></ul></li><li>GROUPING SETS<ul><li>원하는 <u>특정 항목에 대한 다양한 소계 집합 계산</u> 가능</li><li>집계 대상 칼럼 들에 대한 개별 집계를 구할 수 있고 칼럼 간 순서가 바뀌어도 정렬 순서는 바뀔 수 있으나 결과는 같음<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0518_12.png" alt="GROUPING SETS" /></li></ul></li></ol><h3 id="윈도우-함수의-개념"><a class="markdownIt-Anchor" href="#윈도우-함수의-개념"></a> 윈도우 함수의 개념</h3><ul><li>데이터베이스를 사용한 온라인 분석 처리 용도로 사용하기 위해서 표준 SQL에 추가된 기능</li><li>온라인 분석 처리는 시장 분석, 통계 작성, 경영 계획 분석 및 수립 등 비즈니스 현장에서 자주 사용되는 분석이 포함</li><li>데이터 기반 의사 결정의 증가에 따라 그 중요성이 더욱 증가하는 실정</li></ul><h3 id="윈도우-함수의-구분"><a class="markdownIt-Anchor" href="#윈도우-함수의-구분"></a> 윈도우 함수의 구분</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0518_13.png" alt="윈도우 함수의 구분" /></p><ul><li>PARTITION BY는 선택 항목이며 <u>순위를 정할 대상 범위의 컬럼을 설정</u></li><li>OVER문구가 필수적으로 포함되며, ORDER BY 뒤에는 SORT컬럼을 입력</li></ul><h3 id="윈도우-함수의-종류"><a class="markdownIt-Anchor" href="#윈도우-함수의-종류"></a> 윈도우 함수의 종류</h3><ol><li>집계함수<ul><li>SUM</li><li>MAX</li><li>MIN</li><li>AVG</li><li>COUNT</li></ul></li><li>순위함수<ul><li>RANK : 레코드의 순위를 계산하며, 동일 순위 레코드 존재 시 후 순위는 넘어감</li><li>DENSE_RANK : “”, 동일 순위의 레코드 존재 시에도 후순위를 넘어가지 않음</li><li>ROW_NUMBER : “”, 동일 순위의 값이 존재해도 이와 무관하게 연속 번호 부여</li></ul></li><li>그룹 내 비율 함수<ul><li>RATIO_TO_REPORT</li><li>PERCENT_RANK</li><li>CUME_DIST</li><li>NTILE</li></ul></li><li>행 순서 함수<ul><li>FIRST_VALUE</li><li>LAST_VALUE</li><li>LAG</li><li>LEAD</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;절차형sql&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#절차형sql&quot;&gt;&lt;/a&gt; 절차형SQL&lt;/h2&gt;
&lt;h3 id=&quot;데이터-분석-함수의-정의&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="절차형SQL" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%88%EC%B0%A8%ED%98%95SQL/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="집계성DCL작성" scheme="https://hyeonukdev.github.io/tags/%EC%A7%91%EA%B3%84%EC%84%B1DCL%EC%9E%91%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>절차형SQL - DCL</title>
    <link href="https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/DCL/"/>
    <id>https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/DCL/</id>
    <published>2020-05-18T14:25:21.000Z</published>
    <updated>2020-05-18T14:25:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="절차형sql"><a class="markdownIt-Anchor" href="#절차형sql"></a> 절차형SQL</h2><h3 id="dcl-data-control-language-정의"><a class="markdownIt-Anchor" href="#dcl-data-control-language-정의"></a> DCL; Data Control Language 정의</h3><ul><li>무결성, 보안 및 권한 제어, 회복을 위해 데이터베이스에 접근을 제어하는 SQL 명령어</li></ul><h3 id="dcl-조작-대상"><a class="markdownIt-Anchor" href="#dcl-조작-대상"></a> DCL 조작 대상</h3><table><thead><tr><th>오브젝트</th><th>목적</th><th>내용</th></tr></thead><tbody><tr><td>사용자 권한</td><td>접근 통제</td><td>사용자를 등록하고, 사용자에게 특정 데이터베이스를 사용할 수 있는 권리를 부여하는 작업</td></tr><tr><td>트랜잭션</td><td>안전한 거래보장</td><td>동시에 다수의 작업을 독립적으로 안전하게 처리하기 위한 상호 작용 단위</td></tr></tbody></table><h3 id="dcl-유형과-명령어"><a class="markdownIt-Anchor" href="#dcl-유형과-명령어"></a> DCL 유형과 명령어</h3><ul><li>트랜잭션 제어를 위한 명령어 TCL<ul><li>TCL; Transaction Control Language</li><li>TCL과 DCL은 대상이 달라 서로 별개의 개념으로 분류할 수 있으나, 제어 기능의 공통점으로 DCL의 일부료 분류함</li></ul></li><li>명령어<ul><li>DCL<ul><li>GRANT : 사용자 권한 부여</li><li>REVOKE : 사용자 권한 회수</li></ul></li><li>TCL<ul><li>COMMIT : 트랜잭션 확정</li><li>ROLLBACK : 트랜잭션 취소</li><li>SAVEPOTINT : 복귀지점 설정</li></ul></li></ul></li></ul><h3 id="사용자-권한-부여"><a class="markdownIt-Anchor" href="#사용자-권한-부여"></a> 사용자 권한 부여</h3><ul><li>권한은 시스템 권한과 객체 권한으로 분류</li><li>시스템 권한</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRNAT 권한1, 권한2 TO 사용자 계정</span><br></pre></td></tr></table></figure><ul><li>객체 권한</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRNAT 권한1, 권한2 ON 객체명 TO 사용자 계정</span><br></pre></td></tr></table></figure><h3 id="시스템-권한과-객체-권한의-종류"><a class="markdownIt-Anchor" href="#시스템-권한과-객체-권한의-종류"></a> 시스템 권한과 객체 권한의 종류</h3><ul><li>시스템 권한<ul><li>CREATE USER : 계정 생성 권한</li><li>DROP USER : 계정 삭제 권한</li><li>DROP ANY TABLE : 테이블 삭제 권한</li><li>CREATE SESSION : 데이터베이스 접속 권한</li><li>CREATE TABLE : 테이블 생성 권한</li><li>CREATE VIEW : 뷰 생성 권한</li><li>CREATE SEQUENCE : 시퀀스 생성 권한</li><li>CREATE PROCEDURE : 프로시저 생성 권한</li></ul></li><li>객체 권한<ul><li>ALTER : 테이블 변경 권한</li><li>INSERT : 데이터 조작 권한</li><li>DELETE : 데이터 조작 권한</li><li>SELECT : 데이터 조작 권한</li><li>UPDATE : 데이터 조작 권한</li><li>EXECUTE : PROCEDURE 실행 권한</li></ul></li></ul><h3 id="사용자-권한-회수"><a class="markdownIt-Anchor" href="#사용자-권한-회수"></a> 사용자 권한 회수</h3><ul><li>GRANT에 대응하는 권한 회수 명령은 REVOKE</li><li>시스템 권한</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> 권한<span class="number">1</span>, 권한<span class="number">2</span> <span class="keyword">FROM</span> 사용자계정</span><br></pre></td></tr></table></figure><ul><li>객체 권한</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> 권한<span class="number">1</span>, 권한<span class="number">2</span> <span class="keyword">ON</span> 객체명 <span class="keyword">FROM</span> 사용자계정</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;절차형sql&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#절차형sql&quot;&gt;&lt;/a&gt; 절차형SQL&lt;/h2&gt;
&lt;h3 id=&quot;dcl-data-control-language-정의&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="절차형SQL" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%88%EC%B0%A8%ED%98%95SQL/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="사용자정의함수" scheme="https://hyeonukdev.github.io/tags/%EC%82%AC%EC%9A%A9%EC%9E%90%EC%A0%95%EC%9D%98%ED%95%A8%EC%88%98/"/>
    
  </entry>
  
  <entry>
    <title>절차형SQL - DML</title>
    <link href="https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/DML/"/>
    <id>https://hyeonukdev.github.io/2020/05/18/Engineer_Information_Processing/ch10_SQL%EC%9D%91%EC%9A%A9/%EC%9D%91%EC%9A%A9SQL/DML/</id>
    <published>2020-05-18T14:06:35.000Z</published>
    <updated>2020-05-18T14:06:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="절차형sql"><a class="markdownIt-Anchor" href="#절차형sql"></a> 절차형SQL</h2><ul><li>한 개의 테이블에 대해 <u>데이터를 삽입, 수정, 삭제하고 행을 조회하는 DML 명령문을 작성</u></li><li><u>윈도우 함수와 그룹 함수를 사용하여 순위와 소계, 중계, 총합계를 산출하는 DML 명령문을 작성</u></li><li>사용자의 그룹을 정의하여 사용자를 생성 또는 변경할 수 있고 <u>사용자의 권한 부여와 회수를 위한 DCL 명령문을 작성</u></li></ul><h3 id="dml-data-manipulation-language-정의"><a class="markdownIt-Anchor" href="#dml-data-manipulation-language-정의"></a> DML; Data Manipulation Language 정의</h3><ul><li>데이터를 조작하는 명령어이며, 여기서 조작은 데이터 관점에서 생명 주기를 제어하는 것을 의미</li></ul><h3 id="dml-유형"><a class="markdownIt-Anchor" href="#dml-유형"></a> DML 유형</h3><table><thead><tr><th>구분</th><th>명령어</th><th>내용</th></tr></thead><tbody><tr><td>데이터 생성</td><td>INSERT</td><td>삽입 형태로 신규 데이터를 테이블에 저장</td></tr><tr><td>데이터 조회</td><td>SELECT</td><td>테이블의 내용을 레코드 단위로 조회</td></tr><tr><td>데이터 변경</td><td>UPDATE</td><td>테이블의 내용을 레코드 단위로 변경</td></tr><tr><td>데이터 삭제</td><td>DELETE</td><td>테이블의 내용을 레코드 단위로 삭제</td></tr></tbody></table><h3 id="데이터-삽입-insert"><a class="markdownIt-Anchor" href="#데이터-삽입-insert"></a> 데이터 삽입 INSERT</h3><ul><li>데이터를 삽입하기 위한 명령어로 다음과 같이 두 가지 형태의 명령문 형식 제공</li><li>데이터 삽입 결과로 하나의 레코드가 추가되므로 삽입에 사용되는 정보는 하나의 레코드를 충분히 묘사해야 함</li><li>기본형식</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name <span class="keyword">VALUES</span>(value1, value2,...);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name(column1, column2, ...) <span class="keyword">VALUES</span>(value1, value2, ...);</span><br></pre></td></tr></table></figure><h3 id="데이터-조회-select"><a class="markdownIt-Anchor" href="#데이터-조회-select"></a> 데이터 조회 SELECT</h3><ul><li>레코드 단위로 데이터의 내용을 조회할 때 사용하는 명령어</li><li>가장 많이 사용되는 SQL명령어로서, 다른 DML 명령어와 같이 사용되어 SQL 활용을 풍부하게 함</li><li>기본 형식</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">OPTION</span>] <span class="keyword">columns</span> <span class="keyword">FROM</span> <span class="keyword">table</span> [<span class="keyword">WHERE</span> 절];</span><br></pre></td></tr></table></figure><pre><code>- OPTION    - ALL    - DISTINCT- columns    - 칼럼명 목록    - 와일드 카드</code></pre><h3 id="데이터-수정-update"><a class="markdownIt-Anchor" href="#데이터-수정-update"></a> 데이터 수정 UPDATE</h3><ul><li>레코드 단위로 데이터의 내용을 수정할 때 사용하는 명령어</li><li>WHERE 절을 통해 어떤 조건이 만족할 경우에만 특정 칼럼의 값을 수정하는 용도로 많이 사용</li><li>기본 형식</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> tabel <span class="keyword">SET</span> column1=value1, column2=value2 ... [<span class="keyword">WHERE</span>절];</span><br></pre></td></tr></table></figure><h3 id="데이터-삭제-delete"><a class="markdownIt-Anchor" href="#데이터-삭제-delete"></a> 데이터 삭제 DELETE</h3><ul><li>레코드 단위로 데이터틔 내용을 삭제할 때 사용하는 명령어</li><li>WHERE 절을 통해 어떤 조건이 만족하는 레코드만 삭제 가능</li><li>조건절 없이 DELETE하는 경우 테이블 전체가 한 번에 삭제</li><li>기본 형식</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">table</span>[<span class="keyword">WHERE</span> 절];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;절차형sql&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#절차형sql&quot;&gt;&lt;/a&gt; 절차형SQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;한 개의 테이블에 대해 &lt;u&gt;데이터를 삽입, 수정, 삭제하고 행을 조회하는 DML 명령문을 작성&lt;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="절차형SQL" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%A0%88%EC%B0%A8%ED%98%95SQL/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="사용자정의함수" scheme="https://hyeonukdev.github.io/tags/%EC%82%AC%EC%9A%A9%EC%9E%90%EC%A0%95%EC%9D%98%ED%95%A8%EC%88%98/"/>
    
  </entry>
  
</feed>
