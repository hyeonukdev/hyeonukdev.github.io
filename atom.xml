<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-13T12:58:24.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>논리데이터베이스 - 데이터모델개념</title>
    <link href="https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EB%A7%81%EB%B0%8F%EC%84%A4%EA%B3%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EB%85%90/"/>
    <id>https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EB%A7%81%EB%B0%8F%EC%84%A4%EA%B3%84/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EB%85%90/</id>
    <published>2020-05-13T12:58:24.000Z</published>
    <updated>2020-05-13T12:58:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="논리데이터베이스"><a class="markdownIt-Anchor" href="#논리데이터베이스"></a> 논리데이터베이스</h2><ul><li><u>E-R 표기법</u>에 따라 주제 영역별로 <u>개체와 식별자를 포함한 속성</u>을 <u>도식화 및 개체 간 관계</u>의 기수성, 선택성, 식별/비식별 관계를 도식화</li><li>개체 내 속성 원자성과 함수 종속성을 분석하여 <u>데이터베이스 정규화 대상 개체를 도출하고 데이터베이스 정규화</u>를 수행</li><li><u>논리 데이터 모델에 대하여 <b>정확성, 완전성, 준거성, 최신성, 일관성, 활용성의 품질기준을 적용</b></u>하고 개체, 속성, 관계에 대하여 체크리스트를 작성한 후 검증 결과에 따라 <u>논리 데이터 모델 품질 검증 결과서</u>를 작성</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>데이터 모델<ul><li>현실 세계의 정보들을 컴퓨터에 표현하기 위해 단순화, 추상화하여 체계적으로 표현한 개념적 모형</li></ul></li><li>이상 현상<ul><li>불필요한 데이터 중복으로 인해 릴레이션에 대한 데이터 삽입/수정/삭제 연산을 수행할 때 발생할 수 있는 부작용</li></ul></li></ul><h3 id="데이터베이스-개발절차"><a class="markdownIt-Anchor" href="#데이터베이스-개발절차"></a> 데이터베이스 개발절차</h3><ul><li>요구분석<ul><li>비지니스 요구사항</li></ul></li><li>전략수립<ul><li>개념적데이터 모델링</li></ul></li><li>분석<ul><li>논리적데이터 모델링</li></ul></li><li>설계<ul><li>물리적데이터 모델링</li></ul></li><li>개발<ul><li>데이터베이스 구축</li></ul></li></ul><blockquote><p>운영시스템 안에 데이터베이스 존재</p></blockquote><h3 id="데이터-모델의-정의"><a class="markdownIt-Anchor" href="#데이터-모델의-정의"></a> 데이터 모델의 정의</h3><ul><li><u>현실 세계의 정보들을 컴퓨터에 표현</u>하기 위해서 <b>단순화, 추상화</b>하여 체계적으로 표현한 개념적 모형</li><li>종류<ul><li>개념적 데이터 모델</li><li>논리적 데이터 모델</li><li>물리적 데이터 모델</li></ul></li><li>구성 요소<ul><li>개체</li><li>속성</li><li>관계</li></ul></li><li>표시 요소<ul><li>구조</li><li>연산</li><li>제약 조건</li></ul></li></ul><h3 id="데이터-모델링-절차"><a class="markdownIt-Anchor" href="#데이터-모델링-절차"></a> 데이터 모델링 절차</h3><ol><li>개념적 데이터 모델링</li></ol><ul><li>중요 개념을 구분</li><li>핵심 개체 도출</li><li>ERD 작성</li></ul><ol start="2"><li>논리적 데이터 모델링</li></ol><ul><li>각 개념을 구체화</li><li>ERD-RDB 모델 사상</li><li>상세 속성 정의</li><li>정규화</li></ul><ol start="3"><li>물리적 데이터 모델링</li></ol><ul><li>개체, 인덱스 등 생성</li><li>DB 개체 정의</li><li>테이블 및 인덱스 등 설계</li></ul><h3 id="데이터-모델의-종류"><a class="markdownIt-Anchor" href="#데이터-모델의-종류"></a> 데이터 모델의 종류</h3><h4 id="1-개념적-데이터-모델"><a class="markdownIt-Anchor" href="#1-개념적-데이터-모델"></a> 1. 개념적 데이터 모델</h4><ul><li>현실 세계에 대한 인식을 <u>추상적 개념으로 표현하는 과정</u></li><li><u>속성들로 기술된 개체 타입과 이 개체 타입들 간의 관계를 이용하여 현실 세계를 표현</u></li><li>현실 세계에 존재하는 개체를 인간이 이해할 수 있는 <u>정보 구조</u>로 표현하기 때문에 <u>정보 모델</u>이라고 함</li><li>대표적인 개념적 데이터 모델에는 E-R 모델이 있음<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_09.png" alt="E-R모델" /></li></ul><h4 id="2-논리적-데이터-모델"><a class="markdownIt-Anchor" href="#2-논리적-데이터-모델"></a> 2. 논리적 데이터 모델</h4><ul><li>개념적 모델링 과정에서 얻은 개념적 구조를 <u>컴퓨터가 이해하고 처리할 수 있는</u> 컴퓨터 세계의 환경에 맞도록 <u>변환</u>하는 과정</li><li><u>필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계</u>를 이용한 현실 세계를 표현</li><li><u>단순히 데이터 모델이라고 하면 논리적 데이터 모델을 의미</u></li><li>특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용</li><li>데이터 간의 관계를 어떻게 표현하느냐에 따라 <u>관계 모델, 계층 모델, 네트워크 모델로 구분</u></li></ul><h4 id="3-물리적-데이터-모델"><a class="markdownIt-Anchor" href="#3-물리적-데이터-모델"></a> 3. 물리적 데이터 모델</h4><ul><li>논리적 데이터 모델에서 레코드의 상세 스펙 등을 기술한 모델로 <u>실제 컴퓨터에 데이터가 저장되는 방법</u>을 정의</li><li>DB 개체 정의</li><li>테이블 및 인덱스 등 설계</li></ul><h3 id="데이터-모델의-구성-요소"><a class="markdownIt-Anchor" href="#데이터-모델의-구성-요소"></a> 데이터 모델의 구성 요소</h3><h4 id="1-entity-개체"><a class="markdownIt-Anchor" href="#1-entity-개체"></a> 1. Entity 개체</h4><ul><li><u>데이터베이스에 표현하려는 것</u>으로 사람이 생각하는 <u>개념이나 정보 단위 같은 현실 세계의 대상체</u></li><li>실세계에 독립적으로 존재하는 유형, 무형의 정보로서 <u>서로 연관된 몇 개의 속성으로 구성</u></li><li><u>파일 시스템의 레코드에 대응</u> 하는 것으로 어떤 정보를 제공하는 역할을 수행</li><li>독립적으로 존재하거나 그 자체로서도 구별 가능</li><li>유일한 <u>식별자</u>에 의해 식별되고 다른 개체와 하나 이상의 <u>관계가 있음</u></li></ul><h4 id="2-attribute-속성"><a class="markdownIt-Anchor" href="#2-attribute-속성"></a> 2. Attribute 속성</h4><ul><li><u>데이터베이스를 구성하는 가장 작은 논리적 단위</u></li><li><u>파일 구조상</u>의 데이터 항목 또는 데이터 <u>필드</u>에 해당</li><li>속성은 개체를 구성하는 항목</li><li>속성의 수는 Degree<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_10.png" alt="체계 예시" /></li></ul><h4 id="3-relationship-관계"><a class="markdownIt-Anchor" href="#3-relationship-관계"></a> 3. Relationship 관계</h4><ul><li>개체와 개체 사이의 논리적 연결을 의미</li><li>개체 간의 관계와 속성 간의 관계가 있음</li><li>형태<ul><li>일대일(1:1)</li><li>일대다(1:N)</li><li>다대다(N:M)</li></ul></li><li><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_11.png" alt="개체간 관계" /></li></ul><h3 id="데이터-모델에-표시할-요소"><a class="markdownIt-Anchor" href="#데이터-모델에-표시할-요소"></a> 데이터 모델에 표시할 요소</h3><ul><li>Structure 구조<ul><li>논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질을 표현</li></ul></li><li>Operation 연산<ul><li>데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본도구</li></ul></li><li>Constraint 제약조건<ul><li>데이터베이스에 저장될 수 있는 실제 데이터베이스의 논리적인 제약 조건</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;논리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#논리데이터베이스&quot;&gt;&lt;/a&gt; 논리데이터베이스&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;E-R 표기법&lt;/u&gt;에 따라 주제 영역별로 &lt;u&gt;개체와 식별자를 포함한 속성&lt;/u
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터모델개념" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8%EA%B0%9C%EB%85%90/"/>
    
  </entry>
  
  <entry>
    <title>논리데이터베이스 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-12T17:26:34.000Z</published>
    <updated>2020-05-12T17:26:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="논리데이터베이스"><a class="markdownIt-Anchor" href="#논리데이터베이스"></a> 논리데이터베이스</h2><h3 id="1-관계-데이터-모델"><a class="markdownIt-Anchor" href="#1-관계-데이터-모델"></a> 1. 관계 데이터 모델</h3><ul><li>실 세계 데이터를 행과 열과 구성된 표 형태로 저장하고 한 테이블의 필드 값을 이용하여 다른 테이블에 관련된 데이터를 찾는 식으로 검색하는 데이터 모델</li><li>용어<ul><li>릴레이션</li><li>속성</li><li>튜플</li><li>도메인</li><li>차수</li><li>카디널리티</li></ul></li><li>릴레이션 특성과 무결성 제약조건</li></ul><h3 id="2-관계-데이터언어"><a class="markdownIt-Anchor" href="#2-관계-데이터언어"></a> 2. 관계 데이터언어</h3><ul><li>관계 데이터 모델의 연산</li><li>원하는 데이터를 얻기 위해 릴레이션에 필요한 처리 요구를 수행하는 것</li><li>종류<ul><li>일반 집합 연산자</li><li>순수 관계 연산자</li></ul></li><li>관계해석의 개념</li></ul><h3 id="3-시스템-카탈로그와-뷰"><a class="markdownIt-Anchor" href="#3-시스템-카탈로그와-뷰"></a> 3. 시스템 카탈로그와 뷰</h3><ul><li>데이터베이스의 객체(사용자, 릴레이션 뷰, 인덱스, 권한)와 구조들에 관한 모든 데이터를 포함하는 <u>시스템 데이터베이스</u></li><li>뷰는 <u>가상 테이블을</u> 구성하는 데이터베이스 오브젝트로 <u>별도의 저장 공간은 없지만</u> 뷰를 통해 SELECT, DELETE, UPDATE를 할 수 있음</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;논리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#논리데이터베이스&quot;&gt;&lt;/a&gt; 논리데이터베이스&lt;/h2&gt;
&lt;h3 id=&quot;1-관계-데이터-모델&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>논리데이터베이스 - 시스템 카탈로그와 뷰</title>
    <link href="https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8%EC%99%80%EB%B7%B0/"/>
    <id>https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8%EC%99%80%EB%B7%B0/</id>
    <published>2020-05-12T16:36:56.000Z</published>
    <updated>2020-05-12T16:36:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="논리데이터베이스"><a class="markdownIt-Anchor" href="#논리데이터베이스"></a> 논리데이터베이스</h2><h3 id="시스템-카탈로그-개념"><a class="markdownIt-Anchor" href="#시스템-카탈로그-개념"></a> 시스템 카탈로그 개념</h3><ul><li>데이터베이스의 객체(사용자, 릴레이션 뷰, 인덱스, 권한)와 구조들에 관한 모든 데이터를 포함하는 <u>시스템 데이터베이스</u></li><li>카탈로그에 저장된 정보를 <u>메타데이터</u>라고 함</li><li>시스템 카탈로그는 사용자 및 질의 최적호 모듈 등 DBMS 자신의 구성요소에 의해서 사용</li><li>시스템 카탈로그는 관계DBMS마다 표준화되어 있지 않아서 관계 DBMS마다 서로 다른 형태로 시스템 카탈로그 기능을 제공</li><li>데이터 사전 또는 시스템 테이블이라고 함</li></ul><h3 id="시스템-카탈로그-특징"><a class="markdownIt-Anchor" href="#시스템-카탈로그-특징"></a> 시스템 카탈로그 특징</h3><ul><li>사용자가 SQL 문으로 내용 검색이 가능</li><li>데이터베이스 관리시스템에 의해 생성 및 유지</li><li>기본 테이블, 뷰, 인덱스 등이 변경되면 자동으로 시스템 카탈로그는 갱신</li><li><u>사용자가 SQL문으로 갱신은 불가능</u></li><li>위치 투명성 및 중복 투명성을 제공하기 위해 필요한 모든 제어 정보를 포함</li></ul><h3 id="시스템-카탈로그-내용"><a class="markdownIt-Anchor" href="#시스템-카탈로그-내용"></a> 시스템 카탈로그 내용</h3><ul><li>릴레이션의 정보<ul><li>릴레이션 이름</li><li>저장된 파일 이름과 파일 구조</li><li>속성들에 대한 속성 이름과 타입</li><li>정의된 각 인덱스의 이름</li><li>정의된 무결성 제약 조건</li></ul></li><li>인덱스 관련 정보<ul><li>인덱스 이름</li><li>인덱스의 구조</li><li>인덱스의 키에 대한 정보</li></ul></li><li>뷰 관련 정보<ul><li>뷰의 이름</li><li>뷰의 정의</li><li>뷰의 소유자</li></ul></li><li>사용자 관련 정보<ul><li>사용자 계정 정보</li><li>사용자 권한 정보</li></ul></li><li>통계 관련 정보<ul><li>릴레이션 카디널리티</li><li>인덱스 카디널리티</li><li>인덱스의 높이</li><li>인덱스의 범위</li></ul></li></ul><h3 id="view-뷰-개념"><a class="markdownIt-Anchor" href="#view-뷰-개념"></a> View 뷰 개념</h3><ul><li><u>가상 테이블을</u> 구성하는 데이터베이스 오브젝트로 <u>별도의 저장 공간은 없지만</u> 뷰를 통해 SELECT, DELETE, UPDATE를 할 수 있음</li></ul><h3 id="뷰의-장점과-단점"><a class="markdownIt-Anchor" href="#뷰의-장점과-단점"></a> 뷰의 장점과 단점</h3><ul><li>장점<ul><li>논리적 독립성 제공</li><li>사용자 데이터 관리 용이</li><li>데이터 보안 용이</li></ul></li><li>단점<ul><li>뷰 자체 인덱스 불가</li><li>뷰 정의 변경 불가</li><li>데이터 변경 제약 존재</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;논리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#논리데이터베이스&quot;&gt;&lt;/a&gt; 논리데이터베이스&lt;/h2&gt;
&lt;h3 id=&quot;시스템-카탈로그-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="시스템카탈로그와뷰" scheme="https://hyeonukdev.github.io/tags/%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%B9%B4%ED%83%88%EB%A1%9C%EA%B7%B8%EC%99%80%EB%B7%B0/"/>
    
  </entry>
  
  <entry>
    <title>논리데이터베이스 - 관계데이터언어</title>
    <link href="https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%96%B8%EC%96%B4/"/>
    <id>https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%96%B8%EC%96%B4/</id>
    <published>2020-05-12T16:08:48.000Z</published>
    <updated>2020-05-12T16:08:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="논리데이터베이스"><a class="markdownIt-Anchor" href="#논리데이터베이스"></a> 논리데이터베이스</h2><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_01.png" alt="관계데이터개념" /></p><h3 id="relation-data-operaton-관계-데이터-연산"><a class="markdownIt-Anchor" href="#relation-data-operaton-관계-데이터-연산"></a> Relation data operaton 관계 데이터 연산</h3><ul><li>관계 데이터 모델의 연산</li><li>원하는 데이터를 얻기 위해 릴레이션에 필요한 처리 요구를 수행하는 것</li><li><u>관계대수와 관계 해석</u>이 있음<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_02.png" alt="관계데이터연산의 종류" /></li></ul><h3 id="relational-algebra-관계-대수의-개념"><a class="markdownIt-Anchor" href="#relational-algebra-관계-대수의-개념"></a> Relational algebra 관계 대수의 개념</h3><ul><li>원하는 결과를 얻기 위해 릴레이션의 처리 과정을 <u>순서대로 기술하는 언어</u><ul><li>절차 언어</li></ul></li><li>릴레이션을 처리하는 연산자들의 모임<ul><li>대표 연산자 8개</li><li><u>일반 집합 연산자와 순수 관계 연산자로 분류</u></li></ul></li><li>폐쇠 특성이 존재<ul><li>피연산자도 릴레이션이고 연산의 결과도 릴레이션</li></ul></li></ul><h3 id="관계-대수-연산자의-종류"><a class="markdownIt-Anchor" href="#관계-대수-연산자의-종류"></a> 관계 대수 연산자의 종류</h3><ul><li><u>일반 집합 연산자와 순수 관계 연산자</u><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_03.png" alt="관계 대수 연산의 종류" /></li></ul><h3 id="set-operation-일반-집합-연산자"><a class="markdownIt-Anchor" href="#set-operation-일반-집합-연산자"></a> Set operation 일반 집합 연산자</h3><ul><li>릴레이션이 튜플의 집합이라는 개념을 이용하는 연산자<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_04.png" alt="일반집합연산자의 종류" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_05.png" alt="일반집합연산자의 종류와 기능" /></li></ul><h3 id="일반-집합-연산자-특성"><a class="markdownIt-Anchor" href="#일반-집합-연산자-특성"></a> 일반 집합 연산자 특성</h3><ul><li>피연산자가 2개 필요함<ul><li>2개의 릴레이션을 대상으로 연산을 수행</li></ul></li><li>합집합, 교집합, 차집합은 피연산자인 두 릴레이션이 합병 가능해야 함</li><li><b>합병가능 조건</b><ul><li>두 릴레이션의 차수가 같아야 함</li><li>두 릴레이션에서 서로 대응되는 속성의 도메인이 같아야 함</li></ul></li></ul><h3 id="일반-집합-연산자-카티션-프로덕트-cartesian-product"><a class="markdownIt-Anchor" href="#일반-집합-연산자-카티션-프로덕트-cartesian-product"></a> 일반 집합 연산자 - 카티션 프로덕트 cartesian product</h3><ul><li>두 릴레이션 R과 S의 카티션 프로덕트 : R x S<ul><li>릴레이션 R에 속한 각 튜플과 릴레이션 S에 속한 각 튜플을 모두 연결하여 새로운 튜플로 결과 릴레이션을 구성</li></ul></li><li><b>결과 릴레이션의 특성</b><ul><li><u>차수는 릴레이션 R과 S의 차수를 더함</u></li><li><u>카디널리티는 릴레이션 R과 S의 카디널리티를 곱함</u></li></ul></li><li>교환적 특징<ul><li>R x S = S x R</li></ul></li><li>결합적 특징<ul><li>(R x S) x T = R x (S x T)</li></ul></li></ul><h3 id="카디션-프로덕트-연산"><a class="markdownIt-Anchor" href="#카디션-프로덕트-연산"></a> 카디션 프로덕트 연산</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_06.png" alt="카디션 프로덕트 연산" /></p><h3 id="relational-operation-순수-관계-연산자"><a class="markdownIt-Anchor" href="#relational-operation-순수-관계-연산자"></a> Relational operation 순수 관계 연산자</h3><ul><li>릴레이션 구조와 특성을 이용하는 연산자<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_07.png" alt="순수관계 연산자의 종류" /><br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0513_08.png" alt="순수관계 연산자의 종류와 기능" /></li></ul><h3 id="relational-calculus-관계-해석-개념"><a class="markdownIt-Anchor" href="#relational-calculus-관계-해석-개념"></a> Relational calculus 관계 해석 개념</h3><ul><li>처리를 원하는 <u>데이터가 무엇</u>인지만 기술하는 언어<ul><li>비절차 언어</li></ul></li><li>분류<ul><li>튜플 관계 해석</li><li>도메인 관계 해석</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;논리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#논리데이터베이스&quot;&gt;&lt;/a&gt; 논리데이터베이스&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="관계데이터언어" scheme="https://hyeonukdev.github.io/tags/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%96%B8%EC%96%B4/"/>
    
  </entry>
  
  <entry>
    <title>논리데이터베이스 - 관계데이터베이스 모델</title>
    <link href="https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/13/Engineer_Information_Processing/ch12_%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%AA%A8%EB%8D%B8/</id>
    <published>2020-05-12T15:40:54.000Z</published>
    <updated>2020-05-12T15:40:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="논리데이터베이스"><a class="markdownIt-Anchor" href="#논리데이터베이스"></a> 논리데이터베이스</h2><ul><li><u>관계 데이터 모델의 기본 용어를 익히고 릴레이션을 구성하는 요소와 특성을 이해</u></li><li>관계 데이터 언어의 종류인 관계 대수의 일반 집합 연산자와 순수 관계 연산자의 차이를 이해하고 <u>관계해석</u>의 개념을 정리</li><li><u>시스템 카탈로그와 뷰</u>에 대한 개념 및 특징 이해</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>관계 데이터 모델<ul><li>실 세계 데이터를 행과 열과 구성된 표 형태로 저장하고 한 테이블의 필드 값을 이용하여 다른 테이블에 관련된 데이터를 찾는 식으로 검색하는 데이터 모델</li></ul></li><li>시스템 카탈로그<ul><li>데이터베이스의 객체와 구조들에 관한 모든 데이터를 포함하는 시스템 데이터베이스</li></ul></li></ul><h3 id="관계-데이터-모델-개념"><a class="markdownIt-Anchor" href="#관계-데이터-모델-개념"></a> 관계 데이터 모델 개념</h3><ul><li>DBMS에서 지원하는 데이터 모델</li><li>실 세계 데이터를 행과 열과 구성된 표 형태로 저장하고 한 테이블의 필드 값을 이용하여 다른 테이블에 관련된 데이터를 찾는 식으로 검색하는 데이터 모델</li><li><img src="https://lh3.googleusercontent.com/proxy/6jet3UI9WT52UF8Wd9vEJNVkPWuKU5Uvz6xwg5xcEG77-0abamnbuM8BJH8QrLrpqcNENI6NzlDHAc8tvpH5PCCMwvFsbxy8bb8SKjRc5jqaEPmiYyAnkfPglp4ZSjtY39j2jbX2ebAC1TvbPY13pG33MDuvDfTiJXY8FIZroH1mC3PJIF4uyOcNYckzvbEbtl3gcQ" alt="릴레이션" /></li></ul><h3 id="관계-데이터-모델의-기본-용어"><a class="markdownIt-Anchor" href="#관계-데이터-모델의-기본-용어"></a> 관계 데이터 모델의 기본 용어</h3><ol><li>Relation 릴레이션<ul><li>하나의 개체에 관한 데이터를 <u>2차원 테이블 구조</u>로 저장한 것</li><li>파일 관리 시스템 관점에서 <i>파일에 대응</i></li></ul></li><li>Attribute 속성<ul><li>릴레이션의 <u>열</u></li><li>파일 관리 시스템 관점에서 <i>필드에 대응</i></li></ul></li><li>Tuple 튜플<ul><li>릴레이션의 행</li><li>파일 관리 시스템 관점에서 <i>레코드에 대응</i></li></ul></li><li>Domain 도메인<ul><li>하나의 속성이 가질 수 있는 모든 값의 집합</li><li>속성 값을 입력 및 수정 할 때 적합성 판단의 기준이 됨</li><li>일반적으로 속성의 특성을 고려한 <u>데이터 타입으로 정의</u></li></ul></li><li>Null 널<ul><li>속성 값을 아직 모르거나 해당되는 값이 없음을 표현</li></ul></li><li>Degree 차수<ul><li>하나의 릴레이션에서 <u>속성의 전체 개수</u></li></ul></li><li>Cardinality 카디널리티<ul><li>하나의 릴레이션에서 <u>튜플의 전체 개수</u></li></ul></li></ol><h3 id="릴레이션의-구성"><a class="markdownIt-Anchor" href="#릴레이션의-구성"></a> 릴레이션의 구성</h3><ol><li>Relation schema 릴레이션 스키마<ul><li>릴레이션의 <u>논리적 구조</u></li><li>릴레이션의 이름과 릴레이션에 포함된 모든 속성 이름으로 저으이</li><li>정적인 특성</li></ul></li><li>Relation instance 릴레이션 인스턴스<ul><li>어느 한 시점에 릴레이션에 존재하는 튜플들의 집합</li><li>동적인 특징</li></ul></li><li>릴레이션 구성</li></ol><ul><li><img src="https://2.bp.blogspot.com/-nKfZzzWZ_70/V0KVxKGgKGI/AAAAAAAAAB8/p-Uu3v96WzMI8BYgnmZION6x_58Hg6BvgCLcB/s400/123.PNG" alt="릴레이션 구성" /></li></ul><ol start="4"><li>릴레이션 특성<ol><li>튜플의 유일성<ul><li>하나의 릴레이션에는 동일한 튜플이 존재할 수 없음</li></ul></li><li>튜플의 무순서<ul><li>하나의 릴레이션에서 튜플 사이의 순서는 무의미함</li></ul></li><li>속성의 무순서<ul><li>하나의 릴레이션에서 속성 사이의 순서는 무의미함</li></ul></li><li>속성의 원자성<ul><li>속성 값으로 원자 값만 사용 가능</li></ul></li></ol></li></ol><h3 id="integrity-constraint-무결성-제약조건"><a class="markdownIt-Anchor" href="#integrity-constraint-무결성-제약조건"></a> Integrity constraint 무결성 제약조건</h3><ul><li>데이터의 <u>무결성</u>을 보장하고 <u>일관된 상태로 유지</u>하기 위한 규칙</li><li>무결성<ul><li>데이터의 결함이 없는 상태</li><li>정확하고 유효하게 유지</li></ul></li><li>무결성 제약 조건<ul><li>개체 무결성 제약조건<ul><li>기본키를 구성하는 모든 속성은 널 값을 가질 수 없다</li></ul></li><li>참조 무결성 제약조건<ul><li>외래키는 참조할 수 없는 값을 가질 수 없다</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;논리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#논리데이터베이스&quot;&gt;&lt;/a&gt; 논리데이터베이스&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;관계 데이터 모델의 기본 용어를 익히고 릴레이션을 구성하는 요소와 특성을 이해&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="논리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%85%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="관계데이터베이스모델" scheme="https://hyeonukdev.github.io/tags/%EA%B4%80%EA%B3%84%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EB%AA%A8%EB%8D%B8/"/>
    
  </entry>
  
  <entry>
    <title>물리데이터베이스 - 분산데이터베이스</title>
    <link href="https://hyeonukdev.github.io/2020/05/12/Engineer_Information_Processing/ch13_%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/%EB%B6%84%EC%82%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    <id>https://hyeonukdev.github.io/2020/05/12/Engineer_Information_Processing/ch13_%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/%EB%B6%84%EC%82%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/</id>
    <published>2020-05-12T14:37:18.000Z</published>
    <updated>2020-05-12T14:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="물리데이터베이스"><a class="markdownIt-Anchor" href="#물리데이터베이스"></a> 물리데이터베이스</h2><h3 id="분산-데이터베이스의-정의"><a class="markdownIt-Anchor" href="#분산-데이터베이스의-정의"></a> 분산 데이터베이스의 정의</h3><ul><li><p><u>하나</u>의 데이터베이스 관리 시스템(DBMS)이 <u>여러 CPU에 연결된</u> 저장장치들을 제어하는 형태의 데이터베이스</p></li><li><p>논리적으로 같은 시스템에 속하지만, <u>컴퓨터 네트워크를 통해 물리적으로 분산되어 있는 데이터베이스</u></p></li><li><p>데이터베이스를 연결하는 <u>빠른 네트워크 환경을 이용</u>하여 데이터베이스를 여러 지역 노드로 위치시켜 사용성과 성능을 극대화 시킨 데이터베이스</p></li></ul><h3 id="분산-데이터베이스-설계-시-고려사항"><a class="markdownIt-Anchor" href="#분산-데이터베이스-설계-시-고려사항"></a> 분산 데이터베이스 설계 시 고려사항</h3><ul><li>작업부하(Work Load)의 노드별 분산 정책</li><li>지역의 자치성 보장 정책</li><li>데이터의 일관성 정책</li><li>사이트나 회선의 고장으로 부터의 회복 기능</li><li>통신 네트워크를 통한 원격 접근 기능</li></ul><h3 id="분산-데이터베이스의-목표"><a class="markdownIt-Anchor" href="#분산-데이터베이스의-목표"></a> 분산 데이터베이스의 목표</h3><ul><li><p><b>투명성</b></p></li><li><p>위치투명성</p><ul><li>액세스하려는 데이터베이스의 실제 위치를 알 필요 없이 단지 데이터베이스의 논리적인 명칭만으로 액세스 할 수 있음</li></ul></li><li><p>중복투명성</p><ul><li>동일 데이터가 여러 곳에 중복되어 있더라도 사용자는 마치 하나의 데이터만 존재하는 것처럼 사용하고, 시스템은 자동으로 여러 자료에 대한 작업을 수행</li></ul></li><li><p>병행투명성</p><ul><li>분산 데이터베이스와 관련된 다수의 트랜잭션들이 동시에 실현되더라도 그 트랜잭션의 결과는 영향을 받지 않음</li></ul></li><li><p>장애투명성</p><ul><li>트랜잭션, DBMS, 네트워크, 컴퓨터 장애에도 불구하고 트랜잭션을 정확하게 처리</li></ul></li></ul><h3 id="분산-데이터베이스의-장단점"><a class="markdownIt-Anchor" href="#분산-데이터베이스의-장단점"></a> 분산 데이터베이스의 장/단점</h3><ul><li>장점<ul><li>지역 자치성, 점증적 시스템 용량 확장</li><li>신뢰성과 가용성이 높음</li><li>효용성과 융통성이 높음</li><li>빠른 응답 속도와 통신비용 절감</li><li>시스템의 성능 향상</li><li>중앙 컴퓨터의 장애가 전체 시스템에 영향을 끼치지 않음</li><li>자료의 공유성 향상</li><li>시스템 규모의 적절한 조절 가능</li><li>각 지역 사용자의 요구 수용 증대</li></ul></li><li>단점<ul><li>소프트웨어 개발 비용 증가</li><li>DBMS가 수행할 기능이 복잡</li><li>데이터베이스 설계, 관리의 복잡성</li><li>오류의 잠재성 증가</li><li>처리 비용의 증가</li><li>데이터 무결성에 대한 위협</li></ul></li></ul><h3 id="분산-데이터베이스-설계-방법"><a class="markdownIt-Anchor" href="#분산-데이터베이스-설계-방법"></a> 분산 데이터베이스 설계 방법</h3><h4 id="1-테이블-위치-분산"><a class="markdownIt-Anchor" href="#1-테이블-위치-분산"></a> 1. 테이블 위치 분산</h4><ul><li>테이블 위치 분산은 <u>데이터베이스의 테이블</u>을 <u>각기 다른 서버에 분산시켜 배치하는 방법</u><ul><li>테이블 위치를 분산할 때는 <u>테이블의 구조를 변경하지 않으며, 다른 데이터베이스의 테이블과 중복되지 않게 배치</u></li><li>데이터베이스의 테이블을 각각 다른 위치에 배치하려면 <u>해당 테이블들이 놓일 서버들을 미리 설정해야 함</u></li></ul></li></ul><h4 id="2-fragment-분할"><a class="markdownIt-Anchor" href="#2-fragment-분할"></a> 2. Fragment 분할</h4><ul><li>테이블의 데이터를 분할하여 분산시키는 것</li><li>분할 규칙<ul><li>완전성 : 전체 데이터를 대상으로 분할해야 함</li><li>재구성 : 분할된 데이터는 관계 연산을 활용하여 본래의 데이터로 재구성할 수 있어야 함</li><li>상호 중첩 배제 : 분할된 데이터는 서로 다른 분할의 항목에 속하지 않아야 함</li></ul></li><li>주요 분할 방법<ul><li>수평 분할 : 테이블을 행(Row) 단위로 분할</li><li>수직 분할 : 테이블을 열(Column) 단위로 분할</li></ul></li></ul><h4 id="3-allocation-할당"><a class="markdownIt-Anchor" href="#3-allocation-할당"></a> 3. Allocation 할당</h4><ul><li>할당은 <u>동일한 분할을 여러 개의 서버에 생성하는 분산 방법</u></li><li>중복이 없는 할당과 중복이 있은 할당으로 구분됨</li><li><u>비중복 할당 방식</u><ul><li>최적의 노드를 선택해서 분산 데이터베이스의 <u>단일 노드에서만 분할이 존재</u>하도록 하는 방식</li><li>일반적으로 애플리케이션에는 릴레이션을 배타적 분할로 분리하기 힘든 요구가 포함되므로 분할된 테이블 간의 의존성은 무시되고 비용 증가, 성능 저하 등의 문제가 발생할 수 있음</li></ul></li><li><u>중복 할당 방식</u><ul><li>동일한 테이블을 다른 서버에 복제하는 방식</li><li>일부만 복제하는 부분 복제와 전체를 복제하는 완전 복제가 있음</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;물리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#물리데이터베이스&quot;&gt;&lt;/a&gt; 물리데이터베이스&lt;/h2&gt;
&lt;h3 id=&quot;분산-데이터베이스의-정의&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="분산데이터베이스" scheme="https://hyeonukdev.github.io/tags/%EB%B6%84%EC%82%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>물리데이터베이스 - 물리요소 조사 분석</title>
    <link href="https://hyeonukdev.github.io/2020/05/12/Engineer_Information_Processing/ch13_%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/12/Engineer_Information_Processing/ch13_%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%84%A4%EA%B3%84/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/</id>
    <published>2020-05-12T13:56:23.000Z</published>
    <updated>2020-05-12T13:56:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="물리데이터베이스"><a class="markdownIt-Anchor" href="#물리데이터베이스"></a> 물리데이터베이스</h2><ul><li><p>기존 시스템을 분석하여 업무 영역과 시스템 영역으로 구분하여 용어 사전 기반으로 명명 규칙을 파악할 수 있다.</p></li><li><p>서버, 네트워크, 스토리지 자원을 조사하고, 데이터베이스가 설치될 시스템의 운영체계와 데이터베이스 버전을 확인할 수 있다.</p></li><li><p>데이터베이스 운영과 관련된 관리 요소를 파악하고, <u>데이터베이스 구조, 이중화 구성, 분산 구조, 접근제어, DB 암호화</u>에 대한 시스템 조사 분석서를 작성할 수 있다.</p></li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li><p>분산 데이터베이스<br />논리적으로 같은 시스템에 속하지만, 컴퓨터 네트워크를 통해 물리적으로 분산되어 있는 데이터베이스</p></li><li><p>데이터베이스 이중화<br />시스템 오류로 인한 데이터베이스 서비스 중단이나 물리적 손상 발생 시 이를 복구하기 위해 동일한 데이터베이스를 복제하여 관리</p></li></ul><h3 id="스토리지-시스템의-정의"><a class="markdownIt-Anchor" href="#스토리지-시스템의-정의"></a> 스토리지 시스템의 정의</h3><ul><li><p>스토리지는 단일 디스크로 처리할 수 없는 대용량의 데이터를 저장하기 위해 <u>서버와 저장장치를 연결하는 기술</u></p></li><li><p>스토리지 종류</p><ul><li>DAS(Direct Attached Storage)</li><li>NAS(Network Attached Storage)</li><li>SAN(Storage Area Network)</li></ul></li></ul><h3 id="das-direct-attached-storage"><a class="markdownIt-Anchor" href="#das-direct-attached-storage"></a> DAS; Direct Attached Storage</h3><ul><li>DAS는 <u>서버와 저장장치</u>를 전용 케이블로 <u>직접 연결</u>하는 방식<ul><li>저장장치를 직접 연결하므로 <u>속도가 빠르고 설치 및 운영이 쉬움</u></li><li><u>초기 구축 비용 및 유지보수 비용이 저렴</u></li><li><u>다른 서버에서 접근할 수 없고 파일 공유 불가능</u></li><li><u>확장성 및 유연성이 상대적이 떨어짐</u></li></ul></li><li><img src="https://t1.daumcdn.net/cfile/tistory/21470F4656EF5FBE16" alt="DAS" /></li></ul><h3 id="nas-network-attached-storage"><a class="markdownIt-Anchor" href="#nas-network-attached-storage"></a> NAS; Network Attached Storage</h3><ul><li>NAS는 <u>서버와 저장장치</u>를 <u>네트워크</u>를 통해 <u>연결</u>하는 방식<ul><li>별도의 <u>파일 관리 기능이 있는 NAS Storage</u>가 내장된 저장장치를 관리하기 때문에 <u>서버간 스토리지, 파일 공유 용이함</u></li><li>DAS에 비해 <u>확장성 및 유연성이 우수함</u></li><li><u>네트워크 환경 상태에 영향을 많이 받음</u></li><li>접속 증가 시 성능이 저하될 수 있음</li></ul></li><li><img src="https://t1.daumcdn.net/cfile/tistory/230F864356EF5FBE36" alt="NAS" /></li></ul><h3 id="san-storage-area-network"><a class="markdownIt-Anchor" href="#san-storage-area-network"></a> SAN; Storage Area Network</h3><ul><li>SAN은 DAS의 빠른 처리와 NAS의 스토리지 공유 장점을 합친 방식<ul><li>광케이블(FC)과 광채널 스위치를 통해 근거리 네트워크 환경을 구성하여 <u>빠른 속도로 데이터 처리</u></li><li>저장 장치 연결로 <u>스토리지 공유가 가능</u></li><li>스토리지 시스템 중 <u>대용량 환경의 높은 트랜잭션 처리 효과적</u></li><li><u>기존 시스템의 경우 장비 업그레이드가 필요하고, 구축비용이 비쌈</u></li></ul></li><li><img src="https://t1.daumcdn.net/cfile/tistory/215A693556EF5FBF13" alt="SAN" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;물리데이터베이스&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#물리데이터베이스&quot;&gt;&lt;/a&gt; 물리데이터베이스&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;기존 시스템을 분석하여 업무 영역과 시스템 영역으로 구분하여 용어 사전 기반으로
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리데이터베이스" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%AC%BC%EB%A6%AC%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="물리요소조사분석" scheme="https://hyeonukdev.github.io/tags/%EB%AC%BC%EB%A6%AC%EC%9A%94%EC%86%8C%EC%A1%B0%EC%82%AC%EB%B6%84%EC%84%9D/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-10T08:34:41.000Z</published>
    <updated>2020-05-10T08:34:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-데이터-정제"><a class="markdownIt-Anchor" href="#1-데이터-정제"></a> 1. 데이터 정제</h3><ul><li>데이터 정제 항목을 정제 시점에 따라 전환 테스트 전, 중, 최종전환 3단계로 구분하여 데이터 정제 작업을 수행</li></ul><h3 id="2-데이터-품질-분석"><a class="markdownIt-Anchor" href="#2-데이터-품질-분석"></a> 2. 데이터 품질 분석</h3><ul><li>데이터 품질 관리는 기관이나 조직 내외부의 정보시스템 및 DB사용자의 기대를 만족시키기 위해 지속적으로 수행하는 데이터 관리 및 개선활동</li><li>원천 데이터와 전환된 목적 데이터베이스의 품질 분석</li><li>원천 데이터와 전환 데이터의 정합성 검증 항목</li></ul><h3 id="3-오류-데이터-측정"><a class="markdownIt-Anchor" href="#3-오류-데이터-측정"></a> 3. 오류 데이터 측정</h3><ul><li>데이터 중 정상 데이터와 오류 데이터를 정량적으로 측정</li><li>오류 목록의 내용을 확인하고 오류 해결 방안을 참조하여 원천 데이터의 정제를 요청할 것인지, 아니면 전환 프로그램을 수정할 것인지 데이터 정제 여부를 결정</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-데이터-정제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-데이터-정제&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 오류데이터측정</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%EC%98%A4%EB%A5%98%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%B8%A1%EC%A0%95/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%EC%98%A4%EB%A5%98%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%B8%A1%EC%A0%95/</id>
    <published>2020-05-10T08:21:18.000Z</published>
    <updated>2020-05-10T08:21:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="정상-데이터와-오류-데이터-정량적-측정"><a class="markdownIt-Anchor" href="#정상-데이터와-오류-데이터-정량적-측정"></a> 정상 데이터와 오류 데이터 정량적 측정</h3><h4 id="1-정상-데이터의-건수를-정량적으로-측정"><a class="markdownIt-Anchor" href="#1-정상-데이터의-건수를-정량적으로-측정"></a> 1. 정상 데이터의 건수를 정량적으로 측정</h4><ul><li>전환 대상 범위의 데이터를 업무 영역별, 테이블별로 세분화하여 정상 데이터의 수량을 정확히 측정하고 기록</li></ul><h4 id="2-오류-데이터의-유형과-건수를-정량적으로-측정"><a class="markdownIt-Anchor" href="#2-오류-데이터의-유형과-건수를-정량적으로-측정"></a> 2. 오류 데이터의 유형과 건수를 정량적으로 측정</h4><ul><li>원천 데이터의 정합성 기준을 근거로 업무별로 오류 위치와 유형을 파악하고 그 수량을 정확히 측정하여 기록</li></ul><h4 id="3-원천-데이터-오류-관리-목록-예시"><a class="markdownIt-Anchor" href="#3-원천-데이터-오류-관리-목록-예시"></a> 3. 원천 데이터 오류 관리 목록 예시</h4><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_04.png" alt="오류관리목록" /></p><h3 id="오류-원인-파악-및-정제-여부-결정"><a class="markdownIt-Anchor" href="#오류-원인-파악-및-정제-여부-결정"></a> 오류 원인 파악 및 정제 여부 결정</h3><h4 id="1-발견된-데이터-오류를-분석하고-원인-파악"><a class="markdownIt-Anchor" href="#1-발견된-데이터-오류를-분석하고-원인-파악"></a> 1. 발견된 데이터 오류를 분석하고 원인 파악</h4><ul><li>해결방안<ul><li>오류의 내용과 원인을 분서갛여 해결 가능한 오류는 향후 처리 방침을 기술하고, 해결 불가한 오류는 고객과 협의한 내용을 기술</li></ul></li><li>심각도<ul><li>상<ul><li>더 이상 데이터 이행을 진행할 수 없게 만드는 오류</li></ul></li><li>중<ul><li>데이터 이행 전반에 영향을 미치는 오류</li></ul></li><li>하<ul><li>데이터 이행의 흐름에는 영향을 미치지 않는 오류이나 상황에 맞지 않는 용도 및 배치 오류</li></ul></li></ul></li><li>상태<ul><li>Open<ul><li>오류가 보고되었지만 아직 분석되지 않은 상태</li></ul></li><li>Assigned<ul><li>영향 분석 및 수정을 위해 오류를 개발자에게 할당한 상태</li></ul></li><li>Fixed<ul><li>개발자가 오류를 수정한 상태</li></ul></li><li>Closed<ul><li>오류가 수정되었는지 확인하고 재테스트 시 오류가 발견되지 않은 상태</li></ul></li><li>Deferred<ul><li>오류 우선 순위가 낮게 분류되었기 때문에 오류 수정을 연기한 상태</li></ul></li><li>Classified<ul><li>보고된 오류가 프로젝트 팀에 의해 오류가 아니라고 판단한 상태</li></ul></li></ul></li></ul><h4 id="2-원천-데이터와-전환-프로그램의-정제-필요-여부-결정"><a class="markdownIt-Anchor" href="#2-원천-데이터와-전환-프로그램의-정제-필요-여부-결정"></a> 2. 원천 데이터와 전환 프로그램의 정제 필요 여부 결정</h4><ul><li><u>파악된 오류 원인을 기반으로 해결방안 협의</u></li><li>무시해야하는 오류가 아닌 경우에는 <u>원천 데이터의 정제</u>를 통해 해결해야할 것인지, <u>전환 프로그램을 수정할 것인지 결정</u></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;정상-데이터와-오류-데이터-정량적-측정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="오류데이터측정" scheme="https://hyeonukdev.github.io/tags/%EC%98%A4%EB%A5%98%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%B8%A1%EC%A0%95/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 데이터품질분석</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%92%88%EC%A7%88%EB%B6%84%EC%84%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%92%88%EC%A7%88%EB%B6%84%EC%84%9D/</id>
    <published>2020-05-10T08:12:06.000Z</published>
    <updated>2020-05-10T08:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="원천-데이터-품질-분석의-개념"><a class="markdownIt-Anchor" href="#원천-데이터-품질-분석의-개념"></a> 원천 데이터 품질 분석의 개념</h3><ul><li>원천 데이터의 품질이 보장되지 않으면 전환 후의 데이터도 정확하지 않으며, 전환 후의 데이터 정합성 검증 시 오류가 발생할 때 그 원인을 찾기도 어려움</li><li>따라서 <u>전환 전에 원천 데이터의 품질을 검증함으로써 전환의 정확성을 보장</u>할 수 있으며, 이전에 <u>미처 발견하지 못한 데이터의 오류도 찾아낼 수 있음</u></li></ul><h3 id="원천-데이터-품질-검증을-위한-대표적인-정합성-항목"><a class="markdownIt-Anchor" href="#원천-데이터-품질-검증을-위한-대표적인-정합성-항목"></a> 원천 데이터 품질 검증을 위한 대표적인 정합성 항목</h3><blockquote><ul><li>필수 항목의 데이터가 모두 존재하는가?</li><li>데이터의 유형이 정확하게 관리되고 있는가?</li><li>날짜의 경우 날짜로서 유효한 형태를 가지고 있는가?</li><li>금액의 경우 유효한 값의 범위인가?</li><li>계좌 번호 등이 정해진 법칙에 따른 번호인가?</li><li>영업점이 실제로 존재하는 영업점인가?</li><li>코드 값이 정해진 범위에 속하는가?</li><li>개설 일자, 해지 일자 등 모든 일자의 시점이 업무 규칙에 위배되지 않고 정확하게 설정되어 있는가?</li><li>업무 규칙에 위배되는 잘못된 정보가 존재하는가?</li><li>잔액의 총합이 회계정보와 동일한가?</li><li>보고서 값과 실제 데이터 값이 일치하는가?</li></ul></blockquote><h3 id="목적-데이터-품질-분석"><a class="markdownIt-Anchor" href="#목적-데이터-품질-분석"></a> 목적 데이터 품질 분석</h3><ul><li>원천 데이터와 목적 데이터베이스 속성(Column)간 대응 관계는 1:1대응보다 N:M대응 관계가 더 많기 때문에 양자 간의 대응 관계를 정확히 표현하기 위해서는 데이터 레이아웃을 정확하게 파악하고 품질 검증 진행</li></ul><h3 id="목적-데이터베이스-전환-데이터-검증-고려-사항"><a class="markdownIt-Anchor" href="#목적-데이터베이스-전환-데이터-검증-고려-사항"></a> 목적 데이터베이스 전환 데이터 검증 고려 사항</h3><ul><li>현재 업무에서 사용하는 보고서나 통계용 정보를 사전에 조사하여 검증에 필요한 내용을 선정하고, 현재의 원장을 바탕으로 검증용 정보 도출</li><li>전환 데이터 검증은 데이터 전환 팀 인원 뿐만 아니라, 현업 인원도 함께 검증을 수행함으로써 검증의 정확성을 높이고 시간을 단축시키는 것이 중요함</li></ul><h3 id="전환-데이터의-대표적인-정합성-검증-항목"><a class="markdownIt-Anchor" href="#전환-데이터의-대표적인-정합성-검증-항목"></a> 전환 데이터의 대표적인 정합성 검증 항목</h3><ul><li>과목별 좌수 및 잔액</li><li>특정 기준으로 분류된 좌수 및 잔액</li><li>보고서 항목 또는 통계 수치</li><li>계좌 및 고객을 Sampling하여 해당 사항을 모두 검증</li><li>특수 관계가 있는 고객을 추출하여 관련된 데이터가 정확한지 검증</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;원천-데이터-품질-분석의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#원천-데
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터품질분석" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%ED%92%88%EC%A7%88%EB%B6%84%EC%84%9D/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-10T08:10:30.000Z</published>
    <updated>2020-05-10T08:10:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-데이터-전환-수행-계획"><a class="markdownIt-Anchor" href="#1-데이터-전환-수행-계획"></a> 1. 데이터 전환 수행 계획</h3><ul><li>데이터 전환 절차는 전환 계획 및 요건정의, 전환 설계, 전환 개발, 전환 테스트 및 검증으로 구분할 수 있음</li><li>데이터 전환 수행 계획 작성을 위해서는 데이터 전환 범위, 전환 일정, 전환 절차를 명확히 해야 함</li><li>데이터 전환 계획서의 주요 항목<ul><li>데이터 전환 개요, 데이터 전환 대상 및 범위</li><li>데이터 전환 환경구성, 데이터 전환 조직 및 역할</li><li>데이터 전환 일정, 데이터 전환 방안</li><li>데이너 정비 방안, 비상계획</li></ul></li></ul><h3 id="2-체크리스트"><a class="markdownIt-Anchor" href="#2-체크리스트"></a> 2. 체크리스트</h3><ul><li>전환 프로그램의 에러, 시간의 제약, 업무 프로세스의 변경, 빈번한 데이터 요건 변경, 하드웨어 장애 등의 <u>위험요소에 최대한 대응하기 위해 체크리스트 작성</u></li><li>체크리스트 기재항목<ul><li>데이터 전환 수행자가 수행할 작업의 상세 항목</li><li>작업 내용</li><li>예정 시작/종료 시각</li><li>작업 담당자 기재</li></ul></li></ul><h3 id="3-데이터-검증"><a class="markdownIt-Anchor" href="#3-데이터-검증"></a> 3. 데이터 검증</h3><ul><li><u>원천 시스템의 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행되었는지 여부를 확인하는 과정</u></li><li>검증 방법에 따른 분류<ul><li>로그 검증</li><li>기본 항목 검증</li><li>응용 프로그램 검증</li><li>응용 데이터 검증</li><li>값 검증</li></ul></li><li>데이터 단계에 따른 분류<ul><li>추출</li><li>전환</li><li>DB 적재</li><li>DB 적재 후</li><li>전환 완료 후</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-데이터-전환-수행-계획&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-데이터-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 데이터정제</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/</id>
    <published>2020-05-10T07:47:18.000Z</published>
    <updated>2020-05-10T07:47:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><ul><li>원천 데이터와 전환된 목적 데이터베이스 데이터의 품질을 분석하여 <u>정상 데이터와 오류 데이터를</u> 정량적으로 측정</li><li>발견된 <u>오류를 분석</u>하여 오류의 원인을 파악하고 원천 데이터와 응용 프로그램의 <u>정제 필요 여부를 결정</u></li><li>정제가 필요한 원천 데이터와 오류를 생성하는 원천 프로그램을 수정하기 위한 <u>데이터 정제요청서를 작성</u></li><li>정제된 원천 데이터를 확이하여 데이터 정제 수행 결과를 검증하고, <u>데이터 정제보고서를 작성</u></li><li>데이터 품질 분석 -&gt; 오류 데이터 측정 -&gt; 오류 데이터 정제</li></ul><h3 id="단계별-데이터-정제-방안"><a class="markdownIt-Anchor" href="#단계별-데이터-정제-방안"></a> 단계별 데이터 정제 방안</h3><h4 id="1-1단계-전환-테스트-전"><a class="markdownIt-Anchor" href="#1-1단계-전환-테스트-전"></a> 1. 1단계 전환 테스트 전</h4><ul><li>정합성 마비<ul><li>데이터 상호 간의 정합성이 유지될 수 있도록 데이터 보관</li><li>조건<ul><li>업무 규칙을 적용한 정당한 값 또는 데이터 선별</li></ul></li></ul></li><li>불필요한 데이터 필드<ul><li>사용하는 데이터의 경우 매핑을 수행</li><li>사용하지 않을 경우에는 해당 테이블 삭제</li></ul></li><li>손실된 데이터<ul><li>손실된 데이터를 정당한 값으로 복원</li><li>조건<ul><li>손실된 데이터의 정당한 값을 알아야 함</li></ul></li></ul></li><li>맞지 않는 타입<ul><li>정당한 타입의 데이터로 수정</li><li>조건<ul><li>해당 데이터를 정당한 타입의 필드로 이전</li></ul></li></ul></li><li>오류 데이터<ul><li>오류 데이터를 정당한 데이터로 변경</li><li>불필요한 데이터를 삭제 또는 초기화</li><li>조건<ul><li>정당한 데이터의 기준 정의</li></ul></li></ul></li></ul><h4 id="2-2단계-전환-테스트-시"><a class="markdownIt-Anchor" href="#2-2단계-전환-테스트-시"></a> 2. 2단계 전환 테스트 시</h4><ul><li>전환 테스트 결과 발견된 오류 데이터<ul><li>사전에 업무 규칙을 적용하여 정의한 정당한 데이터 값으로 정비</li><li>동일한 타입으로 전환</li><li>1단계 정제 대상 항목의 정제 내용과 동일하게 정제</li><li>조건<ul><li>테스트 결과를 이용하여 정제 조건 결정</li><li>테스트 수행 과정에서 정제 대상 리스트 제시</li></ul></li></ul></li></ul><h4 id="3-3단계-최종-전환"><a class="markdownIt-Anchor" href="#3-3단계-최종-전환"></a> 3. 3단계 최종 전환</h4><ul><li>최종 전환 과정에서 정제<ul><li>매핑 정의서에 작성된 전환 규칙을 이용하여 전환 프로그램에 해당 내용 추가하여 프로그램 수행 시 정제</li><li>조건<ul><li>테스트 결과를 이용하여 정제 조건 결정</li><li>사전에 매핑 과정에서 정제 대상 및 정제 조건을 명확하게 제시</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;원천 데이터와 전환된 목적 데이터베이스 데이터의 품질을 분석하여 &lt;u&gt;정상 데이터와 오류 데이터를&lt;/u
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터정제" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%95%EC%A0%9C/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 체크리스트</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/</id>
    <published>2020-05-10T07:02:40.000Z</published>
    <updated>2020-05-10T07:02:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="체크리스트-개념"><a class="markdownIt-Anchor" href="#체크리스트-개념"></a> 체크리스트 개념</h3><ul><li>전환 프로그램의 에러, 시간의 제약, 업무 프로세스의 변경, 빈번한 데이터 요건 변경, 하드웨어 장애 등의 <u>위험요소에 최대한 대응하기 위해 체크리스트 작성</u></li><li>체크리스트 기재항목<ul><li>데이터 전환 수행자가 수행할 작업의 상세 항목</li><li>작업 내용</li><li>예정 시작/종료 시각</li><li>작업 담당자 기재</li></ul></li></ul><h3 id="데이터-전환-체크리스트-예시"><a class="markdownIt-Anchor" href="#데이터-전환-체크리스트-예시"></a> 데이터 전환 체크리스트 예시</h3><p><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_02.png" alt="체크리스트" /></p><ul><li><b>작업프로세스는 포함 안됨</b></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;체크리스트-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#체크리스트-개념&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="체크리스트" scheme="https://hyeonukdev.github.io/tags/%EC%B2%B4%ED%81%AC%EB%A6%AC%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 데이터전환수행계획</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89%EA%B3%84%ED%9A%8D/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89%EA%B3%84%ED%9A%8D/</id>
    <published>2020-05-10T06:39:30.000Z</published>
    <updated>2020-05-10T06:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><ul><li>데이터 전환 수행 계획서의 모의 전환 일정에 따라 <u>모의 데이터 전환 차수별 데이터 전환 계획서와 본 데이터 전환 계획서를 작성</u></li><li>데이터 전환 수행자가 수행할 작업 항목, 작업 내용, 예정 시작/종료 시각, 작업 담당자를 포함하는 <u>상세 체크리스트를 작성</u></li><li>작성된 데이터 전환 계획서와 체크리스트에 따라 <u>데이터 변환 프로그램들을 실행하고 정상 동작 여부 모니터링 및 전환 결과 검증</u></li><li>데이터 전환 관정과 데이터 검증 결과를 분석하여 <u>데이터 전환 결과 보고서를 작성</u></li></ul><h3 id="데이터-전환-절차"><a class="markdownIt-Anchor" href="#데이터-전환-절차"></a> 데이터 전환 절차</h3><ul><li>요구사항 분석 단계(전환 계획 및 요건정의)</li><li>설계 단계(전환 설계)</li><li>구현 단계(전환 개발)</li><li>테스트 단계(전환 테스트 및 검증)</li><li>세부적으로 22가지 상세 단계<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_01.png" alt="데이터전환절차" /></li></ul><h3 id="데이터-전환-수행-계획"><a class="markdownIt-Anchor" href="#데이터-전환-수행-계획"></a> 데이터 전환 수행 계획</h3><h4 id="1-데이터-전환-범위-선정"><a class="markdownIt-Anchor" href="#1-데이터-전환-범위-선정"></a> 1. 데이터 전환 범위 선정</h4><ul><li>전환 대상의 상세 내용, 데이터 형식, 대상 건수 파악</li><li>필요에 따라서는 전환 제외 대상 기록</li></ul><h4 id="2-데이터-전환-일정-선정"><a class="markdownIt-Anchor" href="#2-데이터-전환-일정-선정"></a> 2. 데이터 전환 일정 선정</h4><ul><li>팀별 업무를 분장하여 팀별 역할과 납기를 기록</li><li>전환 차수의 결정은 통합 계획 및 테스트 계획에 의해 결정</li></ul><h4 id="3-데이터-전환-절차"><a class="markdownIt-Anchor" href="#3-데이터-전환-절차"></a> 3. 데이터 전환 절차</h4><ul><li><u>현행(As-Is) 시스템에서 목표(To-Be)시스템으로 데이터 전환</u>을 위한 단계를 구분하고 각 단계별 작업 내용과 사용되는 도구를 별도로 기록</li><li>원천 데이터베이스의 데이터는 백업하여 <u>스테이징 데이터베이스로 복구 한 후 정비 및 변환 작업을 수행</u>하며 이는 원천 데이터베이스의 손상과 변형을 막기 위한 방법</li><li>데이터 전환이 완료된 후 <u>검증단계</u>에서는 스테이징 데이터베이스가 아닌 <u>원천 데이터베이스와 비교하여 데이터 오류를 확인</u></li></ul><h4 id="4-데이터-전환-계획서-작성"><a class="markdownIt-Anchor" href="#4-데이터-전환-계획서-작성"></a> 4. 데이터 전환 계획서 작성</h4><ul><li><p><b>계획 -&gt; 수행 &gt; 결과</b></p></li><li><p>데이터 전환 개요</p><ul><li>데이터 전환 목표<ul><li>간결하고 명확하게</li></ul></li><li>주요 성공 요인</li><li>전체 조건 및 제약사항</li></ul></li><li><p>데이터 전환 대상 및 범위</p><ul><li>데이터 전환 대상</li><li>데이터 전환 범위</li></ul></li><li><p>데이터 전환 환경 구성</p><ul><li>원천시스템 구성도</li><li>목적 시스템 구성도</li><li>전환 단계별 DISK 사용량</li></ul></li><li><p>데이터 전환 조직 및 역할</p><ul><li>데이터 전환 조직도</li><li>조직별 역할</li><li>업무 분담 계획<ul><li>검증할 작업자와 작업자별 역할은 최대한 상세히 정리</li></ul></li></ul></li><li><p>데이터 전환 일정</p><ul><li>데이터 전환 및 검증 작업별 상세한 일정</li></ul></li><li><p>데이터 전환 방안</p><ul><li>사전 준비</li><li>데이터 전환 설계</li><li>프로그램 개발 및 테스트</li><li>데이터 전환 리허설</li><li>데이터 전환</li></ul></li><li><p>데이터 정비 방안</p><ul><li>데이터 정비 대상 및 방법</li><li>데이터 정비 일정 및 조직</li></ul></li><li><p>비상계획</p><ul><li>데이터 전환 당일 구성될 종합상황실 및 의사소통 체계</li></ul></li><li><p>데이터 복구 계획</p><ul><li>데이터 전환 과정 오류 발생 또는 실패 시 백업 및 복구 방안 수립</li></ul></li><li><p>데이터 전환 개발단계</p><ul><li>전환 개발환경 구축</li><li>전환 프로그램 개발</li><li>검증 프로그램 개발</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 전환 수행 계획서의 모의 전환 일정에 따라 &lt;u&gt;모의 데이터 전환 차수별 데이터 전환 계획서와 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환수행계획" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89%EA%B3%84%ED%9A%8D/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 데이터검증</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B2%80%EC%A6%9D/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EC%88%98%ED%96%89/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B2%80%EC%A6%9D/</id>
    <published>2020-05-10T06:39:30.000Z</published>
    <updated>2020-05-10T06:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="데이터-검증-개념"><a class="markdownIt-Anchor" href="#데이터-검증-개념"></a> 데이터 검증 개념</h3><ul><li><u>원천 시스템의 데이터를 목적 시스템의 데이터로 전환하는 과정이 정상적으로 수행되었는지 여부를 확인하는 과정</u></li><li>데이터 전환 검증은 검증 방법과 검증 단계에 따라 분류됨</li></ul><h3 id="데이터-검증-분류"><a class="markdownIt-Anchor" href="#데이터-검증-분류"></a> 데이터 검증 분류</h3><h4 id="1-데이터-검증-방법에-따른-분류"><a class="markdownIt-Anchor" href="#1-데이터-검증-방법에-따른-분류"></a> 1. 데이터 검증 방법에 따른 분류</h4><ul><li>검증 방법에 따라 로그 검증, 기본항목 검증, 응용 프로그램 검증, 응용 데이터 검증, 값 검증으로 분류</li><li>로그 검증<ul><li>데이터 전환 과정에서 작성하는 추출, 전환, 적재 로그를 검증</li></ul></li><li>기본 항목 검증<ul><li>로그 검증 외에 별도로 요청된 검증 항목에 대해 검증</li></ul></li><li>응용 프로그램 검증<ul><li>응용 프로그램을 통한 데이터 전환의 정합성을 검증</li></ul></li><li>응용 데이터 검증<ul><li>사전에 정의된 업무 규칙을 기준으로 데이터 전환의 정합성을 검증</li></ul></li><li>값 검증<ul><li>숫자 항목의 합계 검증, 코드 데이터의 범위 검증, 속성 변에 따른 값 검증을 수행</li></ul></li><li><b>정합성은 아님</b></li></ul><h4 id="2-데이터-단계에-따른-분류"><a class="markdownIt-Anchor" href="#2-데이터-단계에-따른-분류"></a> 2. 데이터 단계에 따른 분류</h4><ul><li>원천 데이터를 추출하는 시점부터 전환 시점, DB 적재 시점, DB 적재 후 시점, 전환 완료 후 시점별로 목적과 검증 방법을 달리하여 데이터 전화의 정합성을 검증<br /><img src="/images/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/0510_03.png" alt="데이터 검증 분류" /></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;데이터-검증-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터-검증-개념&quot;&gt;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터검증" scheme="https://hyeonukdev.github.io/tags/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B2%80%EC%A6%9D/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-10T06:15:43.000Z</published>
    <updated>2020-05-10T06:15:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-초기데이터-구축"><a class="markdownIt-Anchor" href="#1-초기데이터-구축"></a> 1. 초기데이터 구축</h3><ul><li>기존 운영 시스템의 이해를 바탕으로 <u>구축 범위를 명확</u>하게 하여 구축</li><li>초기 데이터 구축 절차<ol><li>구축 전략 수집</li><li>초기 데이터 구축 대상 파악</li><li>초기 데이터 구축 범위</li><li>초기 데이터 구축 시 세부 고려사항</li></ol></li></ul><h3 id="2-etl"><a class="markdownIt-Anchor" href="#2-etl"></a> 2. ETL</h3><ul><li>다양한 소스시스템으로 부터 필요한 데이터를 추출(Extraction)하여 새로 개발할 정보시스템에서 운영 가능하도록 변환(Transformation) 작업을 거쳐 타깃 시스템으로 전송 및 로딩(Loading)하는 일련의 과정을 뜻함</li></ul><h3 id="3-파일-처리-기술"><a class="markdownIt-Anchor" href="#3-파일-처리-기술"></a> 3. 파일 처리 기술</h3><ul><li>자료 구조 이론에서 파일처리 기술은 <u>많은 양의 자료를 각종 매체에 저장하는 기법</u></li><li>종류<ul><li>순차파일</li><li>색인 순차파일</li><li>가상 기억 접근방식 파일</li><li>직접파일</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-초기데이터-구축&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-초기데이터-구축
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 파일처리기술</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%88%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%88%A0/</id>
    <published>2020-05-10T05:52:18.000Z</published>
    <updated>2020-05-10T05:52:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="1-파일-처리-기술-개념"><a class="markdownIt-Anchor" href="#1-파일-처리-기술-개념"></a> 1. 파일 처리 기술 개념</h3><ul><li>자료 구조 이론에서 파일처리 기술은 <u>많은 양의 자료를 각종 매체에 저장하는 기법</u></li><li>파일을 하드디스크에 저장할 때 기억공간을 효율적으로 사용하고 필요한 자료의 탐색을 쉽게 하기 위해 파일을 효율적으로 처리하는 기술</li><li>종류<ul><li>순차파일</li><li>색인 순차파일</li><li>가상 기억 접근방식 파일</li><li>직접파일</li></ul></li></ul><h3 id="파일-처리-기술-종류"><a class="markdownIt-Anchor" href="#파일-처리-기술-종류"></a> 파일 처리 기술 종류</h3><h4 id="1-sequential-file-순차파일"><a class="markdownIt-Anchor" href="#1-sequential-file-순차파일"></a> 1. Sequential File 순차파일</h4><ul><li>입력되는 데이터들을 논리적인 순서에 따라 물리적 연속 공간에 <u>순차적으로 기록</u>하는 방식</li><li>급여 관리 등과 같이 변동 사항이 크지 않고 <u>기간별로 일괄처리를 주로 하는 경우 적합</u></li><li>주로 순차 접근이 가능한 <u>자기 테이프</u>에 사용</li><li>장점<ul><li><b>기록 밀도가 높아 기억공간을 효율적으로 사용</b></li><li>매체 변환이 쉬워 <b>어떠한 매체에도 적용 가능</b></li><li>레코드를 기록할 때 사용한 키 순서대로 레코드를 처리하는 경우, 다른 편성법보다 처리속도가 빠름</li></ul></li><li>단점<ul><li>파일에 새로운 레코드를 삽입-삭제하는 경우 파일 <b>전체를 복사해야하므로 시간이 많이 소요됨</b></li><li>데이터 검색 시 처음부터 순차적으로 검색하기 때문에 <b>검색 효율이 낮음</b></li></ul></li></ul><h4 id="2-indexed-sequential-file-색인-순차-파일"><a class="markdownIt-Anchor" href="#2-indexed-sequential-file-색인-순차-파일"></a> 2. Indexed Sequential File 색인 순차 파일</h4><ul><li><u>순차 처리와 랜덤 처리가 모두 가능하도록 레코드들을 키 값 순으로 정렬시켜 기록하고 레코드의 키 항목만을 모은 색인을 구성하여 편성하는 방식</u></li><li>ISAM; Index Sequential Access Method 방법이라고도 함</li><li>레코드를 참조할 때 색인을 탐색한 후 색인이 가리키는 <b>포인터를 사용하여 직접참조</b></li><li><u>자기 디스크</u>에 많이 사용되며, 자기 테이프에는 사용 불가</li><li>장점<ul><li>순차 처리와 랜덤 처리가 모드 가능하므로 목적에 따라 융통성 있게 처리 가능</li><li>효율적인 검색이 가능하고 레코드의 삽입, 삭제, 갱신이 용이함</li></ul></li><li>단점<ul><li>색인 구역과 오버플로 구역을 구성하기 위한 <b>추가 기억 공간이 필요함</b></li><li>파일이 정렬되어 있어야 하므로 추가, 삭제가 많으면 효율이 떨어짐</li><li>색인을 이용한 액세스를 하기 때문에 액세스 시간이 랜덤 편서 파일보다 느림</li></ul></li></ul><h4 id="3-vsam-virtual-storage-access-method-가상-기억-접근-방식-파일"><a class="markdownIt-Anchor" href="#3-vsam-virtual-storage-access-method-가상-기억-접근-방식-파일"></a> 3. VSAM; Virtual Storage Access Method 가상 기억 접근 방식 파일</h4><ul><li><u>동적 인덱스 방법을 이용한 색인 순차 파일</u></li><li>데이터 레코드가 저장되는 부분인 제어 구간, 몇 개의 제어 구간을 모아 놓은 제어 구역, 제어 구역에 대한 인덱스를 저장한 순차 세트, 순차 세트의 상위 인덱스의 인덱스 세트로 구성</li><li>레코드를 삭제하면 그 공간을 재사용 가능</li><li>제어 구간에 <u>가변 길이 레코드를 쉽게 수용 가능</u></li></ul><h4 id="4-direct-file-직접-파일"><a class="markdownIt-Anchor" href="#4-direct-file-직접-파일"></a> 4. Direct File 직접 파일</h4><ul><li>파일을 구성하는 레코드를 <u>특정 순서 없이 임의의 물리적 저장공간에 기록</u>하는 것으로, 랜덤파일, DAM파일이라고 함</li><li>레코드에 특정 기준으로 키가 할당되며, <b>해시 함수</b>를 이용하여 이 키에 대한 <u>보조기억장치의 물리적 상대 레코드 주소를 계산</u>한 후 해당하는 주소에 레코드를 저장</li><li>임의 접근이 가능한 <u>자기 디스크나 자기 드럼</u>에서 사용</li><li><b>데이터의 입출력이 빈번히 발생하는 곳에 응용</b></li><li>장점<ul><li>DSAD의 물리적 주소를 통하여 파일의 각 레코드에 직접 접근하거나 기록할 수 있으며, 접근 및 기록 순서에는 제약이 없음</li><li>접근 시간이 빠르고 레코드의 삽입, 삭제, 갱신이 용이</li><li><b>어떤 레코드라도 평균 접근시간 내에 검색가능</b></li></ul></li><li>단점<ul><li>레코드의 주소 변환 과정이 필요하며, 이 과정으로 인해 시간이 소요됨</li><li><b>기억공간의 효율이 저하될 수 있음</b></li><li>기억장치의 물리적 구조에 대한 지식이 필요하고 복잡함</li><li>충돌이 발생할 염려가 있으므로, 기억 공간의 확보가 필요</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;1-파일-처리-기술-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-파일-처리
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="파일처리기술" scheme="https://hyeonukdev.github.io/tags/%ED%8C%8C%EC%9D%BC%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%88%A0/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - ETL</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/ETL/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/ETL/</id>
    <published>2020-05-10T05:43:06.000Z</published>
    <updated>2020-05-10T05:43:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><h3 id="etl-extraction-transformation-load-프로세스"><a class="markdownIt-Anchor" href="#etl-extraction-transformation-load-프로세스"></a> ETL; Extraction, Transformation, Load 프로세스</h3><ul><li><u>특수한 엔진에서 진행되며 종종 변환 중인 데이터가 준비 테이블에서 임시로 보유되었다가 대상에 로드 됨</u></li><li>일반적으로 발생하는 데이터변환에는 <u>필터링, 정렬, 집계, 데이터 조인, 데이터 정리, 중복 제거 및 데이터 유효성 검사 등의 작업</u></li><li>종종 시간 절약을 위해 데이터의 추출이 완료될 때 까지 기다리지 않고 데이터가 추출 되는 동안 이미 수신된 데이터가 변환되면서 로드 준비가 진행되고 준비된 데이터에 대한 로드 프로세스가 시작되는 방식으로 3가지 ETL 단계가 동시에 진행됨</li></ul><h3 id="etl-프로세스별-방법"><a class="markdownIt-Anchor" href="#etl-프로세스별-방법"></a> ETL 프로세스별 방법</h3><ul><li>추출 Extraction<ul><li>JDBC, ODBC 기술의 이용</li><li>Flat File 생성</li><li>CDC; Change Data Capture</li></ul></li><li>변환 Transformation<ul><li>재구성, 정제, 변환, 데이터필드 검사, Rule 적용</li><li>데이터 통합 및 정제가 과도히 요구되는 경우, ETL작업의 80%는 변환과정에서 발생</li></ul></li><li>로드 Load<ul><li>DBMS 고유 기능</li><li>Utility(Append, Delete/Insert, Update)이용</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;h3 id=&quot;etl-extraction-transformation-load-프로세스&quot;&gt;&lt;a class=&quot;markdow
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="ETL" scheme="https://hyeonukdev.github.io/tags/ETL/"/>
    
  </entry>
  
  <entry>
    <title>데이터전환 - 초기데이터구축</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%EC%B4%88%EA%B8%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%B6%95/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch14_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98%EA%B8%B0%EC%88%A0/%EC%B4%88%EA%B8%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%B6%95/</id>
    <published>2020-05-10T05:31:09.000Z</published>
    <updated>2020-05-10T05:31:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="데이터전환"><a class="markdownIt-Anchor" href="#데이터전환"></a> 데이터전환</h2><ul><li>작성된 데이터 변환 설계서의 <u>데이터 변환 논리</u>를 실행 가능한 <u>변환 프로그램으로 구현</u></li><li>구현된 변환 프로그램을 데이터 전환 개발환경에서 테스트하여 프로그램의 정상동작을 확인하고 성능을 최적화</li></ul><h3 id="초기-데이터-구축-개념"><a class="markdownIt-Anchor" href="#초기-데이터-구축-개념"></a> 초기 데이터 구축 개념</h3><ul><li>기존 운영 시스템의 이해를 바탕으로 <u>구축 범위를 명확</u>하게 하여 구축</li><li>초기 데이터 구축 시 발생할 수 있는 <u>예상 문제점을 도출하여 사전 점검 사항과 해결방안을 마련</u></li></ul><h3 id="초기-데이터-구축-절차"><a class="markdownIt-Anchor" href="#초기-데이터-구축-절차"></a> 초기 데이터 구축 절차</h3><h4 id="1-구축-전략-수집"><a class="markdownIt-Anchor" href="#1-구축-전략-수집"></a> 1. 구축 전략 수집</h4><ul><li>단시일에 대량의 데이터를 전환함에 있어 신속하고 안정적인 데이터 전환을 위하여 <u>체계적인 초기 데이터 구축 전략</u>을 수집</li></ul><h4 id="2-초기-데이터-구축-대상-파악"><a class="markdownIt-Anchor" href="#2-초기-데이터-구축-대상-파악"></a> 2. 초기 데이터 구축 대상 파악</h4><ul><li>초기 데이터 구축에 필요한 대상을 파악</li></ul><h4 id="3-초기-데이터-구축-범위"><a class="markdownIt-Anchor" href="#3-초기-데이터-구축-범위"></a> 3. 초기 데이터 구축 범위</h4><ul><li>업무 협의를 통해 초기 데이터 구축 범위를 확정</li></ul><h4 id="4-초기-데이터-구축-시-세부-고려사항"><a class="markdownIt-Anchor" href="#4-초기-데이터-구축-시-세부-고려사항"></a> 4. 초기 데이터 구축 시 세부 고려사항</h4><ul><li>데이터 이관 업무 중단을 최소화하고 안정성을 확보할 수 있는 방안 마련</li><li>데이터 이관 정합성 검증을 통해 오류방지 방안을 제시하여야하며, 오류 데이터에 대한 정비방안 마련</li><li>데이터 이관 완료 후 데이터의 전후 비교를 실시한 품질과 결과 제시</li><li>개인정보에 해당되는 데이터는 개인정보보호법과 관련 기준에서 정하는 기준에 따라 암호화하여 적용</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;데이터전환&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터전환&quot;&gt;&lt;/a&gt; 데이터전환&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;작성된 데이터 변환 설계서의 &lt;u&gt;데이터 변환 논리&lt;/u&gt;를 실행 가능한 &lt;u&gt;변환 프로그램으로 구현&lt;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="데이터전환" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%A0%84%ED%99%98/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="초기데이터구축" scheme="https://hyeonukdev.github.io/tags/%EC%B4%88%EA%B8%B0%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B5%AC%EC%B6%95/"/>
    
  </entry>
  
  <entry>
    <title>서버프로그램구현 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EA%B8%B0%EB%8A%A5/"/>
    <id>https://hyeonukdev.github.io/2020/05/10/Engineer_Information_Processing/ch15_%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%EB%B0%B0%EC%B9%98%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/%ED%95%B5%EC%8B%AC%EA%B8%B0%EB%8A%A5/</id>
    <published>2020-05-09T15:50:50.000Z</published>
    <updated>2020-05-09T15:50:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서버프로그램구현"><a class="markdownIt-Anchor" href="#서버프로그램구현"></a> 서버프로그램구현</h2><h3 id="1-배치-프로그램"><a class="markdownIt-Anchor" href="#1-배치-프로그램"></a> 1. 배치 프로그램</h3><ul><li>사용자의 상호 작용 없이 일련의 작업들을 작업 단위로 묶어 정기적으로 반복 수행하거나 정해진 규칙에 따라 일괄처리하는 것</li><li>일괄처리(Batch Processing)를 위해 주기적으로 발생하거나 반복적으로 발생하는 작업을 지원하는 도구</li><li>종류<ul><li>Spring Batch</li><li>Quartz</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;서버프로그램구현&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#서버프로그램구현&quot;&gt;&lt;/a&gt; 서버프로그램구현&lt;/h2&gt;
&lt;h3 id=&quot;1-배치-프로그램&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="서버프로그램구현" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%84%9C%EB%B2%84%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B5%AC%ED%98%84/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
</feed>
