<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello Engineering</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hyeonukdev.github.io/"/>
  <updated>2020-05-04T07:57:40.000Z</updated>
  <id>https://hyeonukdev.github.io/</id>
  
  <author>
    <name>Hyeonukdev</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>응용SW기초기술활용 - 운영체제</title>
    <link href="https://hyeonukdev.github.io/2020/05/04/Engineer_Information_Processing/ch17_%EC%9D%91%EC%9A%A9SW%EA%B8%B0%EC%B4%88%EA%B8%B0%EC%88%A0%ED%99%9C%EC%9A%A9/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EA%B8%B0%EC%B4%88%ED%99%9C%EC%9A%A9/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/"/>
    <id>https://hyeonukdev.github.io/2020/05/04/Engineer_Information_Processing/ch17_%EC%9D%91%EC%9A%A9SW%EA%B8%B0%EC%B4%88%EA%B8%B0%EC%88%A0%ED%99%9C%EC%9A%A9/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C%EA%B8%B0%EC%B4%88%ED%99%9C%EC%9A%A9/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</id>
    <published>2020-05-04T07:57:40.000Z</published>
    <updated>2020-05-04T07:57:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="응용sw기초기술활용"><a class="markdownIt-Anchor" href="#응용sw기초기술활용"></a> 응용SW기초기술활용</h2><ul><li>응용소프트웨어를 개발하기 위하여 <u>다양한 운영체제의 특징</u> 이해</li><li>CLI 및 GUI 환경에서 <u>운영체제의 기본 명령어</u>를 활용</li><li>운영체제에서 제공하는 <u>작업 우선순위 설정 방법</u>을 이용하여 애플리케이션의 작업 우선순위 조정</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>메모리 관리<ul><li>프로그램의 실행이 종료될 때까지 메모리를 가용한 상태로 유지 및 관리하는 것</li></ul></li><li>환경변수<ul><li>시스템 소프트웨어의 동작에 영향을 미치는 동적인 값들의 모임</li></ul></li></ul><h3 id="운영체제의-개념"><a class="markdownIt-Anchor" href="#운영체제의-개념"></a> 운영체제의 개념</h3><ul><li><u>컴퓨터 시스템의 자원들(CPU, 주기억장치, 보조기억장치, 파일 등)을 효율적으로 관리</u>하며, 사용자가 컴퓨터를 편리하고 효과적으로 사용할 수 있도록 <u>인터페이스를 제공하는 시스템 소프트웨어</u></li></ul><h3 id="운영체제의-역할"><a class="markdownIt-Anchor" href="#운영체제의-역할"></a> 운영체제의 역할</h3><ul><li>사용자와 시스템 간의 편리한 <u>인터페이스 제공</u></li><li>시스템의 각종 <u>하드웨어와 네트워크를 관리하고 제어</u></li><li>자원을 효율적으로 관리하기 위해 <u>자원의 스케쥴링 기능 제공</u></li><li><u>데이터를 관리하고 데이터 및 자원의 공유</u> 기능 제공</li><li>입출력에 대한 보조 기능을 제공</li><li><u>시스템의 오류를 검사하고 복구</u></li><li><b>원시프로그램을 목적프로그램으로 변환하는 것은 번역 프로그램임</b></li></ul><h3 id="운영체제의-목적"><a class="markdownIt-Anchor" href="#운영체제의-목적"></a> 운영체제의 목적</h3><ul><li>목적<ul><li>컴퓨터 시스템의 처리 능력 향상</li><li>사용 가능도 향상</li><li>반환 시간 단축</li></ul></li><li>운영체제 성능 평가 기준<ul><li><u>처리 능력</u></li><li><u>반환 시간</u></li><li><u>사용 가능도</u></li><li><u>신뢰도</u></li></ul></li></ul><h3 id="운영체제의-종류"><a class="markdownIt-Anchor" href="#운영체제의-종류"></a> 운영체제의 종류</h3><h4 id="1-windows"><a class="markdownIt-Anchor" href="#1-windows"></a> 1. Windows</h4><ul><li>마이크로소프트사가 개발한 운영체제</li><li>특징<ul><li>GUI<ul><li>키보드로 명령어를 직접 수행하지 않고 마우스로 아이콘이나 메뉴를 선택하여 모든 작업을 수행</li></ul></li><li>선점형 멀티태스킹<ul><li>동시에 여러 개의 프로그램을 실행하는 멀티태스킹을 하면서 운영체제가 각 작업의 CPU 이용 시간을 제어하여 응용 프로그램 시행 중 문제가 발생하면 해당 프로그램을 강제 종료시키고 모든 시스템 자원을 반환하는 방식</li></ul></li><li>PnP; Plug and Play<ul><li>컴퓨터 시스템에 프린터나 사운드 카드 등의 하드웨어를 설치했을 때 해당 하드웨어를 사용하는 데 필요한 시스템 환경을 운영체제가 자동으로 구성해주는 기능</li></ul></li><li>OLE; Object Linking Embedding<ul><li>다른 응용 프로그램에서 작성된 문자나 그림 등의 개체를 현재 작성 중인 문서에 자유롭게 연결하거나 삽입하여 편집할 수 있게 하는 기능</li></ul></li></ul></li></ul><h4 id="2-unix"><a class="markdownIt-Anchor" href="#2-unix"></a> 2. UNIX</h4><ul><li><p>AT&amp;T 벨 연구소, MIT, General Electric이 공동 개발한 운영체제</p></li><li><p>특징</p><ul><li>C언어로 작성되어 <u>이식성</u> 높음</li><li>장치와 프로세스 간의 <u>호환성</u> 높음</li><li>시분할 시스템으로 설계된 <u>대화식 운영 체제</u></li><li>소스가 공개된 개방형 시스템</li><li><u>다중 사용자가 다중 작업</u>을 지원</li><li>많은 네트워킹 기능을 제공하므로 <u>통신망 관리용 운영체제</u>로 적합</li></ul></li><li><p>구성</p><ul><li><p>Kernel 커널</p><ul><li><u>프로세스 관리</u></li><li><u>기억장치 관리</u></li><li><u>입출력 관리</u></li><li><u>파일 관리</u></li><li>컴퓨터가 부팅될 때 주기억장치에 적재되어 상주하면서 실행</li></ul></li><li><p>Shell 쉘</p><ul><li><u>사용자의 명령을 인식하는 명령어 해석기</u></li><li><u>시스템과 사용자 간의 인터페이스</u></li><li>주기억장치에 상주하지 않고, 명령어가 포함된 파일 형태로 존재하며 보조 기억장치에서도 교체처리가 가능</li><li>한 프로세스의 출력이 다른 프로세스의 입력으로 사용되는 <u>단방향 통신인 파이프 라인 기능을 지원</u></li></ul></li></ul></li></ul><h4 id="3-linux"><a class="markdownIt-Anchor" href="#3-linux"></a> 3. LINUX</h4><ul><li>리누스 토발즈가 개발한 운영체제</li><li>특징<ul><li>프로그램 <u>소스 코드가 무료로 공개</u>되어 프로그래머가 원하는 기능 추가</li><li>다양한 플랫폼에 설치하여 사용 가능</li><li>재배포가 가능</li><li>UNIX와 완벽하게 호환</li></ul></li></ul><h4 id="4-macos"><a class="markdownIt-Anchor" href="#4-macos"></a> 4. MacOS</h4><ul><li>Apple에서 UNIX 기반으로 개발한 운영체제</li><li>특징<ul><li>아이맥과 맥북 등 애플 사 제품에만 사용이 가능</li><li>드라이버 설치 및 install 과정이 단순함</li></ul></li></ul><h4 id="5-ms-dos"><a class="markdownIt-Anchor" href="#5-ms-dos"></a> 5. MS-DOS</h4><ul><li>Windows 이전 운영체제, CLI</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;응용sw기초기술활용&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#응용sw기초기술활용&quot;&gt;&lt;/a&gt; 응용SW기초기술활용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;응용소프트웨어를 개발하기 위하여 &lt;u&gt;다양한 운영체제의 특징&lt;/u&gt; 이해&lt;/
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="응용SW기초기술활용" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/%EC%9D%91%EC%9A%A9SW%EA%B8%B0%EC%B4%88%EA%B8%B0%EC%88%A0%ED%99%9C%EC%9A%A9/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="운영체제" scheme="https://hyeonukdev.github.io/tags/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/"/>
    
  </entry>
  
  <entry>
    <title>name &#39;WordCloud&#39; is not defined</title>
    <link href="https://hyeonukdev.github.io/2020/05/04/Error/WordCloud/"/>
    <id>https://hyeonukdev.github.io/2020/05/04/Error/WordCloud/</id>
    <published>2020-05-04T06:35:25.000Z</published>
    <updated>2020-05-04T06:35:25.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>설치</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install wordcloud</span><br></pre></td></tr></table></figure><ul><li>import 하기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br></pre></td></tr></table></figure><p>참조 : <a href="https://lovit.github.io/nlp/2018/04/17/word_cloud/">https://lovit.github.io/nlp/2018/04/17/word_cloud/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;설치&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td cla
      
    
    </summary>
    
    
      <category term="Error해결" scheme="https://hyeonukdev.github.io/categories/Error%ED%95%B4%EA%B2%B0/"/>
    
    
      <category term="WordCloud" scheme="https://hyeonukdev.github.io/tags/WordCloud/"/>
    
  </entry>
  
  <entry>
    <title>챗봇만들기(3) - 데이터분석(2)</title>
    <link href="https://hyeonukdev.github.io/2020/05/04/NLG-anaconda/%EC%B1%97%EB%B4%87%EB%A7%8C%EB%93%A4%EA%B8%B0_3_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D_2/"/>
    <id>https://hyeonukdev.github.io/2020/05/04/NLG-anaconda/%EC%B1%97%EB%B4%87%EB%A7%8C%EB%93%A4%EA%B8%B0_3_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D_2/</id>
    <published>2020-05-04T06:00:19.000Z</published>
    <updated>2020-05-04T06:00:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="챗봇만들기3"><a class="markdownIt-Anchor" href="#챗봇만들기3"></a> 챗봇만들기(3)</h1><h2 id="데이터-분석2"><a class="markdownIt-Anchor" href="#데이터-분석2"></a> 데이터 분석(2)</h2><h3 id="질문-답변-각각에-대한-문장-길이-분포-분석"><a class="markdownIt-Anchor" href="#질문-답변-각각에-대한-문장-길이-분포-분석"></a> 질문, 답변 각각에 대한 문장 길이 분포 분석</h3><ul><li>형태소를 기준으로 길이 분석</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">query_sentences = list(data[<span class="string">'Q'</span>])</span><br><span class="line">answer_sentences = list(data[<span class="string">'A'</span>])</span><br><span class="line"></span><br><span class="line">query_morph_tokenized_sentences = [okt.morphs(s.replace(<span class="string">' '</span>, <span class="string">''</span>)) <span class="keyword">for</span> s <span class="keyword">in</span> query_sentences]</span><br><span class="line">query_sent_len_by_morph = [len(t) <span class="keyword">for</span> t <span class="keyword">in</span> query_morph_tokenized_sentences]</span><br><span class="line"></span><br><span class="line">answer_morph_tokenized_sentences = [okt.morphs(s.replace(<span class="string">' '</span>, <span class="string">''</span>)) <span class="keyword">for</span> s <span class="keyword">in</span> answer_sentences]</span><br><span class="line">answer_sent_len_by_morph = [len(t) <span class="keyword">for</span> t <span class="keyword">in</span> answer_morph_tokenized_sentences]</span><br></pre></td></tr></table></figure><ul><li>질문 열과 답변 열을 각각 리스트로 정의</li><li>KoNLpy의 Okt 형태소 분석기를 이용해 토크나이저 구분</li><li>구분된 데이터의 길이를 하나의 변수로 만듬</li></ul><h4 id="질문-응답-데이터-길이에-대한-히스토그램"><a class="markdownIt-Anchor" href="#질문-응답-데이터-길이에-대한-히스토그램"></a> 질문 응답 데이터 길이에 대한 히스토그램</h4><p><img src="/images/NLP/0504_04.png" alt="질문 응답 데이터 길이에 대한 히스토그램" /></p><ul><li>질문 문장 길이가 응답 문장 길이보다 상대적으로 짧음</li><li>y 값의 크기를 조정</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">5</span>))</span><br><span class="line">plt.hist(query_sent_len_by_morph, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], color=<span class="string">'g'</span>, label=<span class="string">'Query'</span>)</span><br><span class="line">plt.hist(answer_sent_len_by_morph, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], color=<span class="string">'r'</span>, alpha=<span class="number">0.5</span>, label=<span class="string">'Answer'</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.yscale(<span class="string">'log'</span>, nonposy=<span class="string">'clip'</span>)</span><br><span class="line">plt.title(<span class="string">'Query Length Log Histogram by Morph Token'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Query Length'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Number of Queries'</span>)</span><br></pre></td></tr></table></figure><ul><li><p>plt.yscale(‘log’, nonposy=‘clip’) 추가<br /><img src="/images/NLP/0504_05.png" alt="질문 응답 데이터 길이에 대한 히스토그램2" /></p></li><li><p>답변 데이터가 질문 데이터 보다 이상치 값이 많음</p></li><li><p>상대적으로 질문의 경우 평균 주변에 잘 분포</p></li></ul><h4 id="통곗값-확인하기"><a class="markdownIt-Anchor" href="#통곗값-확인하기"></a> 통곗값 확인하기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'형태소 최대길이: &#123;&#125;'</span>.format(np.max(query_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 최소길이: &#123;&#125;'</span>.format(np.min(query_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 평균길이: &#123;:.2f&#125;'</span>.format(np.mean(query_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 길이 표준편차: &#123;:.2f&#125;'</span>.format(np.std(query_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 중간길이: &#123;&#125;'</span>.format(np.median(query_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 1/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(query_sent_len_by_morph, <span class="number">25</span>)))</span><br><span class="line">print(<span class="string">'형태소 3/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(query_sent_len_by_morph, <span class="number">75</span>)))</span><br></pre></td></tr></table></figure><blockquote><p>형태소 최대길이: 20<br />형태소 최소길이: 1<br />형태소 평균길이: 4.95<br />형태소 길이 표준편차: 2.48<br />형태소 중간길이: 4.0<br />형태소 1/4 퍼센타일 길이: 3.0<br />형태소 3/4 퍼센타일 길이: 6.0</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'형태소 최대길이: &#123;&#125;'</span>.format(np.max(answer_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 최소길이: &#123;&#125;'</span>.format(np.min(answer_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 평균길이: &#123;:.2f&#125;'</span>.format(np.mean(answer_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 길이 표준편차: &#123;:.2f&#125;'</span>.format(np.std(answer_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 중간길이: &#123;&#125;'</span>.format(np.median(answer_sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 1/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(answer_sent_len_by_morph, <span class="number">25</span>)))</span><br><span class="line">print(<span class="string">'형태소 3/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(answer_sent_len_by_morph, <span class="number">75</span>)))</span><br></pre></td></tr></table></figure><blockquote><p>형태소 최대길이: 31<br />형태소 최소길이: 1<br />형태소 평균길이: 5.87<br />형태소 길이 표준편차: 2.55<br />형태소 중간길이: 5.0<br />형태소 1/4 퍼센타일 길이: 4.0<br />형태소 3/4 퍼센타일 길이: 7.0</p></blockquote><ul><li>최댓값의 경우 답변 데이터가 더 큼</li><li>평균의 경우 질문 데이터가 좀 더 작음</li></ul><h4 id="박스플롯그리기"><a class="markdownIt-Anchor" href="#박스플롯그리기"></a> 박스플롯그리기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">5</span>))</span><br><span class="line">plt.boxplot([query_sent_len_by_morph, answer_sent_len_by_morph], labels=[<span class="string">'Query'</span>, <span class="string">'Anser'</span>])</span><br></pre></td></tr></table></figure><p><img src="/images/NLP/0504_06.png" alt="질문 응답 데이터 길이에 대한 박스 플롯" /></p><ul><li>통계값과는 다소 다름</li><li>통계값 : 답변 데이터에 대한 평균 길이가 질문 데이터보다 길었음</li><li>박스플롯 : 질문 데이터가 더 큼<br />-&gt; <b>답변 데이터의 경우 길이가 긴 이상치 데이터가 많아서 평균값이 더욱 크게 측정됨</b></li><li>길이 값을 통해 모델에 적용될 문장의 최대 길이를 결정한다</li></ul><h3 id="데이터-어휘-빈도-분석"><a class="markdownIt-Anchor" href="#데이터-어휘-빈도-분석"></a> 데이터 어휘 빈도 분석</h3><ul><li>형태소 단위로 토크나이징한 데이터를 사용해 자주 사용하는 단어 파악</li><li>‘이’, ‘가’ 등의 조사보다는 의미상 중요한 명사, 형용사, 동사를 따로 모은 후 파악</li><li>KoNPy의 품사분류 POS-tagging 모듈</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">okt.pos(<span class="string">'나는학생입니다'</span>)</span><br><span class="line">okt.pos(<span class="string">'지금은5월여름입니다'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>[(‘나’, ‘Noun’), (‘는’, ‘Josa’), (‘학생’, ‘Noun’), (‘입니다’, ‘Adjective’)]<br />[(‘지금’, ‘Noun’), (‘은’, ‘Josa’), (‘5월’, ‘Number’), (‘여름입니다’, ‘Foreign’)]</p></blockquote><ul><li>문장에서 명사, 형용사, 동사를 제외한 단어를 모두 제거한 문자열 만들기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">query_NVA_token_sentences = list()</span><br><span class="line">answer_NVA_token_sentences = list()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> query_sentences:</span><br><span class="line">    <span class="keyword">for</span> token, tag <span class="keyword">in</span> okt.pos(s.replace(<span class="string">' '</span>, <span class="string">''</span>)):</span><br><span class="line">        <span class="keyword">if</span> tag == <span class="string">'Noun'</span> <span class="keyword">or</span> tag == <span class="string">'Verb'</span> <span class="keyword">or</span> tag == <span class="string">'Adjective'</span>:</span><br><span class="line">            query_NVA_token_sentences.append(token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> answer_sentences:</span><br><span class="line">    temp_token_bucket = list()</span><br><span class="line">    <span class="keyword">for</span> token, tag <span class="keyword">in</span> okt.pos(s.replace(<span class="string">' '</span>, <span class="string">''</span>)):</span><br><span class="line">        <span class="keyword">if</span> tag == <span class="string">'Noun'</span> <span class="keyword">or</span> tag == <span class="string">'Verb'</span> <span class="keyword">or</span> tag == <span class="string">'Adjective'</span>:</span><br><span class="line">            answer_NVA_token_sentences.append(token)</span><br><span class="line">            </span><br><span class="line">query_NVA_token_sentences = <span class="string">' '</span>.join(query_NVA_token_sentences)</span><br><span class="line">answer_NVA_token_sentences = <span class="string">' '</span>.join(answer_NVA_token_sentences)</span><br></pre></td></tr></table></figure><h4 id="워드클라우드-활용해-어휘-빈도-분석"><a class="markdownIt-Anchor" href="#워드클라우드-활용해-어휘-빈도-분석"></a> 워드클라우드 활용해 어휘 빈도 분석</h4><ul><li>NanumGothic.ttf 한글 폰트 설정</li><li>질문</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud</span><br><span class="line">query_wordcloud = WordCloud(font_path= DATA_IN_PATH + <span class="string">'NanumGothic.ttf'</span>).generate(query_NVA_token_sentences)</span><br><span class="line"></span><br><span class="line">plt.imshow(query_wordcloud, interpolation=<span class="string">'bilinear'</span>)</span><br><span class="line">plt.axis(<span class="string">'off'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/images/NLP/0504_07.png" alt="질문어휘빈도에 대한 워드클라우드" /></p><ul><li>답변</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">query_wordcloud = WordCloud(font_path= DATA_IN_PATH + <span class="string">'NanumGothic.ttf'</span>).generate(answer_NVA_token_sentences)</span><br><span class="line"></span><br><span class="line">plt.imshow(query_wordcloud, interpolation=<span class="string">'bilinear'</span>)</span><br><span class="line">plt.axis(<span class="string">'off'</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="/images/NLP/0504_08.png" alt="답변어휘빈도에 대한 워드클라우드" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;챗봇만들기3&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#챗봇만들기3&quot;&gt;&lt;/a&gt; 챗봇만들기(3)&lt;/h1&gt;
&lt;h2 id=&quot;데이터-분석2&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터-분석2&quot;
      
    
    </summary>
    
    
      <category term="자연어처리" scheme="https://hyeonukdev.github.io/categories/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/"/>
    
      <category term="ChatBot" scheme="https://hyeonukdev.github.io/categories/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/ChatBot/"/>
    
    
      <category term="자연어처리" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/"/>
    
      <category term="ChatBot" scheme="https://hyeonukdev.github.io/tags/ChatBot/"/>
    
  </entry>
  
  <entry>
    <title>No module named &#39;konlpy&#39;</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Error/konlpy/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Error/konlpy/</id>
    <published>2020-05-03T14:29:26.000Z</published>
    <updated>2020-05-03T14:29:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="윈도우에-설치"><a class="markdownIt-Anchor" href="#윈도우에-설치"></a> 윈도우에 설치</h1><ol><li>ava 1.7+이 설치되어 있나요?</li><li>JAVA_HOME 설정하기</li><li>JPype1 (&gt;=0.5.7)을 다운로드 받고 설치. 다운 받은 .whl 파일을 설치하기 위해서는 pip 을 업그레이드 해야할 수 있습니다.</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; pip install --upgrade pip</span><br><span class="line">&gt; pip install JPype1-<span class="number">0</span>.<span class="number">5</span>.<span class="number">7</span>-cp27-none-win_amd64.whl</span><br><span class="line">&gt; pip install konlpy</span><br></pre></td></tr></table></figure><ul><li><p>참조 <a href="https://konlpy-ko.readthedocs.io/ko/v0.4.3/install/#id2">https://konlpy-ko.readthedocs.io/ko/v0.4.3/install/#id2</a></p></li><li><p>JPypel 받을 때</p><ul><li>cp27은 파이썬 버전</li><li>python -v 를 통해 본인 파이썬 버전확인 후 받기</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;윈도우에-설치&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#윈도우에-설치&quot;&gt;&lt;/a&gt; 윈도우에 설치&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;ava 1.7+이 설치되어 있나요?&lt;/li&gt;
&lt;li&gt;JAVA_HOME 설정하기&lt;/li&gt;
&lt;l
      
    
    </summary>
    
    
      <category term="Error해결" scheme="https://hyeonukdev.github.io/categories/Error%ED%95%B4%EA%B2%B0/"/>
    
    
      <category term="konlpy" scheme="https://hyeonukdev.github.io/tags/konlpy/"/>
    
  </entry>
  
  <entry>
    <title>챗봇만들기(2) - 데이터분석(1)</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/NLG-anaconda/%EC%B1%97%EB%B4%87%EB%A7%8C%EB%93%A4%EA%B8%B0_2_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D_1/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/NLG-anaconda/%EC%B1%97%EB%B4%87%EB%A7%8C%EB%93%A4%EA%B8%B0_2_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D_1/</id>
    <published>2020-05-03T13:57:30.000Z</published>
    <updated>2020-05-03T13:57:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="챗봇만들기2"><a class="markdownIt-Anchor" href="#챗봇만들기2"></a> 챗봇만들기(2)</h1><h2 id="데이터-분석1"><a class="markdownIt-Anchor" href="#데이터-분석1"></a> 데이터 분석(1)</h2><ul><li>데이터 분석</li><li>데이터 전처리와 모델 생성</li></ul><h3 id="데이터-불러오기"><a class="markdownIt-Anchor" href="#데이터-불러오기"></a> 데이터 불러오기</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">DATA_IN_PATH = <span class="string">'./data_in/'</span></span><br><span class="line"></span><br><span class="line">data = pd.read_csv(DATA_IN_PATH + <span class="string">'ChatBotData.csv'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">print(data.head())</span><br></pre></td></tr></table></figure><table><thead><tr><th>Q</th><th>A</th><th>label</th></tr></thead><tbody><tr><td>0</td><td>12시 땡!</td><td>하루가 또 가네요.</td></tr><tr><td>1</td><td>1지망 학교 떨어졌어</td><td>위로해 드립니다.</td></tr><tr><td>2</td><td>3박4일 놀러가고 싶다</td><td>여행은 언제나 좋죠.</td></tr><tr><td>3</td><td>3박4일 정도 놀러가고 싶다</td><td>여행은 언제나 좋죠.</td></tr><tr><td>4</td><td>PPL 심하네</td><td>눈살이 찌푸려지죠.</td></tr></tbody></table><h4 id="문장-전체에-대한-분석"><a class="markdownIt-Anchor" href="#문장-전체에-대한-분석"></a> 문장 전체에 대한 분석</h4><ol><li>데이터 길이를 분석</li></ol><ul><li>질문과 답변 모두 길이에 대해 분석하기 위해 두 데이터를 하나의 리스트로 만들기</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentences = list(data[<span class="string">'Q'</span>]) + list(data[<span class="string">'A'</span>])</span><br></pre></td></tr></table></figure><ul><li>세 가지 기준으로 분석을 진행<ul><li>문자 단위의 길이 분석 (음절)<ul><li>문자 하나하나를 생각하자</li></ul></li><li>단어 단위의 길이 분석 (어절)<ul><li>띄어쓰기 단위로 생각하자</li></ul></li><li>형태소 단위의 길이 분석<ul><li>어절과 음절 사이로 생각하자</li><li>최소 단위를 의미<br />ex) 나는 학생이다.</li></ul></li><li>음절 : “나”, “는”, “학”, “생”, “이”, “다”</li><li>어절 : “나는”, “학생이다”</li><li>형태소 : “나”, “는”, 학생&quot;, “이다”</li></ul></li></ul><h4 id="토크나이징"><a class="markdownIt-Anchor" href="#토크나이징"></a> 토크나이징</h4><ul><li>KoNLPy 사용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tokenized_sentences = [s.split() <span class="keyword">for</span> s <span class="keyword">in</span> sentences]</span><br><span class="line">sent_len_by_token = [len(t) <span class="keyword">for</span> t <span class="keyword">in</span> tokenized_sentences]</span><br><span class="line">sent_len_by_eumjeol = [len(s.replace(<span class="string">' '</span>, <span class="string">''</span>)) <span class="keyword">for</span> s <span class="keyword">in</span> sentences]</span><br><span class="line"></span><br><span class="line">okt = Okt()</span><br><span class="line"></span><br><span class="line">morph_tokenized_sentences = [okt.morphs(s.replace(<span class="string">' '</span>, <span class="string">''</span>)) <span class="keyword">for</span> s <span class="keyword">in</span> sentences]</span><br><span class="line">sent_len_by_morph = [len(t) <span class="keyword">for</span> t <span class="keyword">in</span> morph_tokenized_sentences]</span><br></pre></td></tr></table></figure><ul><li>띄어쓰기 기준으로 문장 분류 -&gt; 어절의 길이 측정</li><li>위 값을 붙이기 -&gt; 음절의 길이</li><li>KoNLPy에 Okt 형태소 분석기 사용해서 나눈 후 길이 측정</li></ul><h4 id="그래프그리기"><a class="markdownIt-Anchor" href="#그래프그리기"></a> 그래프그리기</h4><ul><li>matplot사용</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">5</span>))</span><br><span class="line">plt.hist(sent_len_by_token, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], alpha=<span class="number">0.5</span>, color= <span class="string">'r'</span>, label=<span class="string">'eojeol'</span>)</span><br><span class="line">plt.hist(sent_len_by_morph, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], alpha=<span class="number">0.5</span>, color=<span class="string">'g'</span>, label=<span class="string">'morph'</span>)</span><br><span class="line">plt.hist(sent_len_by_eumjeol, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], alpha=<span class="number">0.5</span>, color=<span class="string">'b'</span>, label=<span class="string">'eumjeol'</span>)</span><br><span class="line">plt.title(<span class="string">'Sentence Length Histogram'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Sentence Length'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Number of Sentences'</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/NLP/0504_01.png" alt="데이터 길이에 대한 히스토그램" /></p><ul><li>빨간색 : 어절 단위 히스토그램</li><li>초록색 : 형태소</li><li>파란색 : 음절</li></ul><p>그래프 해석</p><ul><li>어절이 가장 낮은 길이 그다음 형태소, 가장 긴 길이는 음절</li><li>히스토그램을 통해 각 길이가 어느 쪽으로 치우쳐 있는지 혹은 각 데이터에 이상치는 없는지 확인하자</li><li>이 그래프는 직관적으로는 어렵다<ul><li>y값 분포가 다르기 때문</li><li>수정을 해보자</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">5</span>))</span><br><span class="line">plt.hist(sent_len_by_token, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], alpha=<span class="number">0.5</span>, color= <span class="string">'r'</span>, label=<span class="string">'eojeol'</span>)</span><br><span class="line">plt.hist(sent_len_by_morph, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], alpha=<span class="number">0.5</span>, color=<span class="string">'g'</span>, label=<span class="string">'morph'</span>)</span><br><span class="line">plt.hist(sent_len_by_eumjeol, bins=<span class="number">50</span>, range=[<span class="number">0</span>,<span class="number">50</span>], alpha=<span class="number">0.5</span>, color=<span class="string">'b'</span>, label=<span class="string">'eumjeol'</span>)</span><br><span class="line">plt.yscale(<span class="string">'log'</span>)</span><br><span class="line">plt.title(<span class="string">'Sentence Length Histogram by Eojeol Token'</span>)</span><br><span class="line">plt.xlabel(<span class="string">'Sentence Length'</span>)</span><br><span class="line">plt.ylabel(<span class="string">'Number of Sentences'</span>)</span><br></pre></td></tr></table></figure><ul><li>plt.yscale(‘log’) 사용<ul><li>각 그래프가 커지는 y값의 스케일을 조정함으로써 차이가 큰 데이터에서도 함께 비교 가능<br /><img src="/images/NLP/0504_02.png" alt="데이터 길이에 대한 히스토그램2" /></li></ul></li><li>꼬리부분의 분포가 보임</li><li>어절의 경우 길이가 20인 경우가 이상치 데이터로 존재</li><li>형태소는 30, 음절은 45정도 길이에 이상치가 존재</li><li>이러한 길이 분포에 대한 분석 내용을 바탕으로 입력 문장의 길이를 어떻게 설정할지 정의하면 됨</li></ul><h4 id="통계값출력"><a class="markdownIt-Anchor" href="#통계값출력"></a> 통계값출력</h4><ul><li>정확한 수치 확인을 위해 각 기준별 길이에 대한 여러가지 통곗값 비교</li></ul><h5 id="어절"><a class="markdownIt-Anchor" href="#어절"></a> 어절</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">print(<span class="string">'어절 최대길이: &#123;&#125;'</span>.format(np.max(sent_len_by_token)))</span><br><span class="line">print(<span class="string">'어절 최소길이: &#123;&#125;'</span>.format(np.min(sent_len_by_token)))</span><br><span class="line">print(<span class="string">'어절 평균길이: &#123;:.2f&#125;'</span>.format(np.mean(sent_len_by_token)))</span><br><span class="line">print(<span class="string">'어절 길이 표준편차: &#123;:.2f&#125;'</span>.format(np.std(sent_len_by_token)))</span><br><span class="line">print(<span class="string">'어절 중간길이: &#123;&#125;'</span>.format(np.median(sent_len_by_token)))</span><br><span class="line">print(<span class="string">'제 1 사분위 길이: &#123;&#125;'</span>.format(np.percentile(sent_len_by_token, <span class="number">25</span>)))</span><br><span class="line">print(<span class="string">'제 3 사분위 길이: &#123;&#125;'</span>.format(np.percentile(sent_len_by_token, <span class="number">75</span>)))</span><br></pre></td></tr></table></figure><blockquote><p>어절 최대길이: 21<br />어절 최소길이: 1<br />어절 평균길이: 3.64<br />어절 길이 표준편차: 1.74<br />어절 중간길이: 3.0<br />제 1 사분위 길이: 2.0<br />제 3 사분위 길이: 5.0</p></blockquote><h5 id="형태소"><a class="markdownIt-Anchor" href="#형태소"></a> 형태소</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'형태소 최대길이: &#123;&#125;'</span>.format(np.max(sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 최소길이: &#123;&#125;'</span>.format(np.min(sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 평균길이: &#123;:.2f&#125;'</span>.format(np.mean(sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 길이 표준편차: &#123;:.2f&#125;'</span>.format(np.std(sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 중간길이: &#123;&#125;'</span>.format(np.median(sent_len_by_morph)))</span><br><span class="line">print(<span class="string">'형태소 1/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(sent_len_by_morph, <span class="number">25</span>)))</span><br><span class="line">print(<span class="string">'형태소 3/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(sent_len_by_morph, <span class="number">75</span>)))</span><br></pre></td></tr></table></figure><blockquote><p>형태소 최대길이: 31<br />형태소 최소길이: 1<br />형태소 평균길이: 5.41<br />형태소 길이 표준편차: 2.56<br />형태소 중간길이: 5.0<br />형태소 1/4 퍼센타일 길이: 4.0<br />형태소 3/4 퍼센타일 길이: 7.0</p></blockquote><h5 id="음절"><a class="markdownIt-Anchor" href="#음절"></a> 음절</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'음절 최대길이: &#123;&#125;'</span>.format(np.max(sent_len_by_eumjeol)))</span><br><span class="line">print(<span class="string">'음절 최소길이: &#123;&#125;'</span>.format(np.min(sent_len_by_eumjeol)))</span><br><span class="line">print(<span class="string">'음절 평균길이: &#123;:.2f&#125;'</span>.format(np.mean(sent_len_by_eumjeol)))</span><br><span class="line">print(<span class="string">'음절 길이 표준편차: &#123;:.2f&#125;'</span>.format(np.std(sent_len_by_eumjeol)))</span><br><span class="line">print(<span class="string">'음절 중간길이: &#123;&#125;'</span>.format(np.median(sent_len_by_eumjeol)))</span><br><span class="line">print(<span class="string">'음절 1/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(sent_len_by_eumjeol, <span class="number">25</span>)))</span><br><span class="line">print(<span class="string">'음절 3/4 퍼센타일 길이: &#123;&#125;'</span>.format(np.percentile(sent_len_by_eumjeol, <span class="number">75</span>)))</span><br></pre></td></tr></table></figure><blockquote><p>음절 최대길이: 57<br />음절 최소길이: 1<br />음절 평균길이: 11.31<br />음절 길이 표준편차: 4.98<br />음절 중간길이: 10.0<br />음절 1/4 퍼센타일 길이: 8.0<br />음절 3/4 퍼센타일 길이: 14.0</p></blockquote><hr /><ul><li>전체 문자 수는 11개 정도의 평균값을 갖고 있음</li><li>띄어쓰기로 구분한 어절의 경우 3~4 정도의 평균</li><li>형태소로 분석시 6~7 정도의 평균</li></ul><h4 id="박스플롯그리기"><a class="markdownIt-Anchor" href="#박스플롯그리기"></a> 박스플롯그리기</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>, <span class="number">5</span>))</span><br><span class="line">plt.boxplot([sent_len_by_token, sent_len_by_morph, sent_len_by_eumjeol],</span><br><span class="line">            labels=[<span class="string">'Eojeol'</span>, <span class="string">'Morph'</span>, <span class="string">'Eumjeol'</span>], </span><br><span class="line">            showmeans=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/NLP/0504_03.png" alt="박스플롯" /></p><ul><li>꼬리가 긴 형태로 분포됨</li><li>5~15의 길이를 중심으로 분포를 이루고 있음</li><li>음절은 어절과 형태소에 비해 분포가 큼</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;챗봇만들기2&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#챗봇만들기2&quot;&gt;&lt;/a&gt; 챗봇만들기(2)&lt;/h1&gt;
&lt;h2 id=&quot;데이터-분석1&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#데이터-분석1&quot;
      
    
    </summary>
    
    
      <category term="자연어처리" scheme="https://hyeonukdev.github.io/categories/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/"/>
    
      <category term="ChatBot" scheme="https://hyeonukdev.github.io/categories/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/ChatBot/"/>
    
    
      <category term="자연어처리" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/"/>
    
      <category term="ChatBot" scheme="https://hyeonukdev.github.io/tags/ChatBot/"/>
    
  </entry>
  
  <entry>
    <title>챗봇만들기(1) - 데이터소개</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/NLG-anaconda/%EC%B1%97%EB%B4%87%EB%A7%8C%EB%93%A4%EA%B8%B0_1_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%86%8C%EA%B0%9C/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/NLG-anaconda/%EC%B1%97%EB%B4%87%EB%A7%8C%EB%93%A4%EA%B8%B0_1_%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%86%8C%EA%B0%9C/</id>
    <published>2020-05-03T13:51:51.000Z</published>
    <updated>2020-05-03T13:51:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="챗봇만들기1"><a class="markdownIt-Anchor" href="#챗봇만들기1"></a> 챗봇만들기(1)</h1><ul><li>딥러닝 모델(sequence to sequence)을 활용한 챗봇 만들기</li></ul><h2 id="데이터-소개"><a class="markdownIt-Anchor" href="#데이터-소개"></a> 데이터 소개</h2><table><thead><tr><th>분류</th><th>설명</th></tr></thead><tbody><tr><td>데이터 이름</td><td>Chatbot data</td></tr><tr><td>데이터 용도</td><td>한국어 챗봇 학습</td></tr><tr><td>데이터 권한</td><td>MIT 라이선스</td></tr><tr><td>데이터 출처</td><td><a href="http://github.com/songys/Chatbot_data">http://github.com/songys/Chatbot_data</a></td></tr></tbody></table><ul><li>총 11,876개의 데이터</li><li>데이터 설명<ul><li>질문과 대답</li><li>주제에 대한 라벨값<ul><li>0 : 일상 대화</li><li>1 : 긍정</li><li>2 : 부정</li></ul></li></ul></li></ul><p><img src="https://github.com/songys/Chatbot_data/raw/master/data.png" alt="한글챗봇데이터샘플" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;챗봇만들기1&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#챗봇만들기1&quot;&gt;&lt;/a&gt; 챗봇만들기(1)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;딥러닝 모델(sequence to sequence)을 활용한 챗봇 만들기&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
      <category term="자연어처리" scheme="https://hyeonukdev.github.io/categories/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/"/>
    
      <category term="ChatBot" scheme="https://hyeonukdev.github.io/categories/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/ChatBot/"/>
    
    
      <category term="자연어처리" scheme="https://hyeonukdev.github.io/tags/%EC%9E%90%EC%97%B0%EC%96%B4%EC%B2%98%EB%A6%AC/"/>
    
      <category term="ChatBot" scheme="https://hyeonukdev.github.io/tags/ChatBot/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-03T07:44:31.000Z</published>
    <updated>2020-05-03T07:44:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><h3 id="1-소프트웨어-개발-표준"><a class="markdownIt-Anchor" href="#1-소프트웨어-개발-표준"></a> 1. 소프트웨어 개발 표준</h3><ul><li><u>소프트웨어 개발 단계의 품질 관리</u>에 사용되는 국제 표준</li><li>ISO/IEC 12207<ul><li>국제 표준화 기구에서 제공하는 소프트웨어 생명주기 프로세스 표준</li><li>기본 생명 주기, 지원 생명 주기, 조직 생명 주기 프로세스</li></ul></li><li>CMMI<ul><li>소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도 평가 모델</li><li>성숙도 5단계<ul><li>초기, 관리, 정의, 정량적 관리, 최적화</li></ul></li></ul></li><li>SPICE<ul><li>소프트웨어 프로세스를 평가 및 개선하는 국제 표준</li><li>수행 능력 6단계<ul><li>불완전, 수행, 관리, 확립, 예측, 최적화</li></ul></li></ul></li></ul><h3 id="2-테일러링-기준"><a class="markdownIt-Anchor" href="#2-테일러링-기준"></a> 2. 테일러링 기준</h3><ul><li>소프트웨어 개발 방법론 테일러링은 <u>프로젝트 상황 및 특성에 맞도록 개발 방법론의 절차, 사용기법 등을 수정 및 보완</u>하는 작업</li><li>소프트웨어 개발 방법론 테일러링 고려사항<ul><li>내부적 기준 : 목표환경, 요구사항, 프로젝트 규모, 보유기술</li><li>외부적 기준 : 법적 제약사항, 표준 품질기준</li></ul></li><li>소프트웨어 개발 방법론 테일러링 기법<ul><li>프로젝트 규모와 복잡도, 프로젝트 구성원, 팀내 방법론 지원, 자동화에 따른 테일러링</li></ul></li></ul><h3 id="3-소프트웨어-개발-프레임워크"><a class="markdownIt-Anchor" href="#3-소프트웨어-개발-프레임워크"></a> 3. 소프트웨어 개발 프레임워크</h3><ul><li>소프트웨어 개발에 공통적으로 사용되는 구성 요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러 가지 기능들을 제공해 주는 반제품 형태의 소프트웨어 시스템</li><li>소프트웨어 개발 프레임워크<ul><li>스프링 프레임워크</li><li>전자정부 표준 프레임워크</li><li>스트럿츠 프레임워크</li><li>닷넷 프레임워크</li><li>앵귤러 JS</li><li>장고 프레임워크</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;h3 id=&quot;1-소프트웨어-개발-표준&quot;&gt;&lt;a class=&quot;markdownIt-A
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 소프트웨어 개발 프레임워크</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/</id>
    <published>2020-05-03T07:32:21.000Z</published>
    <updated>2020-05-03T07:32:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><h2 id="소프트웨어-개발-프레임워크"><a class="markdownIt-Anchor" href="#소프트웨어-개발-프레임워크"></a> 소프트웨어 개발 프레임워크</h2><h3 id="소프트웨어-개발-프레임워크의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-프레임워크의-개념"></a> 소프트웨어 개발 프레임워크의 개념</h3><ul><li>소프트웨어 개발에 공통적으로 사용되는 구성 요소와 아키텍처를 일반화하여 손쉽게 구현할 수 있도록 여러 가지 기능들을 제공해 주는 반제품 형태의 소프트웨어 시스템<ul><li>프레임워크<ul><li>사전적으로 뼈대, 골조를 의미하며 소프트웨어에서는 특정 기능을 수행하기 위해 필요한 클래스나 인터페이스 등을 모아둔 집합체</li></ul></li></ul></li><li>프레임워크의 주요 기능에는 예외 처리, 트랜잭션 처리, 메모리 공유, 데이터 소스 관리, 쿼리 서비스, 로깅 서비스, 인증 서비스 등</li></ul><h3 id="프레임워크-특징"><a class="markdownIt-Anchor" href="#프레임워크-특징"></a> 프레임워크 특징</h3><ul><li>특정 개념들의 <u>추상화</u>를 제공하는 <u>여러 클래스와 컴포넌트로 구성</u></li><li>추상적인 개념들이 문제를 해결하기 위해 같이 작업하는 방법 정의</li><li>컴포넌트들의 <u>재사용이 가능</u></li><li>높은 수준에서 패턴들을 조작</li></ul><h3 id="종류"><a class="markdownIt-Anchor" href="#종류"></a> 종류</h3><h4 id="1-스프링-프레임워크spring-framework"><a class="markdownIt-Anchor" href="#1-스프링-프레임워크spring-framework"></a> 1. 스프링 프레임워크(Spring Framework)</h4><ul><li><u>JAVA 플랫폼을 위한 오픈 소스 경량형 애플리케이션 프레임워크</u></li><li>J2EE에서 제공하는 대부분의 지능을 지원</li><li>DB처리를 위한 JDBC, iBatis, Hibernate, JPA 등 라이브러리와 연동 지원</li><li><u>전자정부 표준 프레임워크</u>의 기반이 되는 기술</li></ul><h4 id="2-전자정부-표준-프레임워크"><a class="markdownIt-Anchor" href="#2-전자정부-표준-프레임워크"></a> 2. 전자정부 표준 프레임워크</h4><ul><li>우리나라의 공공부분 정보화 사업 시 효율적인 <u>정보시스템 구축을 지원하기 위해 필요한 기능 및 아키텍처를 제공하는 프레임워크</u></li><li>개발 프레임워크의 표준 정립으로 응용 소프트웨어의 <u>표준화, 품질 및 재사용성의 향상을 목적</u>으로 함</li><li>오픈 소스 기반의 범용화가 되고 공개된 기술으 활용함으로써 <u>특정 업체의 종속성을 배제하고 사업별 공통 컴포넌트의 중복 개발 방지</u></li></ul><h4 id="3-스트럿츠-프레임워크-struts-framework"><a class="markdownIt-Anchor" href="#3-스트럿츠-프레임워크-struts-framework"></a> 3. 스트럿츠 프레임워크 STRUTS Framework</h4><ul><li>JAVA기반의 JSP만을 위한 프레임워크</li><li>다양한 운영체제에서 활용 가능</li><li>오픈소스이기 때문에 개발에 필요한 부분을 수정하여 사용</li><li>UI기반의 프레임워크</li></ul><h4 id="4-닷넷프레임워크net-framework"><a class="markdownIt-Anchor" href="#4-닷넷프레임워크net-framework"></a> 4. 닷넷프레임워크(.NET Framework)</h4><ul><li>Windows 프로그램 개발 및 실행 환경을 제공하는 프레임워크</li><li>Microsoft 사에서 통합 인터넷 전략을 위해 개발</li><li>코드 실행을 관리하는 CLR(Common Language Runtime)이라는 가상머신 상에서 작동</li><li>메모리 관리, 유형 및 메모리 안전성, 보안, 네트워크 작업 등 여러가지 서비스를 제공</li></ul><h4 id="5-앵귤러-jsangular-js"><a class="markdownIt-Anchor" href="#5-앵귤러-jsangular-js"></a> 5. 앵귤러 JS(Angular JS)</h4><ul><li>자바스크립트 기반의 프레임워크</li><li>앵귤러 JS의 데이터 모델은 단순 자바스크립트 객체로 재사용이 쉬운 정적인 UI컴포넌트로 구성</li><li>코드의 길이를 더욱 단순화</li><li>HTML, CSS 개발자와 자바스크립트 개발자를 명확하게 분리</li></ul><h4 id="6-장고-프레임워크django-framework"><a class="markdownIt-Anchor" href="#6-장고-프레임워크django-framework"></a> 6. 장고 프레임워크(Django Framework)</h4><ul><li>Python으로 작성된 오픈 소스 웹 애플리케이션 프레임워크</li><li>MVC(Model-View-Controller)패턴 기반 프레임워크</li><li>ORM(Object Relational Mapping)기능 지원</li><li>수윈 DB관리를 위해 프로젝트를 생성하면서 관리자 기능을 제공</li><li>쉬운 URL 파싱 기능 지원</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;h2 id=&quot;소프트웨어-개발-프레임워크&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="소프트웨어개발프레임워크" scheme="https://hyeonukdev.github.io/tags/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 테일러링 기준</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81%EA%B8%B0%EC%A4%80/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81%EA%B8%B0%EC%A4%80/</id>
    <published>2020-05-03T07:22:00.000Z</published>
    <updated>2020-05-03T07:22:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><h2 id="테일러링-기준"><a class="markdownIt-Anchor" href="#테일러링-기준"></a> 테일러링 기준</h2><h3 id="소프트웨어-개발-방법론-테일러링의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링의-개념"></a> 소프트웨어 개발 방법론 테일러링의 개념</h3><ul><li>소프트웨어 개발 방법론 테일러링은 <u>프로젝트 상황 및 특성에 맞도록 개발 방법론의 절차, 사용기법 등을 수정 및 보완</u>하는 작업</li></ul><h3 id="소프트웨어-개발-방법론-테일러링-수행절차"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링-수행절차"></a> 소프트웨어 개발 방법론 테일러링 수행절차</h3><ol><li>프로젝트 특징 정의</li><li>표준프로세스 선정 및 검증</li><li>상위 수준의 커스터마이징</li><li>세부 커스터마이징</li><li>테일러링 문서화</li></ol><h3 id="소프트웨어-개발-방법론-테일러링-고려사항"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링-고려사항"></a> 소프트웨어 개발 방법론 테일러링 고려사항</h3><ul><li>내부적 기준<ul><li>목표환경<ul><li>시스템의 개발 환경과 유형이 서로 다른 경우 테일러링 필요</li></ul></li><li>요구사항<ul><li>프로젝트의 생명 주기 활동에서 개발, 운영, 유지보수 등 프로젝트에서 우선적으로 고려할 요구사항이 서로 다른 경우 필요</li></ul></li><li>프로젝트 규모<ul><li>비용, 인력, 개발 기간 등 프로젝트 규모가 서로 다른 경우</li></ul></li><li>보유 기술<ul><li>프로세스, 개발 방법론, 산출물, 인력의 숙련도 등이 다른 경우</li></ul></li></ul></li><li>외부적 기준<ul><li>법적 제약사항<ul><li>프로젝트별로 적용될 IT Compliance가 서로 다른 경우<ul><li>IT Compliance<ul><li>IT분야에서 내/외 부적으로 반드시 지켜야 하는 법칙 규제사항이나 지침</li></ul></li></ul></li></ul></li><li>표준 품질기준<ul><li>금융, 제도, 의료 등 업종별 표준 품질 기준이 서로 다른 경우 테일러링이 필요</li></ul></li></ul></li></ul><h3 id="소프트웨어-개발-방법론-테일러링-기번"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-테일러링-기번"></a> 소프트웨어 개발 방법론 테일러링 기번</h3><ul><li>프로젝트 규모와 복잡도에 따른 테일러링<ul><li>프로젝트 규모를 프로젝트 기간, 작업범위, 참여 인원 등에 따라 대/중/소로 구분하고, 프로젝트 업무 난이도에 따라 복잡도를 상/중/하로 구분하는 기법</li></ul></li><li>프로젝트 구성원에 따른 테일러링<ul><li>프로젝트에 참여하는 구성원들의 기술적 숙련도와 방법론의 이해 정도를 확인하여 테일러링 수준을 결정하는 기법</li></ul></li><li>팀내 방법론 지원에 따른 테일러링<ul><li>프로젝트 수행 시 각 팀 별로 방법론 담당 인력을 배정하여 팀의 방법론 교육과 프로젝트 전체의 방법론 운영을 위한 의사소통을 담당하도록 인력을 구성하는 기법</li></ul></li><li>자동화에 따른 테일러링<ul><li>프로젝트 수행 시 작업 부하를 줄이기 위해 중간 단계에서의 산출물을 자동화 도구를 사용하여 산출할 수 있도록 지원하는 기법</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;h2 id=&quot;테일러링-기준&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="테일러링기준" scheme="https://hyeonukdev.github.io/tags/%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81%EA%B8%B0%EC%A4%80/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - SW 개발 표준</title>
    <link href="https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/SW%EA%B0%9C%EB%B0%9C%ED%91%9C%EC%A4%80/"/>
    <id>https://hyeonukdev.github.io/2020/05/03/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/SW%EA%B0%9C%EB%B0%9C%ED%91%9C%EC%A4%80/</id>
    <published>2020-05-03T06:52:04.000Z</published>
    <updated>2020-05-03T06:52:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론-테일러링"><a class="markdownIt-Anchor" href="#sw개발방법론-테일러링"></a> SW개발방법론 테일러링</h2><ul><li><u>응용 소프트웨어 개발</u>에 사용할 <b>표준</b>으로 활동 및 절차 수행에 필요한 기법과 표준, 산출물 표준 양식 및 작성 기법, 적용 도구를 정립</li><li><u>테일러링</u>된 적용 개발 방법론에 따른 작성 산출물 유형 확정</li><li><u>소프트웨어 개발 프레임워크</u>의 개념과 종류별 특징을 이해</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>Tailoring 테일러링<ul><li>‘재단, 양복업’ 으로 표준을 기반으로 실제 업무에서 여건에 맞게 수정/보완 하는 것</li></ul></li></ul><h3 id="sw-개발-표준의-개념"><a class="markdownIt-Anchor" href="#sw-개발-표준의-개념"></a> SW 개발 표준의 개념</h3><ul><li><u>소프트웨어 개발 단계의 품질 관리</u>에 사용되는 국제 표준</li><li>대표적인 국제표준<ul><li>ISO/IEC 12207</li><li>CMMI</li><li>SPICE</li></ul></li></ul><h3 id="종류"><a class="markdownIt-Anchor" href="#종류"></a> 종류</h3><h4 id="1-isoiec-12207"><a class="markdownIt-Anchor" href="#1-isoiec-12207"></a> 1. ISO/IEC 12207</h4><ul><li><u>ISO</u>; International Organization for Standardiztaion, <u>국제표준화기구</u>에서 소프트웨어 개발, 운영, 유지보수 등을 체계적으로 관리하기 위한 <u>소프트웨어 생명주기 프로세스 표준을 제공</u></li><li><u>소프트웨어와 관련된 조직과 사람</u>, 소프트웨어 획득자, 공급자, 개발자, 운영자, 유지보수자, 품질보증관리자, 사용자 등의 이해관계자들이 <u>각자의 입장에서 수행해야 할 일을 정의하고 지속적으로 개선시키기 위한 활동</u></li><li><b>기본 생명 주기 프로세스</b><ul><li>획득 프로세스</li><li>공급 프로세스</li><li>개발 프로세스</li><li>운영 프로세스</li><li>유지보수 프로세스</li></ul></li><li><b>지원 생명 주기 프로세스</b><ul><li>문서화 프로세스</li><li>품질보증 프로세스</li><li>형상관리 프로세스</li><li>검증 프로세스</li><li>확인 프로세스</li><li>문제해결 프로세스</li><li>활동 검토 프로세스</li><li>유지보수 프로세스</li></ul></li><li><b>조직 생명 주기 프로세스</b><ul><li>기반구조 프로세스</li><li>관리 프로세스</li><li>개선 프로세스</li><li>훈련 프로세스</li></ul></li></ul><h4 id="2-cmmi-capability-maturity-model-integration"><a class="markdownIt-Anchor" href="#2-cmmi-capability-maturity-model-integration"></a> 2. CMMI; Capability Maturity Model Integration</h4><ul><li>능력 성숙도 모델 통합</li><li><u>소프트웨어 개발 조직의 업무 능력 및 조직의 성숙도 평가 모델</u></li><li>CMMI 성숙도 5단계<table><thead><tr><th>단계</th><th>프로세스</th><th>특징</th></tr></thead><tbody><tr><td>초기</td><td>-</td><td>작업자 능력에 따라 성공 여부 결정</td></tr><tr><td>관리</td><td>규칙화된 프로세스</td><td>특정한 프로젝트 내의 프로세스 정의 및 수행</td></tr><tr><td>정의</td><td>표준화된 프로세스</td><td>조직의 표준 프로세스를 활용하여 업무 수행</td></tr><tr><td>정량적 관리</td><td>예측 가능한 프로세스</td><td>프로젝트를 정량적으로 관리 및 통제</td></tr><tr><td>최적화</td><td>지속적 개선 프로세스</td><td>프로세스 역량 향상을 위해 지속적인 프로세스 개선</td></tr></tbody></table></li></ul><h4 id="3-spice-software-process-improvement-and-capability-determination"><a class="markdownIt-Anchor" href="#3-spice-software-process-improvement-and-capability-determination"></a> 3. SPICE; Software Process Improvement and Capability dEtermination</h4><ul><li>소프트웨어 처리 개선 및 능력 평가 기준</li><li><u>소프트웨어 프로세스를 평가 및 개선하는 국제표준</u></li><li>ISO/IEC 15504</li><li>목적<ul><li>프로세스 개선을 위해 <u>개발 기관이 스스로 평가</u>하는 것</li><li>요구조건의 만족여부를 개발 조직이 스스로 평가하는 것</li><li>계약 체결을 위해 <u>수탁 기관의 프로세스를 평가</u>하는 것</li></ul></li><li>5개의 프로세스 범주와 40개의 세부 프로세스로 구성<ul><li>고객- 공급자 프로세스<ul><li>소프트웨어를 개발하여 고객에게 전달하는 것을 지원</li><li>소프트웨어의 정확한 운용 및 사용을 위한 프로세스로 구성</li><li>인수, 공급, 요구 도출, 운영</li><li>프로세스 수 : 10개</li></ul></li><li>공학 프로세스<ul><li>시스템과 소프트웨어 제품의 명세화, 구현, 유지보수하는 프로세스로 구성</li><li>개발, 소프트웨어 유지보수</li><li>프로세스 수 : 9개</li></ul></li><li>지원 프로세스<ul><li>소프트웨어 생명 주기에 다른 프로세스에 의해 이용되는 프로세스로 구성</li><li>문서화, 형상, 품질 보증, 검증, 확인, 리뷰, 감사, 품질문제해결</li><li>프로세스 수 : 8개</li></ul></li><li>관리 프로세스<ul><li>소프트웨어 생명 주기에서 프로젝트 관리자에 의해 사용되는 프로세스로 구성</li><li>관리, 프로젝트 관리, 품질 및 위험 관리</li><li>프로세스 수 : 4개</li></ul></li><li>조직 프로세스<ul><li>조직의 업무 목적 수립과 조직의 업무 목표 달성을 위한 프로세스로 구성</li><li>조직배치, 개선 활동 프로세스, 인력 관리, 기반 관리, 측정도구, 재사용</li><li>프로세스 수 : 9개</li></ul></li></ul></li><li>프로세스 수행 능력 6개<ul><li>불완전 Incomplete<ul><li>프로세스가 구현되지 않았거나 목적을 달성핮지 못한 단계</li></ul></li><li>수행 Performed<ul><li>프로세스가 수행되고 목적이 달성된 단계</li></ul></li><li>관리 Managed<ul><li>정의된 자원의 한도 내에서 그 프로세스가 작업 산출물을 인도하는 단계</li></ul></li><li>확립 Established<ul><li>소프트웨어 공학 원칙에 기반하여 정의된 프로세스가 수행되는 단계</li></ul></li><li>예측 Predictable<ul><li>프로세스가 목적 달성을 위해 통제되고, 양적인 측정을 통해 일관되게 수행되는 단계</li></ul></li><li>최적화 Optimizing<ul><li>프로세스 수행을 최적화하고, 지속적인 개선을 통해 업무 목적을 만족시키는 단계</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론-테일러링&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론-테일러링&quot;&gt;&lt;/a&gt; SW개발방법론 테일러링&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;응용 소프트웨어 개발&lt;/u&gt;에 사용할 &lt;b&gt;표준&lt;/b&gt;으로 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론테일러링" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%ED%85%8C%EC%9D%BC%EB%9F%AC%EB%A7%81/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발표준" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%ED%91%9C%EC%A4%80/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-02T08:50:17.000Z</published>
    <updated>2020-05-02T08:50:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="1-소프트웨어-생명주기-모델"><a class="markdownIt-Anchor" href="#1-소프트웨어-생명주기-모델"></a> 1. 소프트웨어 생명주기 모델</h3><ul><li>소프트웨어를 어떻게 <u>개발</u>할 것인가에 대한 추상적 표현으로 <u>순차적 또는 병렬적 단계</u>로 나눈 것</li><li>소프트웨어 개발 생명주기<ul><li>타당성검토 -&gt; 분석 -&gt; 설계 -&gt; 개발 -&gt; 테스트 -&gt; 운영 -&gt; 유지보수 -&gt; 폐기</li></ul></li><li>소프트웨어 생명주기 모델 종류<ul><li>폭포수 모델</li><li>프로토타입 모델</li><li>나선형 모델</li><li>애자일 모델</li></ul></li></ul><h3 id="2-소프트웨어-개발-방법론"><a class="markdownIt-Anchor" href="#2-소프트웨어-개발-방법론"></a> 2. 소프트웨어 개발 방법론</h3><ul><li><u>소프트웨어 개발, 유지보수</u> 등에 필요한 여러 가지 일들의 수행 방법과 이러한 일들을 효율적으로 수행하려는 과정에서 필요한 <u>각종 기법 및 도구를 체계적으로 정리하여 표준화</u>한 것</li><li>개발 방법론의 종류<ul><li>구조적 방법론</li><li>정보공학 방법론</li><li>객체지향 방법론</li><li>컴포넌트 기반 방법론</li><li>애자일 방법론</li><li>제품 계열 방법론</li></ul></li></ul><h3 id="3-요구공학-방법론"><a class="markdownIt-Anchor" href="#3-요구공학-방법론"></a> 3. 요구공학 방법론</h3><ul><li><u>요구사항의 지속적인 중요성 증대</u>와 <u>채계적인 관리</u>의 필요성이 대두되어 시스템의 요구사항을 <u>정의</u>하고, <u>문서화</u>하고, <u>관리</u>하는 프로세스</li><li>요구공학 프로세스<ul><li>도출</li><li>분석</li><li>명세</li><li>확인/검증</li></ul></li></ul><h3 id="4-비용산정-모델"><a class="markdownIt-Anchor" href="#4-비용산정-모델"></a> 4. 비용산정 모델</h3><ul><li>소프트웨어의 <u>개발 규모를 소요되는 인원, 자원, 기간 등으로 확인</u>하여 실행 가능한 계획을 수립하기 위해 <u>필요한 비용을 예측</u>하는 과학적이고 합리적인 활동</li><li>산정기법 종류<ul><li>하향식 산정기법<ul><li>전문가 감정 기법</li><li>델파이 기법</li></ul></li><li>상향식 산정기법<ul><li>LOC 기법</li><li>Effort Per Task 기법</li></ul></li><li>수학적 산정기법<ul><li>COCOMO 모형</li><li>Putnam 모형</li><li>FP 모형</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;1-소프트웨어-생명주기-모델&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 비용 산정 모델</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95%EB%AA%A8%EB%8D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95%EB%AA%A8%EB%8D%B8/</id>
    <published>2020-05-02T08:11:56.000Z</published>
    <updated>2020-05-02T08:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="소프트웨어-비용-산정의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-비용-산정의-개념"></a> 소프트웨어 비용 산정의 개념</h3><ul><li>소프트웨어의 <u>개발 규모를 소요되는 인원, 자원, 기간 등으로 확인</u>하여 실행 가능한 계획을 수립하기 위해 <u>필요한 비용을 예측</u>하는 과학적이고 합리적인 활동</li><li>비용산정을 통해 발주자는 소프트웨어의 합리적인 가격을 확인할 수 있고 개발자는 개발에 필요한 <u>정당한 비용</u> 요구 가능</li><li>산정기법 종류<ul><li>하향식 산정기법</li><li>상향식 산정기법</li></ul></li></ul><h3 id="소프트웨어-비용-결정-요소"><a class="markdownIt-Anchor" href="#소프트웨어-비용-결정-요소"></a> 소프트웨어 비용 결정 요소</h3><ul><li>프로젝트 요소<ul><li>제품 복잡도</li><li>시스템 크기</li><li>요구되는 신뢰도<ul><li>일정기간 내 주어진 조건하에서 프로그램이 필요한 기능을 수행하는 척도</li></ul></li></ul></li><li>자원 요소<ul><li>인적자원</li><li>하드웨어 / 소프트웨어 자원</li></ul></li><li>생산성 요소<ul><li>개발자 능력<ul><li>개발자 전문지식과 경험, 이해도, 창의력</li></ul></li><li>개발 기간</li></ul></li></ul><h3 id="산정기법의-종류"><a class="markdownIt-Anchor" href="#산정기법의-종류"></a> 산정기법의 종류</h3><h4 id="1-하향식-산정기법"><a class="markdownIt-Anchor" href="#1-하향식-산정기법"></a> 1. 하향식 산정기법</h4><ul><li><u>과거의 유사 경험을 바탕</u>으로 회의를 통해 산정하는 <u>비과학적인 기법</u></li><li>종류<ul><li>전문가 감정 기법<ul><li>조직 내 경험이 있는 2명 이상의 전문가에게 비용 산정을 의뢰하는 산정기법으로 개인적이고 주관적</li></ul></li><li>델파이 기법<ul><li>전문가들의 편견이나 분위기에 지배되지 않도록 한 명의 조정자와 여러 전문가의 의견을 종합하여 비용을 산정</li></ul></li></ul></li></ul><h4 id="2-상향식-산정기법"><a class="markdownIt-Anchor" href="#2-상향식-산정기법"></a> 2. 상향식 산정기법</h4><ul><li><u>세부적인 작업 단위별로 비용을 산정한 후 합산</u></li><li>LOC 기법 : Line Of Code<ul><li>각 기능의 원시 코드 라인 수의 비관치, 낙관치, 기대치를 측정하여 예측치 구함</li><li>공식<ul><li>노력 = 개발기간 x 투입인원<br />= LOC/1인당 월평균 코드 라인 수</li><li>개발 비용 = 노력 x 1인당 월평균 인건비</li><li>생산성 = LOC/노력</li></ul></li></ul></li><li>Effort Per Task 기법<ul><li>각 기능을 구현시키는데 필요한 노력을 생명 주기의 각 단계별로 선정하며, LOC보다 더 정확함</li></ul></li></ul><h4 id="3-수학식-산정기법"><a class="markdownIt-Anchor" href="#3-수학식-산정기법"></a> 3. 수학식 산정기법</h4><ul><li><u>경험적 추정 기법 또는 실험적 추정 기법</u>, 개발 비용 산정의 자동화가 목표</li><li>비용을 자동으로 산정하기 위해서 사용되는 공식은 과거 유사한 프로젝트를 기반으로 <u>경험적으로 유도된 것</u></li><li>수학적 산정기법 종류<ul><li>COCOMO 모형</li><li>Putnam 모형</li><li>기능 점수 FP : Function Point</li></ul></li></ul><h5 id="1-cocomo-constructive-cost-model-모형"><a class="markdownIt-Anchor" href="#1-cocomo-constructive-cost-model-모형"></a> 1. COCOMO; COnstructive COst MOdel 모형</h5><ul><li>보헴이 제안한 것으로 원시 프로그램의 규모인 LOC(원시 코드 라인수)에 의한 비용 산정 기법</li><li><u>규모와, 소프트웨어 종류에 따라 조직형, 반분리형, 내장형으로 분류</u><ul><li>Organic Model 조직형<ul><li>5만라인의 소프트웨어로 사무처리용, 업무용, 과학용 응용 소프트웨어에 적합</li><li>노력(MM) = 2.4 X (KDSI)^1.05</li><li>개발기간(TDEV) = 2.5 X (MM)^0.38</li></ul></li><li>Semi-Detached Model 반분리형<ul><li>조직형과 내장형의 중간형</li><li>트랜잭션 처리시스템, 운영체제, DBMS등 30만 라인 이하에 적합</li></ul></li><li>Embedded Model 내장형<ul><li>초대형 규모로 30만 라인 이상</li><li>MM = 3.6 X (KDSI)^1.20</li><li>TDEV = 2.5 X (MM)^0.32</li></ul></li><li>KSDI : Kilo Delivered Source Intruction<ul><li>전체 라인수를 1,000 단위로 묶은 것</li></ul></li></ul></li></ul><h4 id="2-putnam-모형"><a class="markdownIt-Anchor" href="#2-putnam-모형"></a> 2. Putnam 모형</h4><ul><li>소프트웨어 생명 주기의 전 과정 동안에 사용될 <u>노력의 분포를 가정</u>해주는 모형</li><li>시간에 따른 함수로 표현되는 Rayleigh-Norden 곡선의 노력 분포도를 기초로함</li><li><img src="https://leadinganswers.typepad.com/leading_answers/images/pnr_1.jpg" alt="Rayleigh-Norden곡선" /></li><li><u>대형 프로젝트의 노력 분포 산정에 이용되는 기법</u></li><li>개발 기간이 늘어날수록 프로젝트 적용 인원의 노력이 감소함</li><li><img src="https://img1.daumcdn.net/thumb/R720x0.q80/?scode=mtistory2&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F137757344CB3349EB2828A" alt="개발 노력" /></li></ul><h4 id="3-기능-점수-fp-모형"><a class="markdownIt-Anchor" href="#3-기능-점수-fp-모형"></a> 3. 기능 점수 FP 모형</h4><ul><li>알브레히트가 제안한 것으로, 소프트웨어 기능을 증대 시키는 요인(<u>입력, 출력, 질의, 파일, 인터페이스의 개수</u>)별로 <u>단순, 보통, 복잡 가중치 부여</u></li><li>요인별 가중치를 합산하여 총 기능 점수를 산출하며 총 기능 점수와 영향도를 이용하여 기능 점수를 구한 후 이를 이용해서 비용을 산정하는 기법</li><li>기능점수 = 총 기능 점수 x [0.65 + (0.1 x 총 영향도)]</li></ul><h3 id="자동화-추정-도구"><a class="markdownIt-Anchor" href="#자동화-추정-도구"></a> 자동화 추정 도구</h3><ul><li>비용 산정의 자동화를 위해 개발된 도구로는 SLIM 과 ESTIMACS가 있음</li><li>SLIM<ul><li>Payleigh-Norden 곡선과 Putnam 예측 모델을 기초로 하여 개발된 자동화 추정 도구</li></ul></li><li>ESTIMACS<ul><li>다양한 프로젝트와 개인별 요소를 수용하도록 FP모형을 기초로 하여 개발된 자옹화 추정 도구</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-비용-산정의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="비용산정모델" scheme="https://hyeonukdev.github.io/tags/%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95%EB%AA%A8%EB%8D%B8/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - 요구공학 방법론</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99%EB%B0%A9%EB%B2%95%EB%A1%A0/</id>
    <published>2020-05-02T07:52:54.000Z</published>
    <updated>2020-05-02T07:52:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="요구공학의-개념"><a class="markdownIt-Anchor" href="#요구공학의-개념"></a> 요구공학의 개념</h3><ul><li>시스템의 요구사항을 <u>정의</u>하고, <u>문서화</u>하고, <u>관리</u>하는 프로세스</li><li><u>요구사항의 지속적인 중요성 증대</u></li><li>요구사항에 관한 <u>체계적인 관리</u>의 필요성 대두</li></ul><h3 id="요구공학의-목적"><a class="markdownIt-Anchor" href="#요구공학의-목적"></a> 요구공학의 목적</h3><ul><li><u>이해관계자 사이에 효과적인 의사소통 수단을 제공</u>하고 요구사항에 대한 <u>공통 이해를 설정</u></li><li>요구사항 손실 방지 및 에러 감지로 불필요한 비용을 절감하고 요구사항 변경 추적을 가능하게 함</li></ul><h3 id="요구공학-프로세스"><a class="markdownIt-Anchor" href="#요구공학-프로세스"></a> 요구공학 프로세스</h3><p><img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F234CEB34588B401809" alt="요구공학프로세스" /></p><ul><li><b>기능</b>은 <b>없음</b></li></ul><h4 id="1-requirement-elicitation-요구사항-도출"><a class="markdownIt-Anchor" href="#1-requirement-elicitation-요구사항-도출"></a> 1. Requirement Elicitation 요구사항 도출</h4><ul><li>소프트웨어 가 해결해야할 <u>문제를 이해하고 요구사항이 어디에 있고, 어떻게 수집할 것</u>인가와 관련</li><li>활용기법<ul><li>인터뷰</li><li>시나리오</li><li>작업분석</li><li>BRP : Business Process Reengineering</li><li>RFP : Request for Proposla</li><li>벤치마킹</li></ul></li></ul><h4 id="2-requirement-aanlysis-요구사항-분석"><a class="markdownIt-Anchor" href="#2-requirement-aanlysis-요구사항-분석"></a> 2. Requirement Aanlysis  요구사항 분석</h4><ul><li><u>요구사항들 간의 상충을 해결하고, 소프트웨어의 범위를 파악하면 소프트웨어가 환경과 어떻게 상호작용하는지 이해</u></li><li>활용기법<ul><li>구조적 분석<ul><li>DFD : Data Flow Diagram</li><li>Data Dictionary</li><li>ERD : Entity Relationship Diagram</li></ul></li><li>Use Case 기반 분석<ul><li>UML</li><li>모델링</li></ul></li></ul></li></ul><h4 id="3-requirement-specification-요구사항-명세"><a class="markdownIt-Anchor" href="#3-requirement-specification-요구사항-명세"></a> 3. Requirement Specification 요구사항 명세</h4><ul><li>체계적으로 검토, 평가, 승인될 수 있는 <u>문서 작성</u></li><li><u>시스템 정의, 시스템 요구사항, 소프트웨어 요구사항 작성</u></li><li>활용기법<ul><li>ER 모델링</li><li>FSM : Finite State Machine, 유한 상태 기계</li><li>SADT : Structered Analysis and Design Technique, 구조화 해석 설계 기법</li></ul></li></ul><h4 id="4-validationverification-요구사항-확인검증"><a class="markdownIt-Anchor" href="#4-validationverification-요구사항-확인검증"></a> 4. Validation/Verification 요구사항 확인/검증</h4><ul><li>분석가가 <u>요구사항을 이해 했는지 확인(Validation)</u></li><li>요구사항 문서가 <u>일관성 있고 완전한지 검증(Verification)</u><ul><li>베이스라인으로 설정하는 활동</li></ul></li><li>이해관계자들이 문서 검토 및 형상 관리 수행</li><li>리소스가 요구사항에 할당되기 전에 문제 파악을 위한 검증 수행</li><li>활용기법<ul><li>검토</li><li>프로토타이핑</li><li>모델 검증</li><li>인수테스트</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;요구공학의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="요구공학방법론" scheme="https://hyeonukdev.github.io/tags/%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - SW개발 방법론</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/</id>
    <published>2020-05-02T07:52:50.000Z</published>
    <updated>2020-05-02T07:52:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><h3 id="소프트웨어-개발-방법론의-개념"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론의-개념"></a> 소프트웨어 개발 방법론의 개념</h3><ul><li><u>소프트웨어 개발, 유지보수</u> 등에 필요한 여러 가지 일들의 수행 방법과 이러한 일들을 효율적으로 수행하려는 과정에서 필요한 <u>각종 기법 및 도구를 체계적으로 정리하여 표준화</u>한 것</li><li>소프트웨어 개발 방법론의 목적은 <u>소프트웨어 생산성과 품질 향상</u></li><li>개발 방법론의 종류<ul><li>구조적 방법론</li><li>정보공학 방법론</li><li>객체지향 방법론</li><li>컴포넌트 기반 방법론</li><li>애자일 방법론</li><li>제품 계열 방법론</li></ul></li></ul><h4 id="1-구조적-방법론"><a class="markdownIt-Anchor" href="#1-구조적-방법론"></a> 1. 구조적 방법론</h4><ul><li>폭포수 모델과 같이 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 <u>문서화하는 체계적인 분석 이론</u></li><li>프로그램 <u>로직 중심의 방법론</u></li><li>쉬운 이해 및 검증 가능한 <u>프로그램 코드 생성이 목적</u></li></ul><h4 id="2-정보공학-방법론"><a class="markdownIt-Anchor" href="#2-정보공학-방법론"></a> 2. 정보공학 방법론</h4><ul><li>정보시스템 개발에 <u>필요한 관리절차와 작업기법을 체계화한 방법론</u></li><li><u>자료(Data) 중심의 방법론</u></li><li><u>대규모 정보시스템을 구축</u>하는데 적합</li></ul><h4 id="3-객체지향-방법론"><a class="markdownIt-Anchor" href="#3-객체지향-방법론"></a> 3. 객체지향 방법론</h4><ul><li>현실 세계의 개체를 기계의 부품처럼 하나의 객체로 만들어, <u>객체들을 조립해서 필요한 소프트웨어를 구현</u>하는 방법론</li><li>설계 시 <u>자료와 자료에 가해지는 프로세서를 묶어 정의</u>하고 관계를 규명</li><li>객체지향 방법론의 구성 요소에는 클래스, 객체, 메시지</li><li>특징<ul><li>캡슐화</li><li>정보은닉</li><li>추상화</li><li>상속성</li><li>다형성</li></ul></li></ul><h4 id="4-cbd-componet-based-development-컴포넌트-기반-방법"><a class="markdownIt-Anchor" href="#4-cbd-componet-based-development-컴포넌트-기반-방법"></a> 4. CBD; Componet Based Development 컴포넌트 기반 방법</h4><ul><li>기존의 시스템이나 소프트웨어를 구성하는 <u>컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론</u></li><li>컴포넌트의 <b>재사용</b>이 가능하여 시간과 노력을 절감</li><li><u>유지 보수 비용을 최소화하고 생산성 및 품질을 향상</u></li></ul><h4 id="5-agile-애자일-방법론"><a class="markdownIt-Anchor" href="#5-agile-애자일-방법론"></a> 5. Agile 애자일 방법론</h4><ul><li><u>고객의 요구사항 변화에 유연하게 대응</u>할 수 있도록 일정한 주기를 반복하면서 개발 과정을 진행하는 방법론</li><li>소규모 프로젝트, 고도로 숙달된 개발자, 급변하는 요구사항에 적합</li></ul><h4 id="6-제품-계열-방법론"><a class="markdownIt-Anchor" href="#6-제품-계열-방법론"></a> 6. 제품 계열 방법론</h4><ul><li><u>특정한 제품에 적용하고 싶은 <b>공통된 기능</b>을 정의하여 개발</u>하는 방법론</li><li><u>임베디드 소프트웨어</u>를 만드는데 적합<ul><li>입베디드 SW</li><li>디지털TV, 냉장고 등 해당 제품의 특정기능에 맞게 특화되어 제품 자체에 포함된 SW</li></ul></li><li>영역공학<ul><li>영역 분석, 영역 설계, 핵심 자산을 구현하는 영역</li></ul></li><li>응용공학<ul><li>제품 요구 분석, 제품 설게, 제품을 구현하는 영역</li></ul></li><li>영역공학과 응용공학의 연계를 위해 제품의 요구사항, 아키텍처, 조립 생산이 필요</li></ul><h3 id="소프트웨어-개발-방법론-결정"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-결정"></a> 소프트웨어 개발 방법론 결정</h3><ul><li>프로젝트 관리와 재사용 현황을 소프트웨어 개발 방법론에 반영하고, 확정된 소프트웨어 생명 주기와 개발 방법론에 맞춰 소프트웨어 개발 단계, 활동, 작업, 절차 등을 정의하는 것</li></ul><h3 id="소프트웨어-개발-방법론-결정-절차"><a class="markdownIt-Anchor" href="#소프트웨어-개발-방법론-결정-절차"></a> 소프트웨어 개발 방법론 결정 절차</h3><ol><li><u>프로젝트 관리</u>와 <u>재사용 현황</u>을 소프트웨어 개발 방법론에 반영</li><li>개발 단계별 작업 및 절차를 소프트웨어 생명 주기에 맞춰 수립</li><li>결정된 소프트웨어 개발 방법론의 개발 단계별 활동 목적, 작업 내용, 산출물에 대한 매뉴얼 작성</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론선정&quot;&gt;&lt;/a&gt; SW개발방법론선정&lt;/h2&gt;
&lt;h3 id=&quot;소프트웨어-개발-방법론의-개념&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/"/>
    
  </entry>
  
  <entry>
    <title>SW개발 방법론 활용 - SW 생명주기 모델</title>
    <link href="https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0%EB%AA%A8%EB%8D%B8/"/>
    <id>https://hyeonukdev.github.io/2020/05/02/Engineer_Information_Processing/ch18_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/SW%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0%EB%AA%A8%EB%8D%B8/</id>
    <published>2020-05-02T06:44:24.000Z</published>
    <updated>2020-05-02T06:44:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sw개발방법론활용"><a class="markdownIt-Anchor" href="#sw개발방법론활용"></a> SW개발방법론활용</h2><h2 id="sw개발방법론선정"><a class="markdownIt-Anchor" href="#sw개발방법론선정"></a> SW개발방법론선정</h2><ul><li><u>소프트웨어 개발 생명주기 모델</u>의 개념과 모델 종류별 특징을 이해</li><li>정형화된 <u>개발방법론의 특징</u>을 고려하여 응용 소프트웨어 특성에 맞는 개발방법론을 선정</li><li>소프트웨어 공학기술의 요구사항 분석 기법인 <u>요구 공학 방법론을 이해</u></li><li><u>소프트웨어 비용 산정 모델</u>의 종류와 특징을 이해</li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><ul><li>소프트웨어 개발 생명 주기<ul><li>타당성검토 -&gt; 분석 -&gt; 설계 -&gt; 개발 -&gt; 테스트 -&gt; 운영 -&gt; 유지보수 -&gt; 폐기단계의 생명주기를 가짐</li></ul></li><li>요구공학<ul><li>요구사항을 정의하고, 문서화, 관리하는 프로세스</li></ul></li></ul><h4 id="software-life-cycle-소프트웨어-개발-생명주기-개념"><a class="markdownIt-Anchor" href="#software-life-cycle-소프트웨어-개발-생명주기-개념"></a> Software Life Cycle 소프트웨어 개발 생명주기 개념</h4><ul><li>소프트웨어를 어떻게 <u>개발</u>할 것인가에 대한 추상적 표현으로 <u>순차적 또는 병렬적 단계</u>로 나눈 것</li><li>소프트웨어 생명주기를 표현하는 형태</li><li>소프트웨어 개발 생명주기<ul><li>타당성검토 -&gt; 분석 -&gt; 설계 -&gt; 개발 -&gt; 테스트 -&gt; 운영 -&gt; 유지보수 -&gt; 폐기</li></ul></li><li>개발자는 <u>문제의 유형이나 개발 방법 등에 따라 특정 모델을 선택</u></li><li>소프트웨어 생명주기 모델 종류<ul><li>폭포수 모델</li><li>프로토타입 모델</li><li>나선형 모델</li><li>애자일 모델</li></ul></li></ul><h4 id="1-waterfall-model-폭포수-모델"><a class="markdownIt-Anchor" href="#1-waterfall-model-폭포수-모델"></a> 1. Waterfall Model 폭포수 모델</h4><ul><li><u>각 단계를 확실히 완료</u>한 후 그 결과를 검토하고 <u>승인 과정</u>을 거친 후 다음 단계를 진행하는 개발 방법론</li><li><u>고전적 라이프 사이클 패러다임</u>이라고 하며, 개발 과정의 앞 단계가 완료되어야만 다음 단계로 넘어갈 수 있는 <u>선형 순차적 모형</u></li><li><img src="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F99D62F3359ADDCFE28" alt="폭포수모델" /></li></ul><h4 id="2-prototype-model-프로토타입-모델"><a class="markdownIt-Anchor" href="#2-prototype-model-프로토타입-모델"></a> 2. Prototype Model 프로토타입 모델</h4><ul><li><u>사용자 요구사항을 정확히 파악</u>하기 위해 실제 개발될 <u>소프트웨어에 대한 프로토타입을 만들어 최종 결과물을 예측</u>하는 모형</li><li>시제품은 발주자나 개발자 모두에게 공동의 참조 모델을 제공</li><li>최종 결과물이 만들어지기 전에 의뢰자가 최종 결과물의 일부 또는 모형을 볼 수 있음</li><li><u>추후 구현 단계에성의 구현의 골격이 됨</u></li><li>소프트웨어 개발이 완료된 시점에서 오류가 발견되는 <u>폭포수 모형의 단점을 보완</u>하기 위한 모형</li><li><img src="https://lh3.googleusercontent.com/proxy/WJTb4WBSlrTj-hjGqXL9ezCJ8GnC4OzB0Cv9wEaTcJMHXXikKcHPng6yw6EOoUAcxIMtOqn50_5KUPMa1ptWSR_p36Z3rSnyn8wbq4YuYe7ERzsQBw" alt="프로토타입모델" /></li></ul><h4 id="3-spiral-model-나선형-모델"><a class="markdownIt-Anchor" href="#3-spiral-model-나선형-모델"></a> 3. Spiral Model 나선형 모델</h4><ul><li>보헴이 제안한 것으로, <u>폭포수 모형과 프로토타입 모형의 장점에 <b>위험 분석 기능</b>을 추가</u>한 모형</li><li>나선을 따라 돌 듯이 여러 번의 소프트웨어 개발 과정을 거쳐 점진적으로 완벽하게 소프트웨어를 개발하는 것으로 <u>점진적 모형</u>이라고도 함</li><li>개발 순서<ul><li>계획 및 정의 -&gt; 위험 분석 -&gt; 공학적 개발 -&gt; 고객평가</li></ul></li><li>소프트웨어를 개발하면서 발생할 수 있는 <u>위험을 관리하고 최소화하는 것이 목적</u></li><li>비용이 많이 들고 시간이 오래 걸리는 <b>대규모</b> <u>시스템 구축에 적합함</u></li></ul><h4 id="4-agile-model-애자일-모델"><a class="markdownIt-Anchor" href="#4-agile-model-애자일-모델"></a> 4. Agile Model 애자일 모델</h4><ul><li>애자일은 ‘민첩한’, '기민한’이라는 의미</li><li>스프린트 또는 이터레이션이라고 불리는 <u><b>짧은 개발 주기를 반복</b>하며 개발과정 진행</u></li><li><u>각 개발주기마다 만들어지는 결과물</u>에 대한 <b>고객의 평가와 요구를</b> 적극적으로 수용</li><li><u><b>소규모 프로젝트</b>, 고도로 숙달된 개발자, 급변하는 요구사항에 적합</u></li><li><img src="https://post-phinf.pstatic.net/MjAxODEwMDJfMTQg/MDAxNTM4NDQ5NzM1MTM5.BpLR3vJkFRD5OBMWcyXG1qlE0pMsRhafMIV8MssiY1gg.vuCWTel5XbZTtId_F-Lp3Rh_I2Ckw6DRsoX9shdGtDIg.PNG/%EC%95%A0%EC%9E%90%EC%9D%BC%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4.png?type=w1200" alt="애자일모델" /></li><li>애자일 개발 핵심 4가지<ol><li>프로세스와 도구보다 <u>개인과 그들의 협업</u>에 더 가치를 둔다.</li><li>포괄적인 문서화보다 <u>제대로 작동</u>하는 소프트웨어에 더 가치를 둔다.</li><li>계약 협상보다 <u>고객과의 협력</u>에 더 가치를 둔다.</li><li>계획에 따르기보다 <u>변화에 대응</u>하는 것에 더 가치를 둔다.</li></ol></li><li>개발 모형<ul><li>SCRUM<ul><li>매일 정해진 시간에 정해진 장소에서 짧은 시간의 개발을 하는 팀을 위한 프로젝트 관리 중심의 방법론</li><li>30일 마다 동작 가능한 제품을 제공하는 스프린트(Sprint)를 중심으로 한다.</li><li>Backlog : 제품과 프로젝트에 대한 요구사항</li><li>Sprint : 30일 단위 반복(Iteration)의 짧은 개발기간으로 분리하여 반복적 수행</li><li>스크럼미팅 : 매일15분 정도 미팅으로 오늘과 내일의 해야 할 일 계획 수립</li><li>스크럼마스터 : 프로젝트 리더, 스크럼 수행 시 문제 인식 및 해결하고자 노력</li></ul></li><li>XP : eXtreme Programming<ul><li>의사소통 개선과 즉각적인 피드백에 의한 단순한 코딩으로 SW품질을 높이기 위한 방법론</li><li>1~3주 반복(Iteration)</li><li>5가지 갗치<ul><li>용기</li><li>단순성</li><li>의사소통</li><li>피드백</li><li>존경</li></ul></li></ul></li><li>Kanban</li><li>Lean<ul><li>도요타 생산시스템을 재정립한 경영 방법론인 Lean 시스템의 품질기법을 소프트웨어 개발에 적용한 개발 방법론</li><li>낭비요소 제거를 통한 프로세스 향상이 목적</li><li>7가지 원칙<ul><li>낭비제거</li><li>품질 내재화</li><li>지식 창출</li><li>늦은 확정</li><li>빠른 인도</li><li>사람 존중</li><li>전체 최적화</li></ul></li></ul></li><li>Crystal</li><li>ASD : Adaptive Software Development</li><li>FDD : Feature Driven Development</li><li>DSDM : Dynamic System Development Method</li><li>DAD : Disciplined Agile Delivery</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sw개발방법론활용&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sw개발방법론활용&quot;&gt;&lt;/a&gt; SW개발방법론활용&lt;/h2&gt;
&lt;h2 id=&quot;sw개발방법론선정&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="SW개발방법론선정" scheme="https://hyeonukdev.github.io/tags/SW%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%84%A0%EC%A0%95/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-01T13:20:18.000Z</published>
    <updated>2020-05-01T13:20:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db구축관리"><a class="markdownIt-Anchor" href="#db구축관리"></a> DB구축관리</h2><h3 id="1-it신기술-및-데이터베이스-기술-트렌드-정보"><a class="markdownIt-Anchor" href="#1-it신기술-및-데이터베이스-기술-트렌드-정보"></a> 1. IT신기술 및 데이터베이스 기술 트렌드 정보</h3><ul><li>빅데이터</li><li>브로드 데이터</li><li>디지털 아카이빙</li><li>메타 데이터</li><li>데이터 다이어트</li><li>하둡</li><li>타조</li></ul><h3 id="2-데이터베이스-관리기능"><a class="markdownIt-Anchor" href="#2-데이터베이스-관리기능"></a> 2. 데이터베이스 관리기능</h3><ul><li>회복<ul><li>트랜잭션들을 수행하는 도중에 <u>장애가 발생하여</u> 데이터베이스가 손상되었을 때 <u>손상되기 이전의 정상 상태로 복구</u>하는 작업</li></ul></li><li>병행제어<ul><li><u>동시에 여러 개의 트랜잭션을 병행 수행할 때, 동시에 실행되는 트랜잭션들이 데이터베이스의 일관성을 파괴하지 않도록 트랜잭션 간의 상호작용을 제어하는 것</u></li></ul></li></ul><h3 id="3-데이터베이스-표준화"><a class="markdownIt-Anchor" href="#3-데이터베이스-표준화"></a> 3. 데이터베이스 표준화</h3><ul><li>시스템을 구성하는 데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것</li><li>데이터베이스 표준화 구성요소<ul><li>데이터 표준</li><li>데이터 관리조직</li><li>데이터 표준화 절차</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - DB 표준화</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%ED%91%9C%EC%A4%80%ED%99%94/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%ED%91%9C%EC%A4%80%ED%99%94/</id>
    <published>2020-05-01T13:04:38.000Z</published>
    <updated>2020-05-01T13:04:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db표준화"><a class="markdownIt-Anchor" href="#db표준화"></a> DB표준화</h2><h3 id="데이터-표준화의-개념"><a class="markdownIt-Anchor" href="#데이터-표준화의-개념"></a> 데이터 표준화의 개념</h3><ul><li>시스템을 구성하는 <u>데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것</u></li><li>데이터 표준화 작업은 데이터의 정확한 의미를 파악할 수 잇게 할 뿐 만아니라 데이터에 대한 상반된 시각을 조정하는 역할을 수행</li></ul><h3 id="데이터-표준화의-대상"><a class="markdownIt-Anchor" href="#데이터-표준화의-대상"></a> 데이터 표준화의 대상</h3><ul><li>데이터 명칭<ul><li>데이터를 유일하게 구분할 수 있는 유일성, 의미 전달의 충분성, ㄱ리고 업무적 보편성을 갖는 이름으로 정의</li></ul></li><li>데이터 정의<ul><li>데이터를 제3자의 입장에서도 쉽게 이해할 수 있도록 해당 데이터가 의미하는 범위 및 자격 요건을 규정</li></ul></li><li>데이터 형식<ul><li>업무 규칙 및 사용 목적과 유사한 데이터에 대해 일관되게 데이터 형식을 정의함으로써 데이터 입력 오류, 통제 위험 등을 최소화</li></ul></li><li>데이터 규칙<ul><li>기본 값, 허용 값, 허용 범위 등과 같이 발생할 수 있는 데이터 값을 사전에 지정함으로써 데이터의 정합성 및 완전성을 향상</li></ul></li></ul><h3 id="데이터-표준화의-기대효과"><a class="markdownIt-Anchor" href="#데이터-표준화의-기대효과"></a> 데이터 표준화의 기대효과</h3><ul><li>동일한 데이터에 대해 동일한 명칭을 지정하면서 <u>명확한 의사소통 가능</u></li><li>표준화된 데이터를 사용하면 필요한 데이터의 의미나 위치 등을 쉽게 파악 가능</li><li>데이터 표준에 따라 데이터 형식 및 규칙을 적용하면 <u>입력 오류를 방지하고 잘못된 데이터로 인한 의사 결정의 오류를 줄여 데이터 품질을 향상</u></li><li>데이터 표준에 따라 데이터를 전사적으로 관리하면 시스템 간 데이터 공유 시 데이터 변환이나 정제 작업을 수행하지 않아도 됨</li><li>향후 <u>데이터 유지보수 및 운영의 효율성, 관리 비용 절감 가능</u></li></ul><h3 id="데이터-표준"><a class="markdownIt-Anchor" href="#데이터-표준"></a> 데이터 표준</h3><ul><li>데이터 모델이나 데이터베이스에서 정의할 수 있는 모든 <u>오브젝트를 대상</u>으로 데이터 표준화를 수행하는 것이 <u>이상적이나 주로 관리해야될 필요성이 있는 오브젝트만</u>을 대상으로 데이터 표준화</li><li>데이터 표준의 종류<ul><li>표준 단어<ul><li>업무에서 사용하고 일정한 의미를 갖고 있는 최소 단위의 단어를 의미</li></ul></li><li>표준 도메인<ul><li>문자형, 숫자형, 날짜형, 시간형과 같이 칼럼을 성질에 따라 그룹핑한 개념</li></ul></li><li>표준 코드<ul><li>선택할 수 있는 값을 정형화하기 위해 기준에 맞게 이미 정의된 코드 값</li></ul></li><li>표준 용어<ul><li>단어, 도메인, 코드 표준이 정의되면 이를 바탕으로 표준 용어를 구성</li></ul></li></ul></li></ul><h3 id="데이터-관리-조직"><a class="markdownIt-Anchor" href="#데이터-관리-조직"></a> 데이터 관리 조직</h3><ul><li>전사적으로 수립된 데이터 표준 원칙, 데이터 표준, 데이터 표준 준수 여부 관리 등을 위해서 데이터관리자 역할이 요구됨</li></ul><h3 id="데이터-표준화-절차"><a class="markdownIt-Anchor" href="#데이터-표준화-절차"></a> 데이터 표준화 절차</h3><ol><li>데이터 표준화 요구사항 수집<ul><li>데이터표준화와 관련된 요구사항 수집</li><li>시스템별 데이터 표준 수집</li><li>표준화 현황 진단</li></ul></li><li>데이터 표준 정의<ul><li>표준화 원칙 정의</li><li>표준 용아, 표준 단어, 표준 도메인, 표준 코드 등을 데이터 표준 정의</li></ul></li><li>데이터 표준 확정<ul><li>데이터 표준 검토, 확정, 공표</li></ul></li><li>데이터 표준 관리<ul><li>데이터 표준 적용, 준수, 검사 등 데이터 표준 관리절차 수립</li><li>데이터 표준 이행</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db표준화&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB표준화" scheme="https://hyeonukdev.github.io/tags/DB%ED%91%9C%EC%A4%80%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - DB 관리 기능</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A6%AC%EA%B8%B0%EB%8A%A5/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A6%AC%EA%B8%B0%EB%8A%A5/</id>
    <published>2020-05-01T12:51:25.000Z</published>
    <updated>2020-05-01T12:51:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db구축관리"><a class="markdownIt-Anchor" href="#db구축관리"></a> DB구축관리</h2><h3 id="db관리기능"><a class="markdownIt-Anchor" href="#db관리기능"></a> DB관리기능</h3><h3 id="회복"><a class="markdownIt-Anchor" href="#회복"></a> 회복</h3><h4 id="1-recovery-회복의-개념"><a class="markdownIt-Anchor" href="#1-recovery-회복의-개념"></a> 1. Recovery 회복의 개념</h4><ul><li>트랜잭션들을 수행하는 도중에 <u>장애가 발생하여</u> 데이터베이스가 손상되었을 때 <u>손상되기 이전의 정상 상태로 복구</u>하는 작업<ul><li>트랜잭션<ul><li>데이터베이스의 상태를 변환시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산</li></ul></li></ul></li></ul><h4 id="2-장애의-유형"><a class="markdownIt-Anchor" href="#2-장애의-유형"></a> 2. 장애의 유형</h4><ul><li>트랜잭션 장애<ul><li>입력 데이터 오류, 불명확한 데이터, 시스템 자원 요구의 과다등 트랜잭션 내부의 비정상적인 상황으로 인하여 프로그램 실행이 중지되는 현상</li></ul></li><li>시스템 장애<ul><li>데이터베이스에 손상을 입히지는 않으나 하드웨어 오동작, 소프트웨어의 손상, 교착 상태 등에 의해 모든 트랜잭션의 연속적인 수행에 장애를 주는 현상</li></ul></li><li>미디어 장애<ul><li>저장장치인 디스크 블록의 손상이나 디스크 헤드의 충돌 등에 의해 데이터베이스의 일부 또는 전부가 물리적으로 손상된 상태</li></ul></li></ul><h4 id="3-recovery-management-회복-관리기"><a class="markdownIt-Anchor" href="#3-recovery-management-회복-관리기"></a> 3. Recovery Management 회복 관리기</h4><ul><li>회복관리기는 DBMS의 구성요소</li><li><u>트랜잭션 실행이 성공적으로 완료되지 못하면</u> 트랜잭션이 데이터베이스에 생성했던 <u>모든 변화를 취소(Undo)</u>시키고 <u>트랜잭션 수행 이전의 원래 상태로 복구</u>하는 역할</li><li>메모리 덤프, 로그를 이용하여 회복을 수행</li></ul><h3 id="병행제어"><a class="markdownIt-Anchor" href="#병행제어"></a> 병행제어</h3><h4 id="1-concurrency-control-병행제어의-개념"><a class="markdownIt-Anchor" href="#1-concurrency-control-병행제어의-개념"></a> 1. Concurrency Control 병행제어의 개념</h4><ul><li><u>동시에 여러 개의 트랜잭션을 병행 수행할 때, 동시에 실행되는 트랜잭션들이 데이터베이스의 일관성을 파괴하지 않도록 트랜잭션 간의 상호작용을 제어하는 것</u></li></ul><h4 id="2-병행제어의-목적"><a class="markdownIt-Anchor" href="#2-병행제어의-목적"></a> 2. 병행제어의 목적</h4><ul><li>데이터베이스의 공유를 최대화</li><li>시스템의 활용도를 최대화</li><li>데이터베이스의 일관성을 <b>유지</b></li><li>사용자에 대한 응답 시간을 최소화</li></ul><h4 id="3-병행수행의-문제점"><a class="markdownIt-Anchor" href="#3-병행수행의-문제점"></a> 3. 병행수행의 문제점</h4><ul><li>병행제어 기법에 의한 제어없이 <u>트랜잭션들이 데이터베이스에 동시에 접근하도록 허용하는 경우 발생하는 문제점</u><table><thead><tr><th>문제점</th><th>설명</th></tr></thead><tbody><tr><td>갱신분실</td><td>두 개 이상의 트랜잭션이 같은 자료를 공유하여 갱신할 때 갱신 결과의 일부가 없어지는 현상</td></tr><tr><td>비완료 의존성</td><td>하나의 트랜잭션 수행이 실패한 후 회복되기 전에 다른 트랜잭션이 실패한 갱신 결과를 참조하는 현상</td></tr><tr><td>모순성</td><td>두 개의 트랜잭션이 병행수행 될 때 원치않는 자료를 이용함으로써 발생하는 문제</td></tr><tr><td>연쇄 복귀</td><td>병행수행되던 트랜잭션들 중 어느 하나에 문제가 생겨 Rollback하는 경우 다른 트랜잭션도 함께 Rollback되는 현상</td></tr></tbody></table></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB관리기능" scheme="https://hyeonukdev.github.io/tags/DB%EA%B4%80%EB%A6%AC%EA%B8%B0%EB%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>DB구축관리 - DB 관련 신기술</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/DB%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/</id>
    <published>2020-05-01T08:34:12.000Z</published>
    <updated>2020-05-01T08:34:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="db구축관리"><a class="markdownIt-Anchor" href="#db구축관리"></a> DB구축관리</h2><ul><li><u>데이터베이스와 관련된 IT신기술의 종류</u>와 특징을 이해</li><li>데이터베이스 관리 기능으로 <u>회복과 병행제어</u>의 개념 이해</li><li><u>데이터베이스 표준화의 개념과 구성요소를 이해</u></li></ul><h3 id="용어사전"><a class="markdownIt-Anchor" href="#용어사전"></a> 용어사전</h3><pre><code>- 데이터 표준화    - 시스템을 구성하는 데이터 요소의 명칭, 정의, 형식, 규칙에 대한 원칙을 수립하고 적용하는 것</code></pre><h3 id="db-관련-신기술"><a class="markdownIt-Anchor" href="#db-관련-신기술"></a> DB 관련 신기술</h3><h4 id="1-big-data-빅데이터"><a class="markdownIt-Anchor" href="#1-big-data-빅데이터"></a> 1. Big Data 빅데이터</h4><ul><li>기존의 관리 방법이나 분석체계로는 처리하기 어려운 <u>막대한 양의 정형 또는 비정형 데이터의 집합</u>으로 스마트 단말기의 빠른 확산, 소셜 네트워크 서비스의 활성화, 사물 네트워크의 확대로 데이터 폭발이 가속화됨</li><li>3가지 특징<ul><li>Volume 데이터의 양</li><li>Velocity 데이터 생성 속도</li><li>Variety 형탱의 다양성</li></ul></li></ul><h4 id="2-broad-data-브로드-데이터"><a class="markdownIt-Anchor" href="#2-broad-data-브로드-데이터"></a> 2. Broad Data 브로드 데이터</h4><ul><li><u>다양한 채널에서 소비자의 상호 작용</u>을 통해 생성된 기업 마케팅에 있어 효율적이고 다양한 데이터이며, 이전에 사용하지 않거나 알지 못했던 새로운 데이터나 기존 데이터에 가치가 더해진 데이터</li><li>다양한 정보를 뜻하는 것으로 소비자의 SNS 활동이나 위치 정보 등이 이에 속함</li></ul><h4 id="3-digital-archiving"><a class="markdownIt-Anchor" href="#3-digital-archiving"></a> 3. Digital Archiving</h4><ul><li>늘어나는 정보 자원의 효율적인 관리와 이용을 위해 <u>디지털 정보 자원을 장기적으로 보존하기 위한 작업</u></li><li>아날로그 콘텐츠는 <u>디지털로 변환한 후 압축해서 저장</u>하고, 디지털 콘텐츠도 체계적으로 분류하고 <u>메타 데이터를 만들어 DB화</u> 하는 작업</li></ul><h4 id="4-meta-data-메타-데이터"><a class="markdownIt-Anchor" href="#4-meta-data-메타-데이터"></a> 4. Meta Data 메타 데이터</h4><ul><li>일련의 <u>데이터를 정리하고 설명해주는 데이터</u></li><li>메타 데이터는 여러 용도로 사용되나 주로 <u>빠르게 검색하거나 내용을 간략화하고 체계적으로</u>하기 위해 많이 사용</li></ul><h4 id="5-data-diet-데이터-다이어트"><a class="markdownIt-Anchor" href="#5-data-diet-데이터-다이어트"></a> 5. Data Diet 데이터 다이어트</h4><ul><li>데이터를 삭제하는 것이 아니라 <u>압축</u>하고, 중복된 정보는 <u>중복을 배재하고</u> 새로운 기준에 따라 나누어 저장하는 작업</li><li>인터넷과 이동통신 이용이 늘면서 각 기관/기업의 데이터베이스에 쌓인 방대한 정보를 효율적으로 관리하기 위해 대두된 방안으로 같은 단어가 포함된 데이터들을 한 곳에 모다 두되 필요할 때 제대로 찾아내는 체계를 갖추는 것이 필요</li></ul><h4 id="6-hadoop-하둡"><a class="markdownIt-Anchor" href="#6-hadoop-하둡"></a> 6. Hadoop 하둡</h4><ul><li>오픈 소스를 기반으로 한 <u>분산 컴퓨팅 플랫폼</u></li></ul><h4 id="7-tajo-타조"><a class="markdownIt-Anchor" href="#7-tajo-타조"></a> 7. Tajo 타조</h4><ul><li>오픈 소스 기반 분산 컴퓨팅 플랫폼인 아파치 하둡 기반의 분산 데이터 웨어하우스 프로젝트로 우리나라가 주도하여 개발<ul><li>데이터웨어하우스<ul><li>자료와 창고의 합성어로기업의 의사결정과정에 효과적으로 사용할 수 있또록 에러시스템에 분산되어 있는 데이터를 주체별로 통합축적해 놓은 데이터베이스</li></ul></li></ul></li><li>대규모 데이터 처리와 실시간 상호 분석 모두 사용 가능</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;db구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/DB%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="DB관련신기술" scheme="https://hyeonukdev.github.io/tags/DB%EA%B4%80%EB%A0%A8%EC%8B%A0%EA%B8%B0%EC%88%A0/"/>
    
  </entry>
  
  <entry>
    <title>HW구축관리 - 핵심정리</title>
    <link href="https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    <id>https://hyeonukdev.github.io/2020/05/01/Engineer_Information_Processing/ch19_IT%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%A0%95%EB%B3%B4%EC%8B%9C%EC%8A%A4%ED%85%9C%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/</id>
    <published>2020-05-01T08:29:57.000Z</published>
    <updated>2020-05-01T08:29:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="it프로젝트정보시스템구축관리"><a class="markdownIt-Anchor" href="#it프로젝트정보시스템구축관리"></a> IT프로젝트정보시스템구축관리</h2><h2 id="hw구축관리"><a class="markdownIt-Anchor" href="#hw구축관리"></a> HW구축관리</h2><h3 id="1-it-신기술-및-서버장비-트렌드-정보"><a class="markdownIt-Anchor" href="#1-it-신기술-및-서버장비-트렌드-정보"></a> 1. IT 신기술 및 서버장비 트렌드 정보</h3><ul><li>하드웨어 관련 신기술<ul><li>3D 프린팅</li><li>엠디스크</li><li>멤리스트</li><li>네트워크 가상화</li><li>앤 스크린</li><li>RAID</li><li>서버 가상화</li></ul></li></ul><h3 id="2-서버장비-운영"><a class="markdownIt-Anchor" href="#2-서버장비-운영"></a> 2. 서버장비 운영</h3><ul><li>서버 장비 운영 요소<ul><li>서버 장비 뿐만 아니라 스토리지, 운영체제, 고가용성 장비, 보안 솔루션등 정보 시스템 운영에 필요한 모든 것들을 포함</li></ul></li><li>저방 장치<ul><li>DAS</li><li>NAS</li><li>SAN</li></ul></li><li>Secure OS<ul><li>기존의 운영체제에 내재된 보안 취약점을 해소하기 위해 보안 기능을 갖춘 커널을 추가한 운영체제</li></ul></li><li>High Availability<ul><li>안정적인 서비스 운영을 위해 장애 발생시 즉시 다른 시스템으로 대체 가능한 환경을 구축하는 메커니즘</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;it프로젝트정보시스템구축관리&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#it프로젝트정보시스템구축관리&quot;&gt;&lt;/a&gt; IT프로젝트정보시스템구축관리&lt;/h2&gt;
&lt;h2 id=&quot;hw구축관리&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="HW구축관리" scheme="https://hyeonukdev.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/HW%EA%B5%AC%EC%B6%95%EA%B4%80%EB%A6%AC/"/>
    
    
      <category term="정보처리기사" scheme="https://hyeonukdev.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/"/>
    
      <category term="핵심정리" scheme="https://hyeonukdev.github.io/tags/%ED%95%B5%EC%8B%AC%EC%A0%95%EB%A6%AC/"/>
    
  </entry>
  
</feed>
